{
  "openapi": "3.0.3",
  "info": {
    "title": "Digital Bank API",
    "version": "V1.4",
    "description": "<b>Open Connect</b> is a modern, integrated and a highly scalable payment switch platform with an efficient service-oriented architecture approach. The platform is completely independent and has a multiplayer design. The core technology for messaging is based on Queue manager, which is a highly scalable MQ system, which can be horizontally scaled to run on a cluster of machines. The deployment can be done on Virtual environment as well as containerized environment.\n\n  # Updates In Latest Version\n\n  1. <b>Updated the description for correlation id</b>\n\n\n  # API Code Reference\n  This section contains lists of <b>purpose codes</b> and <b>response codes</b> utilized or generated by APIs\n\n  ## Purpose Codes\n  This data element is used to carry payment details in IBFT and RAAST Transfer transaction. The payment may be between business to business (B2B), business to consumer (B2C), consumer to business (C2B), business to government (B2G), and government to consumer (G2C) etc.\n\n  <a id=\"purp-code\"></a>\n  | Code  | Particulars                                |\n  |-------|--------------------------------------------|\n  | 0101  | Vendor Payments - Software                |\n  | 0102  | Vendor Payments - Hardware                |\n  | 0103  | Vendor Payments – Spare parts             |\n  | 0104  | Vendor Payments - Services                |\n  | 0105  | Vendor Payments – Advance Payment         |\n  | 0106  | Vendor Payments - Refunds                 |\n  | 0107  | Distributor Payments - Goods              |\n  | 0108  | Distributor Payment – Expired Items       |\n  | 0109  | Distributor PMT – DISC on Early Payment   |\n  | 0110  | Exchange Items/Returns                    |\n  | 0111  | Distributor Refunds                       |\n  | 0112  | Merchant Payments - Goods                |\n  | 0113  | Merchant Payments – Expired Items         |\n  | 0114  | Merchant Payments – Exchange / Returns    |\n  | 0115  | Merchant Payments – Commission            |\n  | 0116  | Supplier Payments - Goods                |\n  | 0117  | Supplier Payments – Spare parts           |\n  | 0118  | Supplier Payments – Returns and refunds   |\n  | 0119  | Advertising Payments                      |\n  | 0120  | Professional Services                    |\n  | 0121  | Commercial investments                   |\n  | 0122  | Vendor Payment                            |\n  | 0123  | Supplier/Distributor Payment              |\n  | 0201  | International Remittance Disbursement     |\n  | 0202  | Loan Disbursements – Personal Loan        |\n  | 0203  | Loan Disbursements – Car Loan             |\n  | 0204  | Loan Disbursements – Home Loan            |\n  | 0205  | Loan Disbursements – Running Finance      |\n  | 0206  | Loan DISB - Working Capital - OD           |\n  | 0207  | Loan DISB - Working Capital – FE Loans     |\n  | 0208  | Loan Disbursements - Import Financing     |\n  | 0209  | Loan DISB - Pre & Post Shipment Export     |\n  | 0210  | Loan Disbursements LMM Funding            |\n  | 0211  | Trade Services                            |\n  | 0212  | Term Deposit Encashment                   |\n  | 0213  | Profit Payments - Monthly                 |\n  | 0214  | Profit Payments - Quarterly               |\n  | 0215  | Profit Payments – Half Yearly             |\n  | 0216  | Profit Payments - Yearly                 |\n  | 0217  | Profit Payments – Daily                   |\n  | 0218  | Dividends                                 |\n  | 0219  | Shares Encashment                        |\n  | 0220  | Car Claim - Bodily Injury Claims          |\n  | 0221  | Third Party Car Insurance Claims          |\n  | 0222  | Auto Theft and Vandalism Claims           |\n  | 0223  | Car Loss of value to vehicle              |\n  | 0224  | Insurance Claims - Car Personal injury    |\n  | 0225  | Car Injury by uninsured defendant         |\n  | 0226  | Car  Coverage for rental car repair       |\n  | 0227  | INS Claim Medical - Hospital stays         |\n  | 0228  | INS Claim Medical - Doctor visits          |\n  | 0229  | INS Medical claim-Emergency medical care   |\n  | 0230  | INS Claim Medical – Surgeries             |\n  | 0231  | INS Claim Medical - Medical Prescription  |\n  | 0232  | INS Property Claim- Theft & damage        |\n  | 0233  | INS Claim - Land contamination             |\n  | 0234  | INS Claim - Damage - appliance failure     |\n  | 0235  | INS Claim - Damage due to mold            |\n  | 0236  | INS Claim - Replacement cost issues        |\n  | 0237  | INS Claim Catastrophe - Flood damage       |\n  | 0238  | INS Claim Catastrophe - Hail damage        |\n  | 0239  | INS Claim  Wildfire related losses         |\n  | 0240  | INS Claim - Tornado damage                 |\n  | 0241  | INS Claim - Hurricane damage               |\n  | 0242  | INS Claim - Earthquake damage              |\n  | 0243  | INS Claim - Lightning strike               |\n  | 0244  | INS Claim - Excessively strong winds       |\n  | 0245  | INS Claim - Blizzard damage                |\n  | 0246  | Customer Refunds – Gift Card               |\n  | 0247  | Customer Refunds – Store Credit            |\n  | 0248  | Customer Refunds – Cash Back               |\n  | 0249  | Customer Refunds – Exchanges / Refunds     |\n  | 0250  | Tax Refund                                |\n  | 0251  | Family support                            |\n  | 0252  | Medical payment                           |\n  | 0253  | Transport payment                         |\n  | 0254  | Loan Payment                             |\n  | 0301  | Utility Bill Payments – Electricity       |\n  | 0302  | Utility Bill Payments – Gas                |\n  | 0303  | Utility Bill Payments – Internet           |\n  | 0304  | Utility Bill Payment – Telecommunication   |\n  | 0305  | Utility Bill Payments – Miscellaneous      |\n  | 0306  | Credit Card Bill Payment – Min Payment     |\n  | 0307  | Credit Card Bill Payments – Full Payment   |\n  | 0308  | Credit Card Bill PMT – Partial Payment     |\n  | 0309  | Loan Re-payments – Personal Loan           |\n  | 0310  | Loan Re-payments – Car Loan                |\n  | 0311  | Loan Re-payments – Home Loan               |\n  | 0312  | Loan Re-payments – Running Finance         |\n  | 0313  | Loan Re-payments – Instalments             |\n  | 0314  | Loan Re-payments – Full Payment            |\n  | 0315  | Online Purchases                          |\n  | 0316  | Insurance Premium / Underwriting           |\n  | 0317  | Subscriptions                             |\n  | 0318  | Donations – Financial Contributions        |\n  | 0319  | Donations – Sponsorships                  |\n  | 0320  | Donations – Charity                      |\n  | 0321  | Donation - TCF                           |\n  | 0322  | Donation – Shaukat Khanum                 |\n  | 0323  | Donation – Aman Foundation                |\n  | 0324  | Donation – Edhi Foundation                |\n  | 0326  | PIB Payments                             |\n  | 0325  | CDC payments - IPO                       |\n  | 0327  | CDC payments – Additional payment         |\n  | 0328  | Shares & Stocks                           |\n  | 0329  | Prize Bonds                             |\n  | 0330  | Mutual Funds – Monthly Payment           |\n  | 0331  | Mutual Funds – Quarterly Payment         |\n  | 0332  | Mutual Funds – Yearly Payment            |\n  | 0333  | Voluntary Pension – Monthly Payment       |\n  | 0334  | Voluntary Pension – Quarterly Payment     |\n  | 0335  | Voluntary Pension – Yearly Payment       |\n  | 0336  | Educational Payments                     |\n  | 0337  | Educational – Registration Payment        |\n  | 0338  | Educational – Admission Fee               |\n  | 0339  | Educational – Annual Fee                  |\n  | 0340  | Educational – Semester Fee                |\n  | 0341  | Educational – Monthly Fee                 |\n  | 0342  | Educational – Exam Fee                   |\n  | 0343  | Educational – Fines / Challans            |\n  | 0344  | Educational – Module Payments             |\n  | 0345  | Educational – Late Payment                |\n  | 0346  | Educational – Tuition Fee                 |\n  | 0347  | Educational – Board Exam Fee              |\n  | 0348  | Educational – Annual Development Fee      |\n  | 0349  | Educational – Security Deposit           |\n  | 0350  | Miscellaneous Payments                   |\n  | 0351  | Hotel – Room Rent                        |\n  | 0352  | Mess                                    |\n  | 0353  | Library – Subscription                   |\n  | 0354  | Library – Monthly Fee                    |\n  | 0355  | Sports                                  |\n  | 0356  | Club – Membership Fee                    |\n  | 0357  | Club – Monthly Fee                      |\n  | 0358  | Transport                              |\n  | 0359  | Seminars - Subscription                 |\n  | 0360  | Canteen items                          |\n  | 0361  | Uniform                               |\n  | 0362  | Books                                |\n  | 0363  | Rental Services – Rent a Car          |\n  | 0364  | Tickets – Airline/ Rail / Bus / Van etc |\n  | 0365  | Tickets – Entertainment                |\n  | 0366  | Motor Freight Carriers and  Delivery   |\n  | 0367  | Courier Services                       |\n  | 0368  | Rental payments                        |\n  | 0369  | Personal investments                   |\n  | 0370  | Club/Services Fee                      |\n  | 0371  | Insurance payment (General)           |\n  | 0372  | Insurance payment ( Medical)           |\n  | 0373  | Mutual Funds                          |\n  | 0374  | Personal Loan Payment                 |\n  | 0375  | Mortgage Payment                      |\n  | 0376  | Credit Card Payment                   |\n  | 0377  | Credit Line Payment                   |\n  | 0378  | Utility Bill Payment - Water          |\n  | 0379  | QR Code Consumer to Business Payment  |\n  | 0401  | Home Remittance                       |\n  | 0402  | Donations to Individuals               |\n  | 0403  | International Remittance               |\n  | 0404  | Domestic Employment Salary            |\n  | 0405  | Zakat Payment to Individuals           |\n  | 0406  | Wallet Payment                        |\n  | 0407  | QR Code Person to Person Payment      |\n  | 0501  | Salary disbursements                   |\n  | 0502  | Pension Transfer                      |\n  | 0503  | Reimbursements                        |\n  | 0504  | Provident Fund                        |\n  | 0505  | Gratuity Payments                     |\n  | 0506  | Pension Contribution                  |\n  | 0507  | Medical Allowance                     |\n  | 0508  | TADA                                 |\n  | 0509  | Car & Fuel Allowance                  |\n  | 0510  | Mobile Allowance                      |\n  | 0511  | Bonus Disbursement                    |\n  | 0601  | Grants                               |\n  | 0602  | Tax Reversals                        |\n  | 0603  | Relief Funds                         |\n  | 0604  | Subsidy                             |\n  | 0701  | Government Welfare                   |\n  | 0702  | Social Benefits                       |\n  | 0703  | IDP Relief Fund                       |\n  | 0704  | Education Endowment                   |\n  | 0705  | Health Program                        |\n  | 0706  | Food Subsidy                          |\n  | 0707  | Income Support                        |\n  | 0708  | Senior Citizen Support                |\n  | 0709  | Pension Disbursement                   |\n  | 0710  | Salary Disbursement                    |\n  | 0711  | Zakat Disbursement                     |\n  | 0801  | Tax Payments                           |\n  | 0802  | Fine and other fees                   |\n  | 0803  | Income Tax                             |\n  | 0804  | Sales Tax                             |\n  | 0805  | Custom Duties                         |\n  | 0806  | Tax on Services                       |\n  | 0807  | Federal Excise Duty                   |\n  | 0808  | Land Revenue Taxes                    |\n  | 0809  | Property Tax                          |\n  | 0810  | Fuel Adjustment                        |\n  | 0811  | Tax on Profit                         |\n  | 0812  | Capital Gain Tax                      |\n  | 0813  | Petroleum Levy                       |\n  | 0814  | Withholding tax                       |\n  | 0815  | Tolls/ Bridge Fees                     |\n  | 0816  | Zakat / Bait-ul-Maal Payments           |\n  | 9999  | Open field to be populated by customer – Max up to 40 characters |\n\n\n  ## Response Codes\n  Response codes configured for integration between two systems are typically specific, application-level status codes that the systems use to communicate the outcome of requests and transactions between them. These custom codes are used in addition to or sometimes in place of standard HTTP status codes to provide more detailed and context-specific information about the integration process.\n\n  | Code starts with | Description                                         |\n  |------------------|-----------------------------------------------------|\n  | 01               | 1LINK assigned code for IBFT Title fetch and advise |\n  | 02               | 1LINK assigned code for bill payments               |\n  | 03               | RAAST assigned code for RAAST ID operations and RAAST P2P payments |\n  | 04               | Open Connect response code comes usually where any validation failed at middleware level |\n  | 4xx              | Default HTTP error code (4xx series)                |\n  | 5xx              | Default HTTP error code (5xx series)                |\n\n  | Response Code | Response Description                                                 |\n  |--------------|------------------------------------------------------------------|\n  | 0000         | PROCESSED OK / IBFT advice sent to beneficiary bank. It is used for IBFT status inquiry product    |\n  | 0101         | ACCOUNT LIMIT EXCEEDED                                               |\n  | 0102         | INVALID ACCOUNT/ PAYER ACCOUNT IS INVALID/WALLET NUMBER           |\n  | 0103         | ACCOUNT INACTIVE                                                     |\n  | 0104         | LOW/INSUFFICIENT BALANCE                                             |\n  | 0105         | INVALID CARD                                                         |\n  | 0106         | INVALID IMD / INVALID BANK IMD PROVIDED                             |\n  | 0107         | INVALID CARD DATA                                                    |\n  | 0108         | INVALID CARD RECORD                                                  |\n  | 0109         | FIELD ERROR                                                         |\n  | 0110         | DUPLICATE TRANSACTION                                                |\n  | 0111         | BAD TRANSACTION CODE                                                 |\n  | 0112         | INVALID CARD STATUS                                                  |\n  | 0113         | INTERNAL DATABASE ERROR                                              |\n  | 0114         | WARM CARD                                                           |\n  | 0115         | HOT CARD                                                            |\n  | 0116         | BAD CARD STATUS                                                     |\n  | 0117         | UNKNOWN AUH MODE                                                    |\n  | 0118         | INVALID TRANSACTION DATE                                            |\n  | 0119         | INVALID CURRENCY CODE                                               |\n  | 0120         | NO TRANSACTION ON IMD / PAYEE BANK IS NOT ENROLLED                |\n  | 0121         | NO TRANSACTION ON ACCT                                              |\n  | 0122         | BAD CARD CYCLE DATE                                                 |\n  | 0123         | BAD CARD CYCLE LENGTH                                               |\n  | 0124         | BAD PIN                                                             |\n  | 0125         | CARD EXPIRED                                                        |\n  | 0126         | INTERNAL ERROR                                                      |\n  | 0127         | TRANSACTION AMOUNT EXCEEDS PREAUTHORIZED APPROVAL AMOUNT          |\n  | 0128         | NO ACCOUNTS LINKED                                                 |\n  | 0130         | ORIGINAL TRANSACTION NOT FOUND                                      |\n  | 0134         | ORIGINAL NOT AUTHORIZED                                             |\n  | 0135         | ORIGINAL ALREADY REVERSED                                          |\n  | 0137         | INVALID REPLACEMENT AMOUNT                                          |\n  | 0138         | TRANSACTION CODE MISMATCH                                           |\n  | 0139         | BAD TRANSACTION TYPE / PAYER BANK IS NOT ENROLLED                  |\n  | 0141         | EXPIRY DATE MISMATCH                                                |\n  | 0145         | TRACK-2 DATA MISMATCH                                               |\n  | 0146         | UNABLE TO PROCESS                                                   |\n  | 0147         | ERROR CURRENCY CONVERSION                                           |\n  | 0148         | BAD AMOUNT/ AMOUNT RECEIVED IS NOT AGREED OR EXPECTED             |\n  | 0150         | HOST STATUS UNKNOWN                                                 |\n  | 0151         | HOST NOT PROCESSING / 1IBFT advice pending to be received by beneficiary bank |\n  | 0152         | HOST IN STANDIN MODE                                                |\n  | 0154         | SAF TRANSMIT MODE                                                   |\n  | 0155         | HOST LINK DOWN                                                      |\n  | 0156         | HOST TIMEOUT                                                        |\n  | 0158         | TRANSACTION TIMEDOUT BY MEMBER                                     |\n  | 0159         | HOST REJECT                                                         |\n  | 0160         | PIN RETRIES EXHAUSTED                                               |\n  | 0161         | TRANSACTION REJECTED, PLEASE SWITCH TO CONTACT INTERFACE           |\n  | 0162         | TRANSACTION REJECTED, PERFORM TRANSACTION AGAIN WITH CARDHOLDER AUTHENTICATION REQUIRED |\n  | 0163         | DESTINATION NOT FOUND                                               |\n  | 0164         | DESTINATION NOT REGISTERED                                          |\n  | 0165         | CASH TRANSACTION NOT ALLOWED                                        |\n  | 0166         | NO TRANSACTION ALLOWED / TRANSACTION FORBIDDEN ON THIS TYPE OF ACCOUNT / SEARCH ON OLD TRANSACTION NOT ALLOWED |\n  | 0167         | INVALID ACCOUNT STATUS                                              |\n  | 0168         | INVALID TO ACCOUNT                                                   |\n  | 0170         | REFUSED IMD                                                         |\n  | 0171         | NO PROFILE AVAILABLE                                                |\n  | 0172         | CURRENCY NOT ALLOWED                                                |\n  | 0174         | TRANSACTION SOURCE NOT ALLOWED                                      |\n  | 0175         | UNKNOWN TRANSACTION SOURCE                                          |\n  | 0176         | MANUAL ENTRY NOT ALLOWED                                            |\n  | 0177         | REFER TO ISSUER                                                    |\n  | 0178         | INVALID MERCHANT                                                    |\n  | 0179         | HONOR WITH ID                                                      |\n  | 0180         | MESSAGE FORMAT ERROR / BAD REQUEST                                  |\n  | 0181         | SECURITY VIOLATION / DEVICE NOT ALLOWED FOR BIO-METRIC TRANSACTION (NON-LFD) |\n  | 0182         | MAIL ORDER NOT ALLOWED                                             |\n  | 0186         | INCORRECT PIN LENGTH                                                |\n  | 0190         | CUSTOMER NOT FOUND                                                  |\n  | 0191         | ISSUER REVERSAL                                                    |\n  | 0192         | ACCOUNT LOCKED/ PAYER ACCOUNT IS BLOCKED, PROHIBTING POSTING OF TRANSACTION AGAINST IT. |\n  | 0193         | CUSTOMER RELATION NOT FOUND/ PAYER DECLINED REQUEST / NO TITLE FETCH |\n  | 0194         | PERMISSION DENIED/TRANSACTION NOT ALLOWED                          |\n  | 0195         | TRANSACTION REJECTED                                                |\n  | 0196         | ORIGINAL ALREADY REJECTED                                          |\n  | 0197         | BAD EXPIRY DATE                                                     |\n  | 0198         | ORIGINAL AMOUNT INCORRECT                                           |\n  | 0199         | ORIGINAL DATA ELEMENT MISMATCH                                      |\n  | 0221         | Inactive Channel                                                     |\n  | 0222         | Invalid Signature                                                    |\n  | 0225         | UBPS service timed out or is not available                           |\n  | 0227         | Internal / Unspecified Error                                         |\n  | 0266         | Bill in Process                                                      |\n  | 0286         | Malformed Index in Relationship Inquiry                               |\n  | 0287         | Invalid Index                                                        |\n  | 0288         | Customer Not Found                                                   |\n  | 0289         | Bill Already Paid                                                    |\n  | 0290         | Transaction Not Supported                                             |\n  | 0291         | Utility Company ID not Found                                          |\n  | 0292         | Relationship Not Found                                                |\n  | 0293         | Login Failed Network Message                                          |\n  | 0294         | Bill Not Found                                                        |\n  | 0295         | Web Service timed out or is not available                             |\n  | 0296         | Malformed Request (Error in Request Message Format)                  |\n  | 0297         | Internal / Unspecified Error                                           |\n  | 0298         | Some Error occurred in web-service                                    |\n  | 0299         | Unable to process at this time                                         |\n  | 0301         | Cannot find country                                                    |\n  | 0302         | Cannot find alias type                                                 |\n  | 0303         | Cannot find account type                                               |\n  | 0304         | Cannot find UID type                                                   |\n  | 0305         | Cannot find customer                                                   |\n  | 0306         | Customer already exists                                                |\n  | 0307         | Customer is suspended                                                 |\n  | 0308         | Cannot find participant                                                |\n  | 0309         | Cannot find currency                                                   |\n  | 0310         | Account is already default                                            |\n  | 0311         | Cannot find account                                                    |\n  | 0312         | Cannot find alias                                                      |\n  | 0313         | Account is already suspended                                           |\n  | 0314         | Account is already active                                              |\n  | 0315         | Duplicated UID                                                         |\n  | 0316         | Duplicated account                                                     |\n  | 0317         | Customer is already suspended                                          |\n  | 0318         | Customer is already active                                             |\n  | 0319         | Multiple default accounts                                              |\n  | 0321         | Alias already exists                                                   |\n  | 0322         | Alias has expired                                                      |\n  | 0323         | Account has expired                                                    |\n  | 0324         | Customer is duplicated in the message                                  |\n  | 0327         | Alias has already expired                                              |\n  | 0328         | Alias already exists                                                   |\n  | 0329         | The account is not linked to the alias                                  |\n  | 0330         | The account is already linked to the alias                             |\n  | 0331         | Alias is suspended                                                      |\n  | 0333         | Alias mask is invalid                                                   |\n  | 0336         | Customer is inactive                                                    |\n  | 0338         | Alias start date is later than expiration date                          |\n  | 0339         | Account opening date is later than closing date                         |\n  | 0340         | Cannot link alias to account                                            |\n  | 0341         | Cannot link account to alias                                            |\n  | 0342         | Only servicer can register its accounts                                 |\n  | 0343         | Invalid mobile number format                                            |\n  | 0344         | Operation is not allowed                                                |\n  | 0345         | Customer has no accounts serviced by                                    |\n  | 0346         | Invalid email format                                                    |\n  | 0350         | Invalid servicer                                                        |\n  | 0352         | UID does not match the pattern                                          |\n  | 0353         | UID mask is invalid                                                     |\n  | 0354         | Default account is not specified                                        |\n  | 0368         | Invalid request (Response definition vary)                              |\n  | 0401         | Transaction Amount Exceed to per transaction limit                     |\n  | 0402         | Transaction Amount Exceed to daily transaction limit                    |\n  | 0403         | Number of transactions exhausted for allowed daily transactions         |\n  | 0404         | Insufficient balance                                                    |\n  | 0405         | Beneficiary account is invalid                                           |\n  | 0406         | Beneficiary account is inactive                                          |\n  | 0407         | Customer account is inactive                                            |\n  | 0408         | Customer account is closed                                              |\n  | 0409         | Host link down                                                          |\n  | 0410         | Raast link down                                                        |\n  | 0411         | No transaction found                                                    |\n  | 0412         | Transaction failed at Raast                                            |\n  | 0431         | Title fetch reference not found                                         |\n  | 0499         | Unable to process/ No response received by SBP                         |\n\n  | HTTP Response Code | Description               |\n  |--------------------|---------------------------|\n  | 400                | Bad Request               |\n  | 401                | Unauthorized              |\n  | 403                | Forbidden                 |\n  | 404                | Not Found                 |\n  | 405                | Method Not Allowed        |\n  | 500                | Internal Server Error     |\n  | 501                | Not Implemented           |\n  | 502                | Bad Gateway               |\n  | 503                | Service Unavailable       |\n  | 504                | Gateway Timeout           |\n  | 505                | HTTP Version Not Supported |\n\n\n  ## Bank Controller Response Code\n  <a id=\"bank-rspcodes\"></a>\n     The bank middleware is responsible to share the list of possible response codes to be responded by the bank for the appropriate mapping with the scheme systems.\n      \n  | Response Code | Description |\n  |------------------|----------|\n  | 0000             | Success  |\n  |                  |          |\n\n  ## Sender Account Type\n  <a id=\"account-type\"></a>\n  | Account Code | Account Type                      |\n  |--------------|----------------------------------|\n  | 00           | Default Account (no account specified) |\n  | 10           | Savings Account                  |\n  | 20           | Current or Checking Account      |\n  | 30           | Credit Account                   |\n  | 40           | Branchless Banking Account       |\n  | 50           | Biometric Withdrawal             |\n  | 60           | Roshan Digital Account           |\n\n  ## Transaction Type\n  <a id=\"tran-type\"></a>\n  \n  | Transaction Type | Description                      |\n  |------------------|----------------------------------|\n  | 01               | For RAAST P2P incoming           |\n  | 02               | For 1LINK IBFT incoming          |\n  | 03               | For RAAST return payment         |\n  | 04               | For RAAST bulk receiving         |\n\n\n  ## Channel Type\n  <a id=\"channel-type\"></a>\n\n  | Channel ID | Channel Type  |\n  |------------------|----------------------------------|\n  | 000000000\t               | ATM   |\n  | 000000001\t               | IVR   |\n  | 000000002\t               | Call Center   |\n  | 000000003\t               | Web   |\n  | 000000004\t               | T24 TELL  |\n  | 000000005\t               | POS   |\n  | 000000006\t               | CDM_CASH  |\n  | 000000007\t               | Mobile      |\n  | 000000008\t               | Branchless    |",
    "x-logo": {
      "url": "logo.png",
      "altText": "paysys logo"
    },
    "license": {
      "name": "Paysys Labs",
      "url": "https://www.paysyslabs.com/"
    }
  },
  "servers": [
    {
      "url": "https://apigw.paysyslabs.com/api/v1.3",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "jwtToken": []
    }
  ],
  "tags": [
    {
      "name": "Token API SPECS",
      "description": "The client needs to authenticate itself before interacting with any Openconnect APIs"
    },
    {
      "name": "OpenConnect API Specs",
      "description": "These are the API(s) which will be exposed by OpenConnect"
    },
    {
      "name": "Client Bank API Specs",
      "description": "These are the API(s) which will be exposed by Bank"
    },
    {
      "name": "Billing API Specs",
      "description": "These are the billing related API(s)"
    },
    {
      "name": "CAS API Specs",
      "description": "These are the RAAST CAS related API(s)"
    },
    {
      "name": "Payment API Specs",
      "description": "These are the Payment tranfer related API(s)"
    },
    {
      "name": "Non Financial API Specs",
      "description": "These are the Non financial related API(s)"
    }
  ],
  "paths": {
    "/realms/paysys-raast-realm/protocol/openid-connect/token": {
      "post": {
        "summary": "authentication",
        "tags": [
          "Token API SPECS"
        ],
        "description": "This method is secure and includes enhancements that allow for more robust security mechanisms, which will ensure that the Open Connect integration is secure and reliable.\n\n\nThis is also the centralized authentication mechanism for all the APIs exposed by Open Connect. This will be running as a separate application on specific port.",
        "operationId": "authenticate",
        "security": [
          {
            "clientCredentials": []
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token generated successfully",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ6b25lcmEiLCJleHAiOjE2MjIwOTk4OTcsImlhdCI6MTYyMjAxMzQ5N30.67UjDFQv4DsE0QtJY_WIYbAQJ20xfTsO-CiMy0fdYIJR1il4hHbd4s4bi7LUDtmZ6-d-ENhq23hpTWTJPUxATA",
                  "expires_in": 300,
                  "token_type": "Bearer",
                  "refresh_expires_in": 0,
                  "not-before-policy": 0,
                  "scope": "profile email"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "This token will be used in all APIs in header with header name “Authorization”. Token value will be followed by Bearer"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "The value is in seconds"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Bearer"
                    },
                    "refresh_expires_in": {
                      "type": "number"
                    },
                    "not-before-policy": {
                      "type": "number"
                    },
                    "scope": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/p_Authentication"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/payments/unifiedtitlefetch": {
      "post": {
        "summary": "unifiedtitlefetch",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"unified-tf\"></a>\nThe unified title fetch is a generic method to get beneficiary (receiver) account details from the member bank.The method is having a following two additional functionalities compare to standard title fetch method:\n\n\n- <b>Preferred Rail</b>: The initiator has provision to set the preferred rail either the title fetch will be done via RAAST or 1LINK. The request parameter will identify the preferred route\n\n\n- <b>Fall-back option</b>: In case if title fetch failed with the preferred rail the system will auto attempt the title fetch from alternate rail. The option is controllable via request parameters.",
        "operationId": "unifiedtitlefetch",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/unifiedtitlefetch' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"05421236547552\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountCurrency\": \"586\"\n  },\n  \"receiverinfo\": {\n    \"bankId\": 1,\n    \"toAccount\": \"00023137343951\"\n  },\n  \"otherinfo\": {\n    \"priorityFlag\": \"01\",\n    \"fallbackFlag\": \"01\",\n    \"purposeCode\": \"0320\",\n    \"amount\": 5000\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "accountInfo": {
                        "title": "Muhammad Khan",
                        "toAccount": "00653000129536",
                        "destinationPaymentSystem": "01",
                        "iban": "PK30BANK0012000230000000"
                      },
                      "participantInfo": {
                        "bankIMD": "100271",
                        "bankBIC": "NBPBPKKA"
                      }
                    }
                  },
                  "1001": {
                    "summary": "No account found",
                    "value": {
                      "response": {
                        "response_code": "1001",
                        "response_desc": "No account found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "$ref": "#/components/schemas/response_code"
                        },
                        "response_desc": {
                          "$ref": "#/components/schemas/response_desc"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        },
                        "correlationId": {
                          "type": "string",
                          "minLength": 40,
                          "maxLength": 40,
                          "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call."
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Beneficiary account title"
                    },
                    "toAccount": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    },
                    "destinationPaymentSystem": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2,
                      "description": "Identify the route from which title fetch has completed. \n\nThe values are as:\n\n\n\"01\" – For RAAST\n\n\n\"02\" – For 1LINK"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Beneficiary IBAN, the value will be returned if received from the scheme in response of title fetch"
                    },
                    "bankIMD": {
                      "type": "string",
                      "minLength": 8,
                      "maxLength": 8,
                      "description": "Receiving participant IMD (Member bank id), assigned by 1LINK"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Receiving participant BIC (bank institution code), assigned by SBP"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_UnifiedTitleFetch"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/alias/getdefaultaccount": {
      "post": {
        "summary": "Get Default Account",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"get-default-account\"></a>\nThe request will be used to fetch beneficiary account details via RAAST ID. \n\n\nA \"RAAST ID\" is a unique identifier assigned to an individual for the purpose of collecting funds. This ID is registered through the individual's bank, which is then integrated into the State Bank of Pakistan's Central Addressing Scheme (CAS). This integration allows individuals to receive funds without the need to divulge their complete bank account details, including account number, bank and branch information.\n\n\nWhen a payee has to receive funds, they only need to provide their RAAST ID. The CAS system manages the beneficiary's account details and associated information. This information is shared when a payer initiates a fund transfer via a bank's digital channel, using the payee's RAAST ID. This streamlined process enhances the efficiency and security of interbank fund transfers by simplifying the recipient's identification and fund collection.",
        "operationId": "getdefaultaccount",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/alias/getdefaultaccount' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"receiverinfo\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03132370605\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "accountInfo": {
                        "surname": "Mr.",
                        "name": "Waqas",
                        "destinationPaymentSystem": "01",
                        "iban": "PK19SONE0000220006493697",
                        "currency": "PKR",
                        "type": "DFLT"
                      },
                      "participantInfo": {
                        "bankBIC": "SONEPKKA"
                      }
                    }
                  },
                  "1": {
                    "summary": "Cannot find account",
                    "value": {
                      "response": {
                        "response_code": "0001",
                        "response_desc": "Account Not Found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call."
                    },
                    "surname": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Beneficiary surname"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Beneficiary nick name registered in central addressing scheme"
                    },
                    "destinationPaymentSystem": {
                      "type": "string",
                      "description": "Identify the route from which title fetch has completed.\nThe values are as:\n  “01” – For RAAST\n  “02” – For 1LINK\n  "
                    },
                    "currency": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "description": "Receiver account currency"
                    },
                    "type": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Receiver account type. The value will be like “DFLT”"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Receiving participant BIC (bank institution code), assigned by SBP"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver IBAN"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_GetDefaultAccount"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "# cURL command with payload\ncurl -X POST -H \"Content-Type: application/json\" -d '{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}' https://api.example.com/your-endpoint\n"
          }
        ]
      }
    },
    "/paysyslabs/banklist": {
      "get": {
        "summary": "banklist",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"bank-list\"></a>\nRequest to get institution list",
        "operationId": "banklist",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl --request GET \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/banklist' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "participants": [
                        {
                          "bankId": 1,
                          "bankDisplayName": "National bank of Pakistan",
                          "bankShortBIC": "NBPBPKKA",
                          "bankBIC": "NBPBPKKAXXX",
                          "bankIMD": "601492",
                          "accountNumberHelp": "Please provide 14 digits NBP account # or IBAN",
                          "accountNumberREGEX": "^[0-9]+$",
                          "isAvailable1LINKIBFT": "Y",
                          "isAvailableRAASTP2P": "Y",
                          "isAvailableRAASTBulk": "Y",
                          "isAvailableRAASTP2M": "N",
                          "isAvailableRAASTP2MRTP": "N",
                          "isAvailableRAASTP2MPISP": "N"
                        },
                        {
                          "bankId": 2,
                          "bankDisplayName": "Telenor Microfinance Bank",
                          "bankShortBIC": "TMFBPKKA",
                          "bankBIC": "TMFBPKKAXXX",
                          "bankIMD": "220872",
                          "accountNumberHelp": "Please provide 11 digits mobile # or IBAN for beneficiary",
                          "accountNumberREGEX": "^[0-9]+$",
                          "isAvailable1LINKIBFT": "Y",
                          "isAvailableRAASTP2P": "Y",
                          "isAvailableRAASTBulk": "Y",
                          "isAvailableRAASTP2M": "Y",
                          "isAvailableRAASTP2MRTP": "Y",
                          "isAvailableRAASTP2MPISP": "N"
                        }
                      ]
                    }
                  },
                  "3001": {
                    "summary": "Failure with No data found",
                    "value": {
                      "response": {
                        "response_code": "3001",
                        "response_desc": "No data found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "bankId": {
                      "type": "integer",
                      "description": "Bank id assigned by open connect"
                    },
                    "bankDisplayName": {
                      "type": "string",
                      "minLength": 20,
                      "maxLength": 20,
                      "description": "Bank name"
                    },
                    "bankShortBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Bank BIC assigned by SBP"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Bank BIC assigned by SBP"
                    },
                    "bankIMD": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6,
                      "description": "Bank IMD assigned by 1LINK"
                    },
                    "accountNumberHelp": {
                      "type": "string",
                      "minLength": 200,
                      "maxLength": 200,
                      "description": "Help Text which can be used to show format to customer on screen in user readable form."
                    },
                    "accountNumberREGEX": {
                      "type": "string",
                      "minLength": 200,
                      "maxLength": 200,
                      "description": "Account # format, the field will be displayed to user where user input beneficiary account #"
                    },
                    "isAvailable1LINKIBFT": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support IBFT payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2P": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2P payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTBulk": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support RAAST bulk receiving payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2M": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2M payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2MRTP": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2M “request to pay” payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2MPISP": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support RAAST PISP features followed by “Y” or “N”"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      }
    },
    "/paysyslabs/payments/ibfttransfer": {
      "post": {
        "summary": "ibfttransfer",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"ibft\"></a>\nTo send funds to member bank account using 1LINK",
        "operationId": "ibfttransfer",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/ibfttransfer' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"tfcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"05421236547552\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n              \n    \"fromAccountCurrency\": \"586\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"bankIMD\": \"100271\",\n    \"toAccount\": \"00023137343951\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"authId\": \"654123\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}\n'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "431": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0431",
                        "response_desc": "Title fetch reference not found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_IBFTTransfer"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/payments/directposting": {
      "post": {
        "summary": "directposting",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"direct-posting\"></a>\nThis service will be used to send P2P payment via Raast for interbank transfer. The service will be sent credit request directly to RAAST without sending any debit request to bank middleware/CBS. This service ideally needs to be used in scenario where bank’s system can debit customer account itself and sent only credit request to Raast via open connect. \n\nOpen connect return additional fields upon successful response, bank’s middleware needs to sent same values to CBS while debit confirmation or release. These key parameters will be used for RECON purpose. ",
        "operationId": "directposting",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/directposting' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"tfcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountCurrency\": \"586\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"bankBIC\": \"NBPBPKKA\",\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"authId\": \"654123\",\n    \"msgId\": \"MASH231016140256592221\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RAASTTransfer"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/payments/billpayment": {
      "post": {
        "summary": "Bill payment",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"bill-pay\"></a>\nThe primary objective of this API is to transmit payment requests to billing aggregators.This meticulous approach guarantees that the bill payment process is executed securely, in full compliance with all the necessary criteria and standards.",
        "operationId": "billpayment",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/billpayment' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"inqcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"billinfo\": {\n    \"billerId\": 5,\n    \"consumerNo\": \"03132370605\",\n    \"amount\": 500\n  },\n  \"payerInfo\": {\n    \"payerIBAN\": \"PK76MASH1234567890126985\",\n    \"payerName\": \"Payer account title\",\n    \"payerCNIC\": \"1234512345671\"\n  },\n  \"otherInfo\": {\n    \"channel\": \"00000002\",\n    \"authId\": \"658965\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n    }'      \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "468": {
                    "summary": "Mandatory parameters not provided",
                    "value": {
                      "response": {
                        "response_code": "0468",
                        "response_desc": "Mandatory parameters not provided"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_BillPayment"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/billercat": {
      "get": {
        "summary": "Biller Category",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"bill-cat\"></a>\nget the list of billers categories to organize billers list at channel ",
        "operationId": "billercat",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl --request GET \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billercat' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "catList": [
                        {
                          "catId": 10001,
                          "catName": "Electricity"
                        },
                        {
                          "catId": 10002,
                          "catName": "Telcos"
                        },
                        {
                          "catId": 10003,
                          "catName": "Government Payments"
                        }
                      ]
                    }
                  },
                  "401": {
                    "summary": "Failure with No data found",
                    "value": {
                      "response": {
                        "response_code": "0401",
                        "response_desc": "No data found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "catId": {
                      "type": "integer",
                      "description": "Category Id, assigned by Open Connect"
                    },
                    "catName": {
                      "type": "string",
                      "description": "Category Name",
                      "maxLength": 20
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      }
    },
    "/paysyslabs/billerlist": {
      "post": {
        "summary": "Biller List",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"biller-list\"></a>\nThe purpose of the Biller List API is to facilitate seamless integration between middleware and digital channels",
        "operationId": "billerlist",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billerlist' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"otherinfo\": {\n    \"billerCat\": 10002\n  }\n}'\n       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "billers": [
                        {
                          "billerId": "1",
                          "billerName": "Zong Prepaid",
                          "minimumAmount": 100,
                          "maximumAmount": 10000
                        },
                        {
                          "billerId": "2",
                          "billerName": "Zong Postpaid",
                          "minimumAmount": 100,
                          "maximumAmount": 10000
                        },
                        {
                          "billerId": "3",
                          "billerName": "Ufone Prepaid",
                          "minimumAmount": 50,
                          "maximumAmount": 5000
                        }
                      ]
                    }
                  },
                  "1": {
                    "summary": "Invalid category code",
                    "value": {
                      "response": {
                        "response_code": "0001",
                        "response_desc": "Invalid category code"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the request"
                    },
                    "billerId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "description": "Biller unique id assigned by OC"
                    },
                    "billerName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 24,
                      "description": "Biller name, same will be show to user"
                    },
                    "minimumAmount": {
                      "type": "number",
                      "description": "Minimum amount for the transaction, if this field do not appear with biller details it means there is no limit cap applied for the transaction. However, channel limit will be managed by the channel middleware."
                    },
                    "maximumAmount": {
                      "type": "number",
                      "description": "Maximum amount for the transaction, if this field do not appear with biller details it means there is no limit cap applied for the transaction. However, channel limit will be managed by the channel middleware."
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_Billerlist"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/billinquiry": {
      "post": {
        "summary": "Bill Inquiry",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"bill-inquiry\"></a>\nThe primary objective of this API is to retrieve comprehensive bill information before initiating the payment process. This empowers customers to thoroughly review the details and legitimacy of the bill they are about to pay. ",
        "operationId": "billinquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billinquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"billinfo\": {\n    \"billerId\": 5,\n    \"consumerNo\": \"03132370605\"\n  }\n}'\n       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "billInfo": {
                        "billerId": 5,
                        "consumerNo": "03132370605",
                        "customerName": "Waqas Nizam",
                        "billStatus": "T",
                        "billingMonth": "2310",
                        "dueDate": "231029",
                        "amountWithinDueDate": "5100",
                        "amountAfterDueDate": "5300",
                        "source": "01"
                      }
                    }
                  },
                  "288": {
                    "summary": "Customer Not Found",
                    "value": {
                      "response": {
                        "response_code": "0288",
                        "response_desc": "Customer Not Found "
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 40,
                      "description": "Unique correlation id for the bill inquiry request. The value is in GUID format and will be sent by the initiator in payment call."
                    },
                    "billerId": {
                      "type": "integer",
                      "description": "Echo back from request"
                    },
                    "consumerNo": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 24,
                      "description": "Echo back from request"
                    },
                    "customerName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "description": "Customer name or bill title, the value will be sent by the biller. In case of mobile top-up, it can be blank."
                    },
                    "billStatus": {
                      "type": "string",
                      "description": "Possible values are:\n\n| Status            | Description          |\n|-------------------|----------------------|\n| U                 | Unpaid               |\n| P                 | Paid                 |\n| T                 | Partial payment      |\n| B                 | Blocked              |",
                      "minLength": 1,
                      "maxLength": 1,
                      "enum": [
                        "U",
                        "P",
                        "T",
                        "B"
                      ]
                    },
                    "billingMonth": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "yyMM"
                    },
                    "dueDate": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6,
                      "pattern": "yyMMdd"
                    },
                    "amountWithinDueDate": {
                      "type": "number",
                      "description": "Amount to be paid by customer if bill is not due"
                    },
                    "amountAfterDueDate": {
                      "type": "number",
                      "description": "Amount to be paid by customer if bill has been due"
                    },
                    "source": {
                      "type": "string",
                      "maxLength": 2,
                      "minLength": 2,
                      "description": "Aggregator from which bill inquiry has been performed\n| Code  | Organization   |\n|-------|----------------|\n| 02    | 1LINK          |\n| 03    | NADRA          |",
                      "enum": [
                        "02",
                        "03"
                      ]
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "billerId",
                    "consumerNo"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_BillInquiry"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/customers/one-step": {
      "post": {
        "summary": "One-Step Customer Registration",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"one-step\"></a>\nSBP is allowing account holders to tag their account with any of their below personal information which they can share with other account holders to send funds into his/her account",
        "operationId": "one-step",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/one-step' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"customerInfo\": {\n    \"documentType\": \"CNIC\",\n    \"documentNumber\": \"4230146389021\",\n    \"name\": \"Account Title here\",\n    \"surname\": \"\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1987-01-28\",\n    \"startDate\": \"2021-05-15\",\n    \"expirationDate\": \"2025-05-15\"\n  },\n  \"aliases\": [\n    {\n      \"type\": \"MOBILE\",\n      \"value\": \"03222507423\",\n      \"status\": \"active\",\n      \"accounts\": [\n        {\n          \"id\": {\n            \"iban\": \"PK79NBPA0002004137343952\"\n          },\n          \"currency\": \"PKR\",\n          \"isDefault\": true\n        }\n      ]\n    }\n  ]\n}'       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "306": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0306",
                        "response_desc": "Customer already exists"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_cas_OneStep"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/customers/registercaa": {
      "post": {
        "summary": "Register Customer Alias Accounts",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"register-caa\"></a>\nAs per SBP RAAST ID Linking / delinking guidelines, OC have exposed a custom method in which OC will do following calls sequentially to link customer account with RAAST ID for the first time:  \n- Register Customer Information\n- Activate Customer\n- Account Registration\n- Get Customer Aliases\n- Link Alias to Account          ",
        "operationId": "registercaa",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/registercaa' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"customerInfo\": {\n    \"documentType\": \"CNIC\",\n    \"documentNumber\": \"4230146389021\",\n    \"name\": \"Account Title here\",\n    \"surname\": \"\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1987-01-28\",\n    \"startDate\": \"2021-05-15\",\n    \"expirationDate\": \"2025-05-15\"\n  },\n  \"aliases\": [\n    {\n      \"type\": \"MOBILE\",\n      \"value\": \"03222507423\",\n      \"status\": \"active\",\n      \"accounts\": [\n        {\n          \"id\": {\n            \"iban\": \"PK79NBPA0002004137343952\"\n          },\n          \"currency\": \"PKR\",\n          \"isDefault\": true\n        }\n      ]\n    }\n  ]\n}'\n   \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "306": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0306",
                        "response_desc": "Customer already exists"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RegisterCAA"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/account/delinkaccountalias": {
      "post": {
        "summary": "Delink Account from ALias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"unlink-account-alias\"></a>\nIn this scenario customer want to unlink his/her selected account and assumption is customer is already linked the account with RAAST ID. \n\nThe reason for performing this operation may be any of following:  \n-\tCustomer want to link his/her another account with the current institution\n-\tCustomer want to link his/her another account with the other RAAST participants\n      ",
        "operationId": "delinkaccountalias",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/delinkaccountalias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"alias\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\"\n  },\n  \"account\": {\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true\n  }\n}'    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_DelinkAccountAlias"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/account/linkaccountalias": {
      "post": {
        "summary": "link Account to ALias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"link-account-alias\"></a> \nIn this scenario customer want to relink his/her selected account and assumption is customer is already unlinked the account with RAAST ID and do not have any linked account id with RAAST ID.\n      ",
        "operationId": "linkaccountalias",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/linkaccountalias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"alias\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\"\n  },\n  \"account\": {\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true,\n    \"currency\": \"PKR\"\n  }\n}'        \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_LinkAccountAlias"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/account/setdefault": {
      "post": {
        "summary": "Set Default Account for Alias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"set-default-account\"></a>\nThe purpose of this API is to facilitate users who have multiple accounts within their organization. These users have already registered multiple accounts and now wish to change the default account associated with a specific RAAST ID. To achieve this, users are not required to go through the linking or delinking process. Instead, they will be presented with a list of linked accounts and can effortlessly designate any of these linked accounts as their new default account.    ",
        "operationId": "setdefault",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/setdefault' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"accountInfo\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\",\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true\n  }\n}'\n    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_SetDefaultAccount"
              }
            }
          }
        }
      }
    },
    "/paysyslabs/customers/delete": {
      "post": {
        "summary": "Remove RasstId Relationship with CAS",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"remove-customer\"></a>\nIn one-step delete Open connect will call three consecutive calls for CAS to remove customer all relationship with CAS. Customer can re-register on CAS using one-step registration.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/delete' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  }\n}'     \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RemoveCustomerFromCAS"
              }
            }
          }
        }
      }
    },
    "/bank/payments/titlefetch": {
      "post": {
        "summary": "titlefetch",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The service will be exposed by the bank. The purpose of the method is to allow member banks and schemes such as RAAST or 1LINK to get customer account info which is known as Title fetch request.\n\n\nThe title fetch usually comes before payment request where sender wants to verify beneficiary account title and account validation to make sure payment will be sent into the beneficiary account.",
        "operationId": "titlefetch",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/titlefetch' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"initiator\": \"RAAST\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\"\n  },\n  \"paymentInfo\": {\n    \"amount\": 5000\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "Success",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "receiverInfo": {
                        "account": "03132370605",
                        "iban": "PK98MASH0000003132370605",
                        "title": "Waqas Nizam",
                        "mobile": "03132370605",
                        "identity": [
                          {
                            "idType": "CNIC",
                            "idValue": "1234512345671"
                          },
                          {
                            "idType": "Passport",
                            "idValue": "AX59856321"
                          },
                          {
                            "idType": "NTN",
                            "idValue": "6598532102"
                          }
                        ]
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "01",
                        "responseDesc": "Invalid account or no account found",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "account": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver account (Echo back)"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver IBAN"
                    },
                    "title": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Receiver account title"
                    },
                    "mobile": {
                      "type": "string",
                      "minLength": 11,
                      "maxLength": 11,
                      "description": "Receiver mobile number"
                    },
                    "idType": {
                      "type": "string",
                      "minLength": 20,
                      "maxLength": 20,
                      "description": "Receiver account id type available in bank’s profile. Bank may return list of id type and values in case of joint account and if bank’s have multiple identity values for a customer. \n\n\nThe id types are as:\n\n\n•\tCNIC\n\n•\tNIC\n\n•\tNICOP\n\n•\tPOC\n\n•\tNTN\n\n•\tPASSPORT\n\n•\tREGNUM (Registration Number"
                    },
                    "idValue": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Identity value of respective identity type"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_TitleFetch"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditposting": {
      "post": {
        "summary": "creditposting",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The method is used to credit bank’s customer account whenever payment comes from RAAST. The Open connect sent credit request to the bank’s system using this method in the request mode. In case of rejection Open connect will instantly return payment to sender bank.\n\n\nDescription\tRequest to credit bank’s customer account, the request can be initiated by 1LINK and RAAST for following transactions:\n\n\n•\tIBFT inward payment\n\n•\tRAAST P2P inward payment\n\n•\tRAAST P2P outward return payment",
        "operationId": "creditposting",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditposting' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\t\n  \"senderinfo\": {\n    \"senderBankIMD\": \"\",\n    \"senderBankBIC\": \"NBPBPKKA\",\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"instrId\": \"TMIC230511125023876423\",\n    \"endToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"txId\": \"TMIC230511125023876423\",\n    \"msgId\": \"TMICFBPK110523000111250233\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "04",
                        "responseDesc": "Credit limit exceed for the account",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditPosting"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditadvise": {
      "post": {
        "summary": "creditadvise",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "Advise means where bank is responsible to credit amount into the receiver account. As a guaranteed delivery mechanism (SAF), OC will be sent credit request as advise to bank’s system via SAF mechanism.\n\n\nThis method will be used in any of below case:\n\n\n•\t1LINK incoming credit advise\n\n•\tRAAST P2P Inward return payments, this happens when previously made outward P2P payment failed at receiving bank end and bank initiate return after sometime.\n\n•\tRAAST P2P Timeout transactions",
        "operationId": "creditadvise",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditadvise' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"initiator\": \"RAAST\",\n    \"txnType\": \"01\"\n  },\n  \"senderinfo\": {\n    \"senderBankIMD\": \"\",\n    \"senderBankBIC\": \"NBPBPKKA\",\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0125\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"instrId\": \"TMIC230511125023876423\",\n    \"endToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"txId\": \"TMIC230511125023876423\",\n    \"msgId\": \"TMICFBPK110523000111250233\",\n    \"oneLinkrrn\": \"002236987456\",\n    \"oneLinkstan\": \"987456\"\n  },\n  \"orgTxnInfo\": {\n    \"orgtxndate\": \"20231015\",\n    \"orgtxntime\": \"182243\",\n    \"orginstrId\": \"TMIC230511125023876423\",\n    \"orgendToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"orgtxId\": \"TMIC230511125023876423\",\n    \"orgmsgId\": \"TMICFBPK110523000111250233\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "09",
                        "responseDesc": "Duplicate transaction",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditAdvise"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditinquiry": {
      "post": {
        "summary": "creditinquiry",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The purpose of this request to inquire the status of the previously posted credit request or advise.\n\n\nIn case if original transaction got timeout, the Open Connect initiate transaction inquiry to the check the transaction faith.",
        "operationId": "creditinquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "\ncurl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditinquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"orgTxnInfo\": {\n    \"orgtxnrrn\": \"002236987456\",\n    \"orgtxnstan\": \"987456\",\n    \"orgtxndate\": \"20231015\",\n    \"orgtxntime\": \"182243\"\n  }\n}'    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "orgResponse": {
                        "orgresponseCode": "00",
                        "orgresponseDesc": "SUCCESS"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "orgResponse": {
                        "orgresponseCode": "01",
                        "orgresponseDesc": "No transaction found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "responseCode": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "description": "Response code for the request"
                        },
                        "responseDesc": {
                          "type": "string",
                          "minLength": 40,
                          "maxLength": 40,
                          "description": "Description for the respective response code"
                        },
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        }
                      }
                    },
                    "orgResponse": {
                      "type": "object",
                      "properties": {
                        "orgresponseCode": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "description": "Response code for the original request"
                        },
                        "orgresponseDesc": {
                          "type": "string",
                          "minLength": 40,
                          "maxLength": 40,
                          "description": "Description for the respective original response code"
                        }
                      }
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan",
                    "orgresponseCode",
                    "orgresponseDesc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditInquiry"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwtToken": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Token required in all APIs except /authentication enpoint which needs oaut2.1   For more information regarding JWT, check out [JWT](https://auth0.com/learn/json-web-tokens)."
      },
      "clientCredentials": {
        "type": "oauth2",
        "description": "For more information regarding oauth, check out [OAUTH](https://auth0.com/intro-to-iam/what-is-oauth-2).",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://apigw.paysyslabs.com/api/v1.3/paysyslabs/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "p_Authentication": {
        "description": "Representation of a Authentication",
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "example": "client_credentials"
          },
          "client_id": {
            "description": "client_id will be provided by PSL TEAM based on channel",
            "type": "string"
          },
          "client_secret": {
            "description": "client_secret will be provided by PSL TEAM based on channel",
            "type": "string"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ]
      },
      "p_UnifiedTitleFetch": {
        "description": "Representation of a Unified Title Fetch",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "05421236547552"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)                       "
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountType",
              "fromAccountCurrency"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankId": {
                "type": "integer",
                "description": "Bank Id returned by the OC in get bank list service response.\nFor more information, see [Endpoint banklist](#bank-list).",
                "example": 1
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "00023137343951"
              }
            },
            "required": [
              "bankId",
              "toAccount"
            ]
          },
          "otherinfo": {
            "type": "object",
            "properties": {
              "priorityFlag": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "The field determine the priority rail to perform title fetch.\n\n| Value | Description   |\n|-------|---------------|\n| 01    | For RAAST     |\n| 02    | For 1LINK     |",
                "enum": [
                  "01",
                  "02"
                ],
                "example": "01"
              },
              "fallbackFlag": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "The field determine the fall back feature for the title fetch in case title fetch failed from \nthe 1st switch system will attempt to perform it from alternate route if fall back parameter \nset to “Yes”.\n\n| Value | Description   |\n|-------|---------------|\n| 01    | YES     |\n| 02    | NO     |",
                "enum": [
                  "01",
                  "02"
                ],
                "example": "01"
              },
              "purposeCode": {
                "type": "string",
                "description": "the acceptable length of this field will depends on the value provided, please refer to [Purpose Code Table](#purp-code) ",
                "example": "0320"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, it is required as per EFT compliant that receiver must validate credit limit on title fetch to minimize rejection ratio while payment",
                "example": 5000
              }
            },
            "required": [
              "priorityFlag",
              "fallbackFlag",
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_GetDefaultAccount": {
        "description": "Representation of a Get Default Account",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of alias",
                "enum": [
                  "CNIC",
                  "MOBILE",
                  "EMAIL",
                  "TXT"
                ],
                "example": "MOBILE"
              },
              "value": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Alias Value",
                "example": "03132370605"
              }
            },
            "required": [
              "type",
              "value"
            ]
          }
        },
        "required": [
          "info",
          "receiverinfo"
        ]
      },
      "p_IBFTTransfer": {
        "description": "Representation of a IBFT Transfer",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "tfcorrelationId": {
                "$ref": "#/components/schemas/tfcorrelationId"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)",
                "example": "00"
              },
              "fromAccountTitle": {
                "type": "string",
                "maxLength": 40,
                "example": "Muhammad Ali"
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountType",
              "fromAccountCurrency",
              "fromAccountCnic"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankIMD": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Bank IMD, received in response of title fetch",
                "example": "100271"
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "00023137343951"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title, received in response of title fetch",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "bankIMD",
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "4 digits numeric 1LINK assigned payment purpose code. please refer to [Purpose Code Table](#purp-code) ",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, bank make sure that the amount will be same which bank sent during title fetch",
                "example": 5000
              },
              "authId": {
                "$ref": "#/components/schemas/authId"
              }
            },
            "required": [
              "purposeCode",
              "narration",
              "amount",
              "authId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_RAASTTransfer": {
        "description": "Representation of a RAAST Transfer",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "tfcorrelationId": {
                "$ref": "#/components/schemas/tfcorrelationId"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "correlationId"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)",
                "example": "00"
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle",
              "fromAccountType",
              "fromAccountCurrency",
              "fromAccountCnic"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankBIC": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Bank BIC, received in response of title fetch",
                "example": "NBPBPKKA"
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title, received in response of title fetch",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "bankBIC",
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "4 digits numeric 1LINK assigned payment purpose code. please refer to [Purpose Code Table](#purp-code) ",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "format": "double",
                "description": "Amount of the transaction, bank make sure that the amount will be same which bank sent during title fetch",
                "example": 5000
              },
              "authId": {
                "$ref": "#/components/schemas/authId"
              },
              "msgId": {
                "$ref": "#/components/schemas/msgId"
              }
            },
            "required": [
              "purposeCode",
              "authId",
              "amount",
              "authId",
              "msgId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_Billerlist": {
        "description": "Representation of a Biller List",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "otherinfo": {
            "type": "object",
            "properties": {
              "billerCat": {
                "type": "integer",
                "description": "The biller category code assigned by OC, return in the response of Get Billers Category",
                "example": 10002
              }
            },
            "required": [
              "billerCat"
            ]
          }
        }
      },
      "p_BillInquiry": {
        "type": "object",
        "description": "Representation of Bill Inquiry",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "billinfo": {
            "type": "object",
            "properties": {
              "billerId": {
                "type": "integer",
                "description": "The biller id selected by the customer on channel. The value will be same which OC return in [Get Billers List](#biller-list)",
                "example": 5
              },
              "consumerNo": {
                "type": "string",
                "maxLength": 30,
                "description": "Any value which customer input in bill# or consumer# field.",
                "example": "03132370605"
              }
            },
            "required": [
              "billerId",
              "consumerNo"
            ]
          }
        }
      },
      "p_BillPayment": {
        "type": "object",
        "description": "Representation of Bill Inquiry",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "inqcorrelationId": {
                "type": "string",
                "minimum": 36,
                "maxLength": 40,
                "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0",
                "description": "Unique correlation id for the bill inquiry request. The value will be same which channel received in response of bill inquiry"
              }
            }
          },
          "billinfo": {
            "type": "object",
            "properties": {
              "billerId": {
                "type": "integer",
                "example": 5,
                "description": "The biller id selected by the customer on channel. The value will be same which OC return in [Get Billers List](#biller-list)"
              },
              "consumerNo": {
                "type": "string",
                "maxLength": 30,
                "example": "03132370605",
                "description": "Any value which customer input in bill# or consumer# field."
              },
              "amount": {
                "type": "number",
                "example": 500,
                "description": "Amount of the transaction, bank must follow the scenarios define in the FSD for bill payment and bill amount"
              }
            },
            "required": [
              "billerId",
              "consumerNo",
              "amount"
            ]
          },
          "payerInfo": {
            "type": "object",
            "properties": {
              "payerIBAN": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Payer IBAN",
                "example": "PK76MASH1234567890126985"
              },
              "payerName": {
                "type": "string",
                "maxLength": 40,
                "minLength": 1,
                "description": "Payer account title",
                "example": "Payer account title"
              },
              "payerCNIC": {
                "type": "string",
                "maxLength": 13,
                "minLength": 13,
                "description": "Payer CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "payerIBAN",
              "payerName",
              "payerCNIC"
            ]
          },
          "otherInfo": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "maxLength": 8,
                "description": "Channel used for payment, the possible [channel type can be seen here](#channel-type)",
                "example": "00000002"
              },
              "authId": {
                "type": "string",
                "maxLength": 40,
                "description": "Debit authorization unique reference number return by core banking in response of debit hold request",
                "example": "658965"
              }
            },
            "required": [
              "channel",
              "authId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_cas_OneStep": {
        "type": "object",
        "description": "Representation of One STep Registration",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "customerInfo": {
            "$ref": "#/components/schemas/customerInfo"
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alias"
            }
          }
        }
      },
      "p_RegisterCAA": {
        "type": "object",
        "description": "Representation of register CAA",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "customerInfo": {
            "$ref": "#/components/schemas/customerInfo"
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alias"
            }
          }
        }
      },
      "p_DelinkAccountAlias": {
        "type": "object",
        "description": "Representation of Delink Account from Alias",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "alias": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              }
            },
            "required": [
              "type",
              "value"
            ]
          },
          "account": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              }
            },
            "required": [
              "iban"
            ]
          }
        }
      },
      "p_LinkAccountAlias": {
        "type": "object",
        "description": "Representation of Link Account Alias",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "alias": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              }
            },
            "required": [
              "type",
              "value"
            ]
          },
          "account": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              },
              "currency": {
                "type": "string",
                "example": "PKR",
                "maxLength": 3
              }
            },
            "required": [
              "iban",
              "isDefault",
              "currency"
            ]
          }
        }
      },
      "p_SetDefaultAccount": {
        "type": "object",
        "description": "Representation of set Default Account",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "accountInfo": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              },
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              }
            },
            "required": [
              "type",
              "value",
              "iban"
            ]
          }
        }
      },
      "p_RemoveCustomerFromCAS": {
        "type": "object",
        "description": "Representation of remove RAAST ID Relationship with CAS",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          }
        }
      },
      "b_TitleFetch": {
        "description": "Representation of a Bank's Controller Title Fetch",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "initiator": {
                "type": "string",
                "description": "Fixed value from any of them",
                "enum": [
                  "1LINK",
                  "RAAST"
                ],
                "example": "RAAST"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "initiator"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              }
            },
            "required": [
              "toAccount"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, it can be zero.",
                "example": 5000
              }
            },
            "required": [
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditPosting": {
        "description": "Representation of a Bank's Controller Credit Posting",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "senderBankIMD": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "The value comes if transaction received from 1LINK. In other case it will be blank",
                "example": ""
              },
              "senderBankBIC": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "The value comes if transaction received from RAAST. In other case it will be blank",
                "example": "NBPBPKKA"
              },
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN / account",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC if value received in the payment request",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "3 digits numeric RAAST assigned payment purpose code. If payment received from 1LINK the value will be of 4 digits.\nplease refer to [Purpose Code Table](#purp-code)",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction",
                "example": 5000
              },
              "instrId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Instruction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank",
                "example": "TMIC230511125023876423"
              },
              "endToEndId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "End to end id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "txId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Transaction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "TMIC230511125023876423"
              },
              "msgId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Message id received by RAAST.\n\nIn case of 1LINK the field will be blank.",
                "example": "TMICFBPK110523000111250233"
              }
            },
            "required": [
              "purposeCode",
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditAdvise": {
        "description": "Representation of a Bank's Controller Credit Advise",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "initiator": {
                "type": "string",
                "description": "Transaction received by, any of followings",
                "enum": [
                  "1LINK",
                  "RAAST"
                ],
                "example": "RAAST"
              },
              "txnType": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "please refer to [Transaction Type Table](#tran-type)",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04"
                ],
                "example": "01"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "initiator",
              "txnType"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "senderBankIMD": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "The value comes if transaction received from 1LINK. In other case it will be blank",
                "example": ""
              },
              "senderBankBIC": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "The value comes if transaction received from RAAST. In other case it will be blank",
                "example": "NBPBPKKA"
              },
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN / account",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC if value received in the payment request",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "3 digits numeric RAAST assigned payment purpose code. If payment received from 1LINK the value will be of 4 digits.\nplease refer to [Purpose Code Table](#purp-code)",
                "example": "0125"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction",
                "example": 5000
              },
              "instrId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Instruction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank",
                "example": "TMIC230511125023876423"
              },
              "endToEndId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "End to end id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "txId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Transaction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "TMIC230511125023876423"
              },
              "msgId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "***Message id received by RAAST***.\n\nIn case of 1LINK the field will be blank.",
                "example": "TMICFBPK110523000111250233"
              },
              "oneLinkrrn": {
                "type": "string",
                "minLength": 12,
                "maxLength": 12,
                "description": "Retrieval reference number.\n\nIn case of 1LINK, OC will send same value which comes from 1LINK in DE-37. \n\nIn case of RAAST the field will be blank",
                "example": "002236987456"
              },
              "oneLinkstan": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "System trace audit number.\n\nIn case of 1LINK, OC will send same value which comes from 1LINK in DE-11.\n\nIn case of RAAST the field will be blank.",
                "example": "987456"
              }
            },
            "required": [
              "purposeCode",
              "amount"
            ]
          },
          "orgTxnInfo": {
            "type": "object",
            "properties": {
              "orgtxndate": {
                "type": "string",
                "minLength": 8,
                "maxLength": 8,
                "description": "Original transaction date",
                "format": "yyyymmdd",
                "example": "20231015"
              },
              "orgtxntime": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Original transaction time",
                "format": "hhmmss",
                "example": "182243"
              },
              "orginstrId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Original transaction instruction id",
                "example": "TMIC230511125023876423"
              },
              "orgendToEndId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Original transaction end to end id",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "orgtxId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Original transaction id",
                "example": "TMIC230511125023876423"
              },
              "orgmsgId": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Original transaction message id",
                "example": "TMICFBPK110523000111250233"
              }
            }
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditInquiry": {
        "description": "Representation of a Bank's Controller Credit Inquiry",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "orgTxnInfo": {
            "type": "object",
            "properties": {
              "orgtxnrrn": {
                "type": "string",
                "minLength": 12,
                "maxLength": 12,
                "description": "Retrieval reference number",
                "example": "002236987456"
              },
              "orgtxnstan": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "System trace audit number",
                "example": "987456"
              },
              "orgtxndate": {
                "type": "string",
                "minLength": 8,
                "maxLength": 8,
                "format": "yyyymmdd",
                "description": "Transaction Date",
                "example": "20231015"
              },
              "orgtxntime": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "format": "hhmmss",
                "description": "Transaction Time",
                "example": "182243"
              }
            },
            "required": [
              "orgtxnrrn",
              "orgtxnstan",
              "orgtxndate",
              "orgtxntime"
            ]
          }
        }
      },
      "rrn": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "<span style=\"color: green;\">***Unique Retrieval Reference Number***</span>. Can be used to trace the request ",
        "example": "002236987456"
      },
      "stan": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "description": "System trace audit number",
        "example": "987456"
      },
      "tfcorrelationId": {
        "type": "string",
        "minimum": 36,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Unique Correlation Id***</span>. The value will be same which channel received in response of title fetch",
        "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
      },
      "correlationId": {
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call.     "
      },
      "msgId": {
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Unique Message Id for RAAST payments***</span>. The key will be communicated end to end and will be used for e2e reconciliation. Bank is responsible to make sure that the id will not be duplicated in any case",
        "example": "MASH231016140256592221"
      },
      "authId": {
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Debit authorization unique reference number return by core banking***</span> in response of debit hold request",
        "example": "654123"
      },
      "txndate": {
        "type": "string",
        "minLength": 8,
        "maxLength": 8,
        "format": "yyyymmdd",
        "description": "Transaction Date",
        "example": "20231015"
      },
      "txntime": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "format": "hhmmss",
        "description": "Transaction Time",
        "example": "182243"
      },
      "response_code": {
        "type": "string",
        "minLength": 4,
        "maxLength": 4,
        "description": "Response code for the request"
      },
      "response_desc": {
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "description": "Description for the respective response code"
      },
      "rsp_rrn": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "Echo back"
      },
      "rsp_stan": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "description": "Echo back"
      },
      "info": {
        "type": "object",
        "properties": {
          "rrn": {
            "$ref": "#/components/schemas/rrn"
          },
          "stan": {
            "$ref": "#/components/schemas/stan"
          },
          "txndate": {
            "$ref": "#/components/schemas/txndate"
          },
          "txntime": {
            "$ref": "#/components/schemas/txntime"
          }
        },
        "required": [
          "rrn",
          "stan",
          "txndate",
          "txntime"
        ]
      },
      "account": {
        "type": "object",
        "description": "Customer Account",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "currency": {
            "type": "string",
            "example": "PKR",
            "maxLength": 3
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "currency",
          "isDefault"
        ]
      },
      "id": {
        "type": "object",
        "properties": {
          "iban": {
            "type": "string",
            "example": "PK79NBPA0002004137343952",
            "maxLength": 35
          }
        },
        "required": [
          "iban"
        ]
      },
      "alias_type": {
        "type": "string",
        "example": "MOBILE",
        "enum": [
          "MOBILE",
          "CNIC",
          "EMAIL",
          "TXT"
        ]
      },
      "alias": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/alias_type"
          },
          "value": {
            "type": "string",
            "example": "03222507423"
          },
          "status": {
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "suspended",
              "inactive",
              "deleted"
            ]
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account"
            }
          }
        },
        "required": [
          "type",
          "value",
          "status",
          "accounts"
        ]
      },
      "uid": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "maxLength": 20,
            "example": "CNIC",
            "enum": [
              "CNIC",
              "NICOP",
              "POC",
              "REG_NO",
              "­NTN"
            ]
          },
          "value": {
            "type": "string",
            "maxLength": 20,
            "description": "Customer’s document number",
            "example": "4230146389021"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "customerInfo": {
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string",
            "example": "CNIC",
            "enum": [
              "CNIC",
              "NICOP",
              "POC",
              "REG_NO",
              "­NTN"
            ]
          },
          "documentNumber": {
            "type": "string",
            "example": "4230146389021",
            "description": "Customer’s document number",
            "maxLength": 20
          },
          "name": {
            "type": "string",
            "example": "Account Title here",
            "description": "Customer’s name",
            "maxLength": 140
          },
          "surname": {
            "type": "string",
            "example": "",
            "description": "Customer’s surname",
            "maxLength": 80
          },
          "gender": {
            "type": "string",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMA",
              "TRNS"
            ]
          },
          "birthDate": {
            "minLength": 10,
            "maxLength": 10,
            "type": "string",
            "example": "1987-01-28",
            "description": "Customer’s birth date",
            "format": "yyyy-mm-dd"
          },
          "startDate": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "example": "2021-05-15",
            "format": "yyyy-mm-dd"
          },
          "expirationDate": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "example": "2025-05-15",
            "format": "yyyy-mm-dd"
          }
        },
        "required": [
          "documentType",
          "documentNumber",
          "name",
          "surname",
          "gender",
          "birthDate",
          "startDate",
          "expirationDate"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "AUTHENTICATION",
      "tags": [
        "Token API SPECS"
      ]
    },
    {
      "name": "BANK API SPECS",
      "tags": [
        "Client Bank API Specs"
      ]
    },
    {
      "name": "OpenConnect API Specs",
      "tags": [
        "Billing API Specs",
        "CAS API Specs",
        "Payment API Specs",
        "Non Financial API Specs"
      ]
    }
  ]
}