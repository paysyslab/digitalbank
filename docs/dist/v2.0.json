{
  "openapi": "3.0.3",
  "info": {
    "title": "Digital Bank API",
    "version": "V2.0",
    "description": "<b>Open Connect</b> is a modern, integrated and a highly scalable payment switch platform with an efficient service-oriented architecture approach. The platform is completely independent and has a multiplayer design. The core technology for messaging is based on Queue manager, which is a highly scalable MQ system, which can be horizontally scaled to run on a cluster of machines. The deployment can be done on Virtual environment as well as containerized environment.\n\n  # Updates In Latest Version\n\n  1. <b>Change the length of account tilte in 1link transfer</b>\n\n  # API Code Reference\n  This section contains lists of <b>purpose codes</b> and <b>response codes</b> utilized or generated by APIs\n\n  ## Purpose Codes\n  This data element is used to carry payment details in IBFT and RAAST Transfer transaction. The payment may be between business to business (B2B), business to consumer (B2C), consumer to business (C2B), business to government (B2G), and government to consumer (G2C) etc.\n\n  <a id=\"purp-code\"></a>\n  | Code  | Particulars                                |\n  |-------|--------------------------------------------|\n  | 0303  | Bill Payment                               |\n  | 0320  | Donations / Charity / Zakat                |\n  | 0336  | Educational Payment                        |\n  | 0374  | Transfer to Own Account                    |\n  | 0251  | Transfer to Family and Friends             |\n  | 0316  | Insurance / Takaful                        |\n  | 0369  | Investments                                |\n  | 0374  | Loan / Credit Card Payment                 |\n  | 0252  | Medical Expenses                           |\n  | 0315  | Food and Groceries Purchase                |\n  | 0315  | Clothing and Accessories Purchase          |\n  | 0356  | Subscription / Membership Fee / Rental Payments |\n  | 0404  | Salaries / Wages                           |\n  | 0364  | Travelling                                 |\n  | 0122  | Vendor / Supplier / Business Payment       |\n  | 9999  | Open field to be populated by customer – Max up to 40 characters    |\n\n\n  ## Response Codes\n  Response codes configured for integration between two systems are typically specific, application-level status codes that the systems use to communicate the outcome of requests and transactions between them. These custom codes are used in addition to or sometimes in place of standard HTTP status codes to provide more detailed and context-specific information about the integration process.\n\n  | Code starts with | Description                                         |\n  |------------------|-----------------------------------------------------|\n  | 01               | 1LINK assigned code for IBFT Title fetch and advise |\n  | 02               | 1LINK assigned code for bill payments               |\n  | 03               | RAAST assigned code for RAAST ID operations and RAAST P2P payments |\n  | 04               | Open Connect response code comes usually where any validation failed at middleware level |\n  | 4xx              | Default HTTP error code (4xx series)                |\n  | 5xx              | Default HTTP error code (5xx series)                |\n\n  | Response Code | Response Description                                                 |\n  |--------------|------------------------------------------------------------------|\n  | 0000         | PROCESSED OK / IBFT advice sent to beneficiary bank. It is used for IBFT status inquiry product    |\n  | 0101         | ACCOUNT LIMIT EXCEEDED                                               |\n  | 0102         | INVALID ACCOUNT/ PAYER ACCOUNT IS INVALID/WALLET NUMBER           |\n  | 0103         | ACCOUNT INACTIVE                                                     |\n  | 0104         | LOW/INSUFFICIENT BALANCE                                             |\n  | 0105         | INVALID CARD                                                         |\n  | 0106         | INVALID IMD / INVALID BANK IMD PROVIDED                             |\n  | 0107         | INVALID CARD DATA                                                    |\n  | 0108         | INVALID CARD RECORD                                                  |\n  | 0109         | FIELD ERROR                                                         |\n  | 0110         | DUPLICATE TRANSACTION                                                |\n  | 0111         | BAD TRANSACTION CODE                                                 |\n  | 0112         | INVALID CARD STATUS                                                  |\n  | 0113         | INTERNAL DATABASE ERROR                                              |\n  | 0114         | WARM CARD                                                           |\n  | 0115         | HOT CARD                                                            |\n  | 0116         | BAD CARD STATUS                                                     |\n  | 0117         | UNKNOWN AUH MODE                                                    |\n  | 0118         | INVALID TRANSACTION DATE                                            |\n  | 0119         | INVALID CURRENCY CODE                                               |\n  | 0120         | NO TRANSACTION ON IMD / PAYEE BANK IS NOT ENROLLED                |\n  | 0121         | NO TRANSACTION ON ACCT                                              |\n  | 0122         | BAD CARD CYCLE DATE                                                 |\n  | 0123         | BAD CARD CYCLE LENGTH                                               |\n  | 0124         | BAD PIN                                                             |\n  | 0125         | CARD EXPIRED                                                        |\n  | 0126         | INTERNAL ERROR                                                      |\n  | 0127         | TRANSACTION AMOUNT EXCEEDS PREAUTHORIZED APPROVAL AMOUNT          |\n  | 0128         | NO ACCOUNTS LINKED                                                 |\n  | 0130         | ORIGINAL TRANSACTION NOT FOUND                                      |\n  | 0134         | ORIGINAL NOT AUTHORIZED                                             |\n  | 0135         | ORIGINAL ALREADY REVERSED                                          |\n  | 0137         | INVALID REPLACEMENT AMOUNT                                          |\n  | 0138         | TRANSACTION CODE MISMATCH                                           |\n  | 0139         | BAD TRANSACTION TYPE / PAYER BANK IS NOT ENROLLED                  |\n  | 0141         | EXPIRY DATE MISMATCH                                                |\n  | 0145         | TRACK-2 DATA MISMATCH                                               |\n  | 0146         | UNABLE TO PROCESS                                                   |\n  | 0147         | ERROR CURRENCY CONVERSION                                           |\n  | 0148         | BAD AMOUNT/ AMOUNT RECEIVED IS NOT AGREED OR EXPECTED             |\n  | 0150         | HOST STATUS UNKNOWN                                                 |\n  | 0151         | HOST NOT PROCESSING / 1IBFT advice pending to be received by beneficiary bank |\n  | 0152         | HOST IN STANDIN MODE                                                |\n  | 0154         | SAF TRANSMIT MODE                                                   |\n  | 0155         | HOST LINK DOWN                                                      |\n  | 0156         | HOST TIMEOUT                                                        |\n  | 0158         | TRANSACTION TIMEDOUT BY MEMBER                                     |\n  | 0159         | HOST REJECT                                                         |\n  | 0160         | PIN RETRIES EXHAUSTED                                               |\n  | 0161         | TRANSACTION REJECTED, PLEASE SWITCH TO CONTACT INTERFACE           |\n  | 0162         | TRANSACTION REJECTED, PERFORM TRANSACTION AGAIN WITH CARDHOLDER AUTHENTICATION REQUIRED |\n  | 0163         | DESTINATION NOT FOUND                                               |\n  | 0164         | DESTINATION NOT REGISTERED                                          |\n  | 0165         | CASH TRANSACTION NOT ALLOWED                                        |\n  | 0166         | NO TRANSACTION ALLOWED / TRANSACTION FORBIDDEN ON THIS TYPE OF ACCOUNT / SEARCH ON OLD TRANSACTION NOT ALLOWED |\n  | 0167         | INVALID ACCOUNT STATUS                                              |\n  | 0168         | INVALID TO ACCOUNT                                                   |\n  | 0170         | REFUSED IMD                                                         |\n  | 0171         | NO PROFILE AVAILABLE                                                |\n  | 0172         | CURRENCY NOT ALLOWED                                                |\n  | 0174         | TRANSACTION SOURCE NOT ALLOWED                                      |\n  | 0175         | UNKNOWN TRANSACTION SOURCE                                          |\n  | 0176         | MANUAL ENTRY NOT ALLOWED                                            |\n  | 0177         | REFER TO ISSUER                                                    |\n  | 0178         | INVALID MERCHANT                                                    |\n  | 0179         | HONOR WITH ID                                                      |\n  | 0180         | MESSAGE FORMAT ERROR / BAD REQUEST                                  |\n  | 0181         | SECURITY VIOLATION / DEVICE NOT ALLOWED FOR BIO-METRIC TRANSACTION (NON-LFD) |\n  | 0182         | MAIL ORDER NOT ALLOWED                                             |\n  | 0186         | INCORRECT PIN LENGTH                                                |\n  | 0190         | CUSTOMER NOT FOUND                                                  |\n  | 0191         | ISSUER REVERSAL                                                    |\n  | 0192         | ACCOUNT LOCKED/ PAYER ACCOUNT IS BLOCKED, PROHIBTING POSTING OF TRANSACTION AGAINST IT. |\n  | 0193         | CUSTOMER RELATION NOT FOUND/ PAYER DECLINED REQUEST / NO TITLE FETCH |\n  | 0194         | PERMISSION DENIED/TRANSACTION NOT ALLOWED                          |\n  | 0195         | TRANSACTION REJECTED                                                |\n  | 0196         | ORIGINAL ALREADY REJECTED                                          |\n  | 0197         | BAD EXPIRY DATE                                                     |\n  | 0198         | ORIGINAL AMOUNT INCORRECT                                           |\n  | 0199         | ORIGINAL DATA ELEMENT MISMATCH                                      |\n  | 0221         | Inactive Channel                                                     |\n  | 0222         | Invalid Signature                                                    |\n  | 0225         | UBPS service timed out or is not available                           |\n  | 0227         | Internal / Unspecified Error                                         |\n  | 0266         | Bill in Process                                                      |\n  | 0286         | Malformed Index in Relationship Inquiry                               |\n  | 0287         | Invalid Index                                                        |\n  | 0288         | Customer Not Found                                                   |\n  | 0289         | Bill Already Paid                                                    |\n  | 0290         | Transaction Not Supported                                             |\n  | 0291         | Utility Company ID not Found                                          |\n  | 0292         | Relationship Not Found                                                |\n  | 0293         | Login Failed Network Message                                          |\n  | 0294         | Bill Not Found                                                        |\n  | 0295         | Web Service timed out or is not available                             |\n  | 0296         | Malformed Request (Error in Request Message Format)                  |\n  | 0297         | Internal / Unspecified Error                                           |\n  | 0298         | Some Error occurred in web-service                                    |\n  | 0299         | Unable to process at this time                                         |\n  | 0301         | Cannot find country                                                    |\n  | 0302         | Cannot find alias type                                                 |\n  | 0303         | Cannot find account type                                               |\n  | 0304         | Cannot find UID type                                                   |\n  | 0305         | Cannot find customer                                                   |\n  | 0306         | Customer already exists                                                |\n  | 0307         | Customer is suspended                                                 |\n  | 0308         | Cannot find participant                                                |\n  | 0309         | Cannot find currency                                                   |\n  | 0310         | Account is already default                                            |\n  | 0311         | Cannot find account                                                    |\n  | 0312         | Cannot find alias                                                      |\n  | 0313         | Account is already suspended                                           |\n  | 0314         | Account is already active                                              |\n  | 0315         | Duplicated UID                                                         |\n  | 0316         | Duplicated account                                                     |\n  | 0317         | Customer is already suspended                                          |\n  | 0318         | Customer is already active                                             |\n  | 0319         | Multiple default accounts                                              |\n  | 0321         | Alias already exists                                                   |\n  | 0322         | Alias has expired                                                      |\n  | 0323         | Account has expired                                                    |\n  | 0324         | Customer is duplicated in the message                                  |\n  | 0327         | Alias has already expired                                              |\n  | 0328         | Alias already exists                                                   |\n  | 0329         | The account is not linked to the alias                                  |\n  | 0330         | The account is already linked to the alias                             |\n  | 0331         | Alias is suspended                                                      |\n  | 0333         | Alias mask is invalid                                                   |\n  | 0336         | Customer is inactive                                                    |\n  | 0338         | Alias start date is later than expiration date                          |\n  | 0339         | Account opening date is later than closing date                         |\n  | 0340         | Cannot link alias to account                                            |\n  | 0341         | Cannot link account to alias                                            |\n  | 0342         | Only servicer can register its accounts                                 |\n  | 0343         | Invalid mobile number format                                            |\n  | 0344         | Operation is not allowed                                                |\n  | 0345         | Customer has no accounts serviced by                                    |\n  | 0346         | Invalid email format                                                    |\n  | 0350         | Invalid servicer                                                        |\n  | 0352         | UID does not match the pattern                                          |\n  | 0353         | UID mask is invalid                                                     |\n  | 0354         | Default account is not specified                                        |\n  | 0368         | Invalid request (Response definition vary)                              |\n  | 0401         | Transaction Amount Exceed to per transaction limit                     |\n  | 0402         | Transaction Amount Exceed to daily transaction limit                    |\n  | 0403         | Number of transactions exhausted for allowed daily transactions         |\n  | 0404         | Insufficient balance                                                    |\n  | 0405         | Beneficiary account is invalid                                           |\n  | 0406         | Beneficiary account is inactive                                          |\n  | 0407         | Customer account is inactive                                            |\n  | 0408         | Customer account is closed                                              |\n  | 0409         | Host link down                                                          |\n  | 0410         | Raast link down                                                        |\n  | 0411         | No transaction found                                                    |\n  | 0412         | Transaction failed at Raast                                            |\n  | 0431         | Title fetch reference not found                                         |\n  | 0499         | Unable to process/ No response received by SBP                         |\n\n  | HTTP Response Code | Description               |\n  |--------------------|---------------------------|\n  | 400                | Bad Request               |\n  | 401                | Unauthorized              |\n  | 403                | Forbidden                 |\n  | 404                | Not Found                 |\n  | 405                | Method Not Allowed        |\n  | 500                | Internal Server Error     |\n  | 501                | Not Implemented           |\n  | 502                | Bad Gateway               |\n  | 503                | Service Unavailable       |\n  | 504                | Gateway Timeout           |\n  | 505                | HTTP Version Not Supported |\n\n\n  ## Bank Controller Response Code\n  <a id=\"bank-rspcodes\"></a>\n     The bank middleware is responsible to share the list of possible response codes to be responded by the bank for the appropriate mapping with the scheme systems.\n      \n  | Response Code | Description |\n  |------------------|----------|\n  | 0000             | Success  |\n  |                  |          |\n\n  ## Sender Account Type\n  <a id=\"account-type\"></a>\n  | Account Code | Account Type                      |\n  |--------------|----------------------------------|\n  | 00           | Default Account (no account specified) |\n  | 10           | Savings Account                  |\n  | 20           | Current or Checking Account      |\n  | 30           | Credit Account                   |\n  | 40           | Branchless Banking Account       |\n  | 50           | Biometric Withdrawal             |\n  | 60           | Roshan Digital Account           |\n\n  ## Transaction Type\n  <a id=\"tran-type\"></a>\n  \n  | Transaction Type | Description                      |\n  |------------------|----------------------------------|\n  | 01               | For RAAST P2P incoming           |\n  | 02               | For 1LINK IBFT incoming          |\n  | 03               | For RAAST return payment         |\n  | 04               | For RAAST bulk receiving         |\n\n\n  ## Channel Type\n  <a id=\"channel-type\"></a>\n\n  | Channel ID | Channel Type  |\n  |------------------|----------------------------------|\n  | 000000000\t               | ATM   |\n  | 000000001\t               | IVR   |\n  | 000000002\t               | Call Center   |\n  | 000000003\t               | Web   |\n  | 000000004\t               | T24 TELL  |\n  | 000000005\t               | POS   |\n  | 000000006\t               | CDM_CASH  |\n  | 000000007\t               | Mobile      |\n  | 000000008\t               | Branchless    |\n\n\n  ##  RTGS APIs Fields - Possible List of Values\n  <a id=\"rtgs-api-fields\"></a>\n  \n  | Use Case | Field | Pertinent SWIFT Field | Description | Possible Values |\n  |----------|-------|-----------------------|-------------|-----------------|\n  | All Messages |  prty | Field :113: | Priority with value in the range 10-99 is assigned to RTGS payments that will be processed on “individual” basis.For transfers sent to RTGS priority value should be assigned according to the rules applied for the different types of the orders. | 10 to 99. Priority 10 means the highest priority and 99 means the lowest priority) |\n  | MT 102, 103, 202.<br><br>Copy Message (MT 102, 103, 202) | tranCode | Field :26T: | | The set of transaction type codes is given in the table below<br><br>Code - Description<br><br>000 - System operations<br>001 - Ordinary transfers<br>002 - Cash withdrawal operations<br>003 - Cash deposit operations<br>004 - Outgoing foreign transfers<br>005 - Incoming foreign transfers <br>006 - DVP operations <br>007 - REPO operations (inception/maturity)<br>008 - Trading operations(inception, maturity) of T-bill, OGDB, coupon, maturity<br>009 - DVP operations from Depository<br>010 - Covering Net Debit position<br>011 - Clearing transactions from Clearing system<br>012 - Clearing transactions for Clearing system<br>013 - General Ledger transactions<br>014 - Reverse transactions<br>015 - Buy-back operations (reverse repo leg 1, leg 2)<br>016 - Payroll transactions<br>017 - Collection of fees<br>018 - Finance Payments<br>019 - Capital Deposit/Withdrawal<br>020 - Discounting with SBP<br>021 - Trading Operation (CD issue/maturity) |\n  | MT 102, 103, 202.<br><br>Copy Message (MT 102, 103, 202) | tranInfo | Field :72:  | Field contains Sender to Receiver information. If a Participant sends transfer to PRISM, this field may contain the purpose of payment to notify PRISM about way of processing of this payment. Same will be copied to the receiving Participant. | The following keyword should be used in this field:<br><br>1. /BNF/<information> for general purpose information from Sender to Beneficiary.<br><br>2. /GLD/<Account_number> may be used in case of transaction that debits State Bank Settlement account. <Account_number> represents account code in the GL application.<br><br>3. /GLC/<Account_number> may be used in case of transaction that credits State Bank Settlement account. <Account_number> represents account code in the GL application.<br><br>4. //CODTYPTR/ may be used to define transaction type code to specify the payment instruction processing in specific way. |\n  | MT 102, 103, 202.<br><br>Copy Message (MT 102, 103, 202) | chargesDetail | Field :71A: | This field specifies which party will bear the charges for the transaction. | BEN - All transaction charges are to be borne by the beneficiary customer.<br><br>OUR - All transaction charges are to be borne by the ordering customer.<br><br>SHA - Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer. |\n  | MT n96/STAT | response | Field :76: | It contains Type of Answer and Status of related transfer. | In case of Status Answer message, this field may have the following values:<br><br><br>STAT/REJT - Payment message was rejected due to MTn92 issued by Participant<br><br>STAT/CANC - Payment message was cancelled due to CB and/or PRISM regulations<br><br>STAT/EXEC -Payment is being executed<br><br>STAT/SETL - Payment is settled<br><br>STAT/NETR -Payment is waiting for Clearing<br><br>STAT/NETE -Payment is included into Clearing transaction now<br><br>STAT/NETL -Clearing payment is inactive<br><br>STAT/ERRC -Error occurs in processing a query<br><br>STAT/ERRP -Error occurs in processing a original payment instruction<br><br>STAT/WAIT -Payment message is queued<br><br>STAT/SUSP -Payment message is suspended<br><br>STAT/INAC -Payment is inactive<br><br>STAT/AUTH -Payment is waiting for the authorization |\n  | MT n96/DUPL | response | Field :76: | It contains Type of Answer and Status of related transfer. | In case of Copy Answer message, this field may have the following values:<br><br><br>DUPL/OK - Block 4: of related transfer has been copied<br><br>DUPL/ERRC - Error occurs during related query processing |\n  | MT n96/PRTY | response | Field :76: | It contains Type of Answer and Status of related transfer. | In case of such answer message, this field may have the following values:<br><br><br>PRTY/OK - Priority of payment is changed<br><br>PRTY/ERRC - Error occurs in changing the payment priority |\n  | MT n96/CANC | response | Field :76: | It contains Type of Answer and Status of related transfer. | In case of Cancellation Answer message, this field may have the following values:<br><br><br>CANC/OK - Payment is canceled<br><br>CANC/ERRC - Error occurs in request processing |\n  | MT n96/ERRC | response | Field :76: | It contains code “ERRC”, which is followed with the date/time when error occurs in processing a message. | ERRC |\n  | MT 986/STAT | narrative | Field :79: | It contains an answer to related Request. | The following answers are defined for Account Status report:<br><br><br>AA - Account is not locked<br>DA - Debit is locked<br>AC - Credit is locked<br>DC - Account is locked |\n  | MT 986/SQDC | narrative | Field :79: | For Account Report, it contains an answer to related Request, where each row specifies the following information:<br><br><br>-Code<br>-Currency<br>Value date<br>-Amount<br>-Number of transfers | The following codes are defined for Account report:<br><br><br>SD - Sum total and the number of suspended transfers that debit the account. Transfers are suspended if debit account or Participant who owns debit account is suspended.<br><br>SC - Sum total and the number of suspended transfers that credit the account. Transfers are suspended if credit account or Participant who owns credit account is suspended.<br><br>ED - Sum total and the number of queued transfers that debit the account. Transfers are queued if there are no enough funds on any account within transaction this transfer belongs.<br><br>EC - Sum total and the number of queued transfers that credit the account. Transfers are queued if there are no enough funds on any account within transaction this transfer belongs.<br><br>LD - Sum total and the number of frozen transfers that debit the account. Transfers are frozen if settlement for this type of transfers are not allowed in the current business day period.<br><br>LC - Sum total and the number of frozen transfers that credit the account. Transfers are frozen if settlement for this type of transfers are not allowed in the current business day period.<br><br>CC or CD - Current balance on the account (CC means Credit amount and CD means debit amount)<br><br>AC or AD - Available balance on the account (AC means Credit amount and AD means debit amount) |",
    "x-logo": {
      "url": "logo.png",
      "altText": "paysys logo"
    },
    "license": {
      "name": "Paysys Labs",
      "url": "https://www.paysyslabs.com/"
    }
  },
  "servers": [
    {
      "url": "https://apigw.paysyslabs.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "jwtToken": []
    }
  ],
  "tags": [
    {
      "name": "Token API SPECS",
      "description": "The client needs to authenticate itself before interacting with any Openconnect APIs"
    },
    {
      "name": "OpenConnect API Specs",
      "description": "These are the API(s) which will be exposed by OpenConnect"
    },
    {
      "name": "Client Bank API Specs",
      "description": "These are the API(s) which will be exposed by Bank"
    },
    {
      "name": "Billing API Specs",
      "description": "These are the billing related API(s)"
    },
    {
      "name": "CAS API Specs",
      "description": "These are the RAAST CAS related API(s)"
    },
    {
      "name": "Payment API Specs",
      "description": "These are the Payment tranfer related API(s)"
    },
    {
      "name": "Non Financial API Specs",
      "description": "These are the Non financial related API(s)"
    },
    {
      "name": "RTGS API Specs",
      "description": "These are the RTGS related API(s)"
    }
  ],
  "paths": {
    "/realms/paysys-raast-realm/protocol/openid-connect/token": {
      "post": {
        "summary": "authentication",
        "tags": [
          "Token API SPECS"
        ],
        "description": "This method is secure and includes enhancements that allow for more robust security mechanisms, which will ensure that the Open Connect integration is secure and reliable.\n\n\nThis is also the centralized authentication mechanism for all the APIs exposed by Open Connect. This will be running as a separate application on specific port.",
        "operationId": "authenticate",
        "security": [
          {
            "clientCredentials": []
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token generated successfully",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ6b25lcmEiLCJleHAiOjE2MjIwOTk4OTcsImlhdCI6MTYyMjAxMzQ5N30.67UjDFQv4DsE0QtJY_WIYbAQJ20xfTsO-CiMy0fdYIJR1il4hHbd4s4bi7LUDtmZ6-d-ENhq23hpTWTJPUxATA",
                  "expires_in": 300,
                  "token_type": "Bearer",
                  "refresh_expires_in": 0,
                  "not-before-policy": 0,
                  "scope": "profile email"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "This token will be used in all APIs in header with header name “Authorization”. Token value will be followed by Bearer"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "The value is in seconds"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Bearer"
                    },
                    "refresh_expires_in": {
                      "type": "number"
                    },
                    "not-before-policy": {
                      "type": "number"
                    },
                    "scope": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/p_Authentication"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/scTran": {
      "post": {
        "summary": "Single Customer Credit Transfer [MT 103]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"sc-Tran\"></a>\nFacilitate single customer credit transfer.",
        "operationId": "scTran",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/scTran' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"txnInfo\": {\n    \"tranRef\": \"033DBFC233480052\",\n    \"msgType\": \"MT103\",\n    \"prty\": \"0020\",\n    \"type\": \"DIR\"\n  },\n  \"senderInfo\": {\n    \"senderBIC\": \"BOMLAEAD\",\n    \"senderInstAcc\": \"SBPPKMQRTGSACC01\",\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountCurrency\": \"586\",\n    \"address\": \"ABC Karachi\"\n  },\n  \"intermediateInfo\": {\n    \"intermediateBIC\": \"\",\n    \"intermediateInstAccount\": \"\"\n  },\n  \"beneficiaryInfo\": {\n    \"beneficiaryBIC\": \"NBPBPKKA\",\n    \"beneficiaryInstAccount\": \"SBPPKNBPRTGSACC01\",\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqqas Nizam\",\n    \"address\": \"ABC Lahore\"\n  },\n  \"paymentInfo\": {\n    \"operationCode\": \"CREDIT\",\n    \"instructionCode\": \"SDVA\",\n    \"tranCode\": \"001\",\n    \"currency\": \"PKR\",\n    \"amount\": \"1000\",\n    \"details\": \"Invoice ABC123\",\n    \"chargesDetail\": \"SHA\",\n    \"tranInfo\": \"/CODTYPTR/001/BNF\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0000"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Success"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    },
                    "txnResult": {
                      "type": "object",
                      "properties": {
                        "sessionid": {
                          "type": "string",
                          "example": "1234"
                        },
                        "sequencenumber": {
                          "type": "string",
                          "example": "abc124"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number Key Field",
                        "example": 223322332233,
                        "minLength": 12,
                        "maxLength": 12
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "example": 223322,
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yymmdd)",
                        "example": 240416,
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "example": 40100,
                        "minLength": 6,
                        "maxLength": 6
                      }
                    },
                    "required": [
                      "rrn",
                      "stan",
                      "txndate",
                      "txntime"
                    ]
                  },
                  "txnInfo": {
                    "type": "object",
                    "properties": {
                      "tranRef": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 16,
                        "description": "Transaction reference number",
                        "example": "033DBFC233480052"
                      },
                      "msgType": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 5,
                        "description": "Message type",
                        "example": "MT103"
                      },
                      "prty": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 4,
                        "description": "Transaction priority",
                        "example": 20
                      },
                      "type": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "description": "Indicates beneficiary institution is direct participant or cover to PRISM",
                        "example": "DIR"
                      }
                    },
                    "required": [
                      "tranRef",
                      "msgType",
                      "prty",
                      "type"
                    ]
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "senderBIC": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 16,
                        "description": "Bank’s BIC",
                        "example": "HUGO"
                      },
                      "senderInstAccount": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 24,
                        "description": "Institution settlement account in PRISM",
                        "example": "SBPPKHGRTGSACC01"
                      },
                      "fromAccount": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 24,
                        "description": "Customer’s account",
                        "example": "PK56AIIN1234567890000001"
                      },
                      "fromAccountTitle": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 40,
                        "description": "Customer’s account title",
                        "example": "Muhammad Ali"
                      },
                      "fromAccountCurrency": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 3,
                        "description": "Currency code",
                        "example": 586
                      },
                      "address": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 40,
                        "description": "Customer’s address",
                        "example": "ABC Karachi"
                      }
                    },
                    "required": [
                      "senderBIC",
                      "senderInstAccount",
                      "fromAccount",
                      "fromAccountTitle",
                      "fromAccountCurrency",
                      "address"
                    ]
                  },
                  "intermediateInfo": {
                    "type": "object",
                    "properties": {
                      "intermediateBIC": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 16,
                        "description": "Bank’s BIC (optional)",
                        "example": ""
                      },
                      "intermediateInstAccount": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 16,
                        "description": "Intermediate Institution settlement account in PRISM (optional)",
                        "example": ""
                      }
                    },
                    "required": [
                      "intermediateBIC",
                      "intermediateInstAccount"
                    ]
                  },
                  "beneficiaryInfo": {
                    "type": "object",
                    "properties": {
                      "beneficiaryBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC (mandatory)",
                        "example": "NBPBPKKA"
                      },
                      "beneficiaryInstAccount": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Institution settlement account in PRISM (optional)",
                        "example": "SBPPKNBPRTGSACC01"
                      },
                      "toAccount": {
                        "type": "string",
                        "maxLength": 24,
                        "description": "Customer’s account (mandatory)",
                        "example": "PK76NBPA1234567890000999"
                      },
                      "toAccountTitle": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Customer’s account title (mandatory)",
                        "example": "Waqas Nizam"
                      },
                      "address": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Customer’s address (mandatory)",
                        "example": "ABC Lahore"
                      }
                    },
                    "required": [
                      "beneficiaryBIC",
                      "toAccount",
                      "toAccountTitle",
                      "address"
                    ]
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "operationCode": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Bank operation code (optional)",
                        "example": "CREDIT"
                      },
                      "instructionCode": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Instruction code (mandatory)",
                        "example": "SDVA"
                      },
                      "tranCode": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Transaction type code (mandatory)",
                        "example": 1
                      },
                      "currency": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Transaction currency (mandatory)",
                        "example": "PKR"
                      },
                      "amount": {
                        "type": "number",
                        "description": "Amount of transaction (mandatory)",
                        "example": 1000
                      },
                      "details": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Purpose of payment (optional)",
                        "example": "InvoiceABC123"
                      },
                      "chargesDetail": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Specifies which party will bear the charges for the transaction (mandatory)",
                        "example": "SHA"
                      },
                      "tranInfo": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Contains sender to beneficiary information, including purpose of payment, to notify PRISM about the way of processing this payment (mandatory)",
                        "example": "/CODTYPTR/001/BNF"
                      }
                    },
                    "required": [
                      "instructionCode",
                      "tranCode",
                      "currency",
                      "amount",
                      "chargesDetail",
                      "tranInfo"
                    ]
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string"
                      },
                      "r2": {
                        "type": "string"
                      },
                      "r3": {
                        "type": "string"
                      },
                      "r4": {
                        "type": "string"
                      },
                      "r5": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/mcTran": {
      "post": {
        "summary": "Multiple Customer Credit Transfer [MT 102]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"mc-Tran\"></a>\nFacilitate multiple customer credit transfer. This message contains a list of payment instructions from one financial institution to another one. Payment instructions within MT102 are processed on “all-or-none” basis. It is not possible to issue MT102 for Participants that have no accounts within PRISM\n",
        "operationId": "mcTran",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/mcTran' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n  \"Info\": {\n    \"txndate\": \"231129\",\n    \"txntime\": \"182243\",\n    \"rrn\": \"002236987456\",\n    \"stan\": \"654321\",\n    \"fileRef\": \"033DBFC233480052\",\n    \"msgType\": \"MT102\",\n    \"prty\": \"0020\",\n    \"count\": \"4\"\n  },\n  \"senderInfo\": [\n    {\n      \"tranRef\": \"654321\",\n      \"senderBIC\": \"BOMLAEAD\",\n      \"senderInstAccount\": \"SBPPKMQRTGSACC01\",\n      \"fromAccount\": \"PK56AIIN1234567890000001\",\n      \"fromAccountTitle\": \"Muhammad Ali\",\n      \"fromAccountType\": \"00\",\n      \"fromAccountCurrency\": \"586\",\n      \"address\": \"ABC Karachi\",\n      \"amount\": \"700\",\n      \"tranDetails\": \"Invoice ABC123\"\n    },\n    {\n      \"tranRef\": \"654322\",\n      \"senderBIC\": \"BOMLAEAD\",\n      \"senderInstAccount\": \"SBPPKMQRTGSACC01\",\n      \"fromAccount\": \"PK56AIIN1234567890000002\",\n      \"fromAccountTitle\": \"Parham\",\n      \"fromAccountType\": \"00\",\n      \"fromAccountCurrency\": \"586\",\n      \"address\": \"ABC Karachi\",\n      \"amount\": \"300\",\n      \"tranDetails\": \"Invoice ABC123\"\n    }\n  ],\n  \"beneficiaryInfo\": [\n    {\n      \"tranRef\": \"654321\",\n      \"beneficiaryBIC\": \"NBPBPKKA\",\n      \"beneficiaryInstitutionAccount\": \"SBPPKNBPRTGSACC01\",\n      \"toAccount\": \"PK76NBPA1234567890000999\",\n      \"toAccountTitle\": \"Waqqas Nizam\",\n      \"address\": \"ABC Lahore\"\n    },\n    {\n      \"tranRef\": \"654322\",\n      \"beneficiaryBIC\": \"NBPBPKKA\",\n      \"beneficiaryInstAccount\": \"SBPPKNBPRTGSACC01\",\n      \"toAccount\": \"PK76NBPA1234567890000992\",\n      \"toAccountTitle\": \"Soban\",\n      \"address\": \"ABC Lahore\"\n    }\n  ],\n  \"paymentInfo\": {\n    \"operationCode\": \"CREDIT\",\n    \"instructionCode\": \"SDVA\",\n    \"tranCode\": \"001\",\n    \"currency\": \"PKR\",\n    \"amountTotal\": \"1000\",\n    \"chargesDetail\": \"SHA\",\n    \"tranInfo\": \"/CODTYPTR/001/BNF\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating error."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        },
                        "ErrorCode": {
                          "type": "string",
                          "description": "Error code."
                        },
                        "ErrorDescription": {
                          "type": "string",
                          "description": "Description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "length": 6,
                        "description": "Transaction date (Format YYMMDD)"
                      },
                      "txntime": {
                        "type": "string",
                        "length": 6,
                        "description": "Transaction time (Format HHMMSS)"
                      },
                      "rrn": {
                        "type": "string",
                        "length": 12,
                        "description": "Retrieval reference number"
                      },
                      "stan": {
                        "type": "string",
                        "length": 6,
                        "description": "System trace audit number"
                      },
                      "fileRef": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "MT102 file reference number"
                      },
                      "msgType": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Message type"
                      },
                      "prty": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Transaction priority"
                      },
                      "count": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Sum of sender and beneficiary objects"
                      }
                    },
                    "required": [
                      "txndate",
                      "txntime",
                      "rrn",
                      "stan",
                      "fileRef",
                      "msgType",
                      "prty",
                      "count"
                    ]
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "tranRef": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction reference number"
                      },
                      "senderBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "senderInstAccount": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Institution settlement account in PRISM"
                      },
                      "fromAccount": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Customer’s account"
                      },
                      "fromAccountTitle": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Customer’s account title"
                      },
                      "fromAccountCurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Currency code"
                      },
                      "address": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Customer’s address"
                      },
                      "amount": {
                        "type": "number",
                        "description": "Amount of transaction"
                      },
                      "tranDetails": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Purpose of payment"
                      }
                    },
                    "required": [
                      "tranRef",
                      "senderBIC",
                      "senderInstAccount",
                      "fromAccount",
                      "fromAccountTitle",
                      "fromAccountCurrency",
                      "address",
                      "amount"
                    ]
                  },
                  "intermediateInfo": {
                    "type": "object",
                    "properties": {
                      "tranRef": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction reference number"
                      },
                      "intermediateBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "intermediateInstAccount": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Intermediate Institution settlement account in PRISM"
                      }
                    },
                    "required": [
                      "tranRef"
                    ]
                  },
                  "beneficiaryInfo": {
                    "type": "object",
                    "properties": {
                      "tranRef": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction reference number"
                      },
                      "intermediateBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "intermediateInstAccount": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Intermediate Institution settlement account in PRISM"
                      }
                    },
                    "required": [
                      "tranRef"
                    ]
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "operationCode": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Bank operation code"
                      },
                      "instructionCode": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Instruction code"
                      },
                      "tranCode": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Transaction type code"
                      },
                      "currency": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Transaction currency"
                      },
                      "amountTotal": {
                        "type": "number",
                        "description": "Total amount of the batch transfer"
                      },
                      "chargesDetail": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Specifies which party will bear the charges for the transaction"
                      },
                      "tranInfo": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Contains sender to beneficiary information, including purpose of payment, to notify PRISM about the way of processing this payment"
                      }
                    },
                    "required": [
                      "instructionCode",
                      "tranCode",
                      "currency",
                      "amountTotal",
                      "chargesDetail",
                      "tranInfo"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/fiTran": {
      "post": {
        "summary": "Financial Institution Transfer [MT 202 Direct]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"fi-Tran\"></a>\nFacilitate financial institution transfer. \n",
        "operationId": "fiTran",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/fiTran' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n  \"Info\": {\n    \"txndate\": \"231129\",\n    \"txntime\": \"182243\",\n    \"rrn\": \"002236987456\",\n    \"stan\": \"654321\",\n    \"tranRef\": \"033DBFC233480052\",\n    \"msgType\": \"MT202\",\n    \"prty\": \"0020\",\n    \"type\": \"DIR\"\n  },\n  \"senderInfo\": {\n    \"senderBIC\": \"BOMLAEAD\",\n    \"senderInstAccount\": \"SBPPKMQRTGSACC01\",\n    \"fromAccountCurrency\": \"586\"\n  },\n  \"beneficiaryInfo\": {\n    \"beneficiaryBIC\": \"NBPBPKKA\",\n    \"beneficiaryInstAccount\": \"SBPPKNBPRTGSACC01\"\n  },\n  \"paymentInfo\": {\n    \"relatedRef\": \"NONREF\",\n    \"currency\": \"PKR\",\n    \"amount\": \"1000\",\n    \"tranInfo\": \"/CODTYPTR/001/BNF\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "length": 6,
                        "description": "Transaction date (Format YYMMDD)"
                      },
                      "txntime": {
                        "type": "string",
                        "length": 6,
                        "description": "Transaction time (Format HHMMSS)"
                      },
                      "rrn": {
                        "type": "string",
                        "length": 12,
                        "description": "Retrieval reference number"
                      },
                      "stan": {
                        "type": "string",
                        "length": 6,
                        "description": "System trace audit number"
                      },
                      "tranRef": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Transaction reference number"
                      },
                      "msgType": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Message type"
                      },
                      "prty": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Transaction priority"
                      },
                      "type": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "Indicates beneficiary is direct to PRISM"
                      }
                    },
                    "required": [
                      "txndate",
                      "txntime",
                      "rrn",
                      "stan",
                      "tranRef",
                      "msgType",
                      "prty",
                      "type"
                    ]
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "senderBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "senderInstAccount": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Institution settlement account in PRISM"
                      },
                      "fromAccountCurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Currency code"
                      }
                    },
                    "required": [
                      "senderBIC",
                      "senderInstAccount",
                      "fromAccountCurrency"
                    ]
                  },
                  "intermediateInfo": {
                    "type": "object",
                    "properties": {
                      "intermediateBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "intermediateInstAccount": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Intermediate Institution settlement account in PRISM"
                      }
                    }
                  },
                  "beneficiaryInfo": {
                    "type": "object",
                    "properties": {
                      "beneficiaryBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      },
                      "beneficiaryInstAccount": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Institution settlement account in PRISM"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "relatedRef": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Contains a reference to related transaction"
                      },
                      "currency": {
                        "type": "string",
                        "maxLength": 3,
                        "description": "Transaction currency"
                      },
                      "amount": {
                        "type": "number",
                        "description": "Amount of transaction"
                      },
                      "tranInfo": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Contains sender to beneficiary Information comprising purpose of payment to notify PRISM about way of processing of this payment"
                      }
                    },
                    "required": [
                      "relatedRef",
                      "currency",
                      "amount",
                      "tranInfo"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/cancReq": {
      "post": {
        "summary": "Request for Cancellation [MTn92]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"canc-Req\"></a>\nThis message serves the purpose of rejecting a payment previously sent to PRISM \n",
        "operationId": "cancReq",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/cancReq' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n    \"Info\": {\n    \"txndate\": \"231129\",\n    \"txntime\": \"182243\",\n    \"rrn\": \"002236987456\",\n    “stan”:”654321”,\n    \"tranRef\": \"033DBFC233480052\",\n    \"msgType\":\"MT192\",\n    \"prty\":\"0020\",\n    },\n    \"tranInfo\": {\n    \"canRef\": \"033DBFC233480052\",\n    \"msgType\":\"MT103\",\n    \"txndateRef\": \"231129\",\n    \"sessionid\":\"1234\"\n    \"sequencenumber\":\"abc123\",\n    \"senderBIC\": \"BOMLAEAD\",\n    },\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction date (Format YYMMDD)"
                      },
                      "txntime": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction time (Format HHMMSS)"
                      },
                      "rrn": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Retrieval reference number"
                      },
                      "stan": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "System trace audit number"
                      },
                      "tranRef": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Transaction reference number"
                      },
                      "msgType": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Message type"
                      },
                      "prty": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Transaction priority"
                      }
                    },
                    "required": [
                      "txndate",
                      "txntime",
                      "rrn",
                      "stan",
                      "tranRef",
                      "msgType",
                      "prty"
                    ]
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "canRef": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Transaction reference of payment previously sent"
                      },
                      "msgType": {
                        "type": "string",
                        "maxLength": 5,
                        "description": "Message type"
                      },
                      "txndateRef": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "Transaction date of reference (Format YYMMDD)"
                      },
                      "sessionid": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "PRISM session id"
                      },
                      "sequencenumber": {
                        "type": "string",
                        "maxLength": 6,
                        "description": "PRISM sequence number"
                      },
                      "senderBIC": {
                        "type": "string",
                        "maxLength": 16,
                        "description": "Bank’s BIC"
                      }
                    },
                    "required": [
                      "canRef",
                      "msgType",
                      "txndateRef",
                      "sessionid",
                      "sequencenumber",
                      "senderBIC"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/statReq": {
      "post": {
        "summary": "Status Request Message [MTn95/STAT]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"stat-Req\"></a>\nThis message serves the purpose of rejecting a payment previously sent to PRISM \n",
        "operationId": "statReq",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/statReq' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n    \"Info\": {\n     \"txndate\": \"231129\",\n     \"txntime\": \"182243\",\n     \"rrn\": \"002236987456\",\n     “stan”:”654321”,\n     \"tranRef\": \"033DBFC233480052\",\n     \"msgType\":\"MT195\",\n     \"prty\":\"0020\",\n    },\n    \"tranInfo\": {\n    \"queryRef\": \"033DBFC233480052\",\n    \"queryType\":\"STAT\",\n    \"tranMsgType\":\"MT103\",\n    \"txndateRef\": \"231129\",\n    \"sessionid\":\"1234\"\n    \"sequencenumber\":\"abc123\",\n    \"senderBIC\": \"BOMLAEAD\",\n    },\n    }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date."
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time."
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number."
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number."
                      },
                      "tranRef": {
                        "type": "string",
                        "description": "Transaction reference."
                      },
                      "msgType": {
                        "type": "string",
                        "description": "Message type."
                      },
                      "prty": {
                        "type": "string",
                        "description": "Priority."
                      }
                    }
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "queryRef": {
                        "type": "string",
                        "description": "Query reference."
                      },
                      "queryType": {
                        "type": "string",
                        "description": "Query type."
                      },
                      "tranMsgType": {
                        "type": "string",
                        "description": "Transaction message type."
                      },
                      "txndateRef": {
                        "type": "string",
                        "description": "Transaction date reference."
                      },
                      "sessionid": {
                        "type": "string",
                        "description": "Session ID."
                      },
                      "sequencenumber": {
                        "type": "string",
                        "description": "Sequence number."
                      },
                      "senderBIC": {
                        "type": "string",
                        "description": "Sender Bank Identifier Code."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/copyReq": {
      "post": {
        "summary": "Copy Request Message [MTn95/DUPL]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"copy-Req\"></a>\nThis message requests a copy of fields comprising a related transfer sent to PRISM earlier. \n",
        "operationId": "copyReq",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/copyReq' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n    \"Info\": {\n     \"txndate\": \"231129\",\n     \"txntime\": \"182243\",\n     \"rrn\": \"002236987456\",\n     “stan”:”654321”,\n     \"tranRef\": \"033DBFC233480052\",\n     \"msgType\":\"MT195\",\n     \"prty\":\"0020\",\n    },\n    \"tranInfo\": {\n    \"queryRef\": \"033DBFC233480052\",\n    \"queryType\":\"DUPL\",\n    \"tranMsgType\":\"MT103\",\n    \"txndateRef\": \"231129\",\n    \"sessionid\":\"1234\"\n    \"sequencenumber\":\"abc123\",\n    \"senderBIC\": \"BOMLAEAD\",\n    },\n    }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date."
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time."
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number."
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number."
                      },
                      "tranRef": {
                        "type": "string",
                        "description": "Transaction reference."
                      },
                      "msgType": {
                        "type": "string",
                        "description": "Message type."
                      },
                      "prty": {
                        "type": "string",
                        "description": "Priority."
                      }
                    }
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "queryRef": {
                        "type": "string",
                        "description": "Query reference."
                      },
                      "queryType": {
                        "type": "string",
                        "description": "Query type."
                      },
                      "tranMsgType": {
                        "type": "string",
                        "description": "Transaction message type."
                      },
                      "txndateRef": {
                        "type": "string",
                        "description": "Transaction date reference."
                      },
                      "sessionid": {
                        "type": "string",
                        "description": "Session ID."
                      },
                      "sequencenumber": {
                        "type": "string",
                        "description": "Sequence number."
                      },
                      "senderBIC": {
                        "type": "string",
                        "description": "Sender Bank Identifier Code."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/prtyReq": {
      "post": {
        "summary": "Change Priority Message [MTn95/PRTY]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"prty-Req\"></a>\nThis message requests a copy of fields comprising a related transfer sent to PRISM earlier. \n",
        "operationId": "prtyReq",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/prtyReq' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n    \"Info\": {\n     \"txndate\": \"231129\",\n     \"txntime\": \"182243\",\n     \"rrn\": \"002236987456\",\n     “stan”:”654321”,\n     \"tranRef\": \"033DBFC233480052\",\n     \"msgType\":\"MT195\",\n     \"prty\":\"0020\",\n    },\n    \"tranInfo\": {\n    \"queryRef\": \"033DBFC233480052\",\n    \"queryType\":\"PRTY\",\n    \"tranMsgType\":\"MT103\",\n    \"txndateRef\": \"231129\",\n    \"sessionid\":\"1234\"\n    \"sequencenumber\":\"abc123\",\n    \"senderBIC\": \"BOMLAEAD\",\n    },\n    }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0600"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Invalid input"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        },
                        "correlationId": {
                          "type": "string",
                          "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date."
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time."
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number."
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number."
                      },
                      "tranRef": {
                        "type": "string",
                        "description": "Transaction reference."
                      },
                      "msgType": {
                        "type": "string",
                        "description": "Message type."
                      },
                      "prty": {
                        "type": "string",
                        "description": "Priority."
                      }
                    }
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "queryRef": {
                        "type": "string",
                        "description": "Query reference."
                      },
                      "queryType": {
                        "type": "string",
                        "description": "Query type."
                      },
                      "tranMsgType": {
                        "type": "string",
                        "description": "Transaction message type."
                      },
                      "txndateRef": {
                        "type": "string",
                        "description": "Transaction date reference."
                      },
                      "sessionid": {
                        "type": "string",
                        "description": "Session ID."
                      },
                      "sequencenumber": {
                        "type": "string",
                        "description": "Sequence number."
                      },
                      "senderBIC": {
                        "type": "string",
                        "description": "Sender Bank Identifier Code."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/accDetail": {
      "post": {
        "summary": "Account Status Enquiry & Summary Report [MT985/ STAT or SQDC]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"prty-Req\"></a>\nThis enquiry is intended to check whether the debit or credit of specified account is locked\n",
        "operationId": "accStatEnq",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/accDetail' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n  \"info\": {\n  \"txndate\": \"231129\",\n  \"txntime\": \"182243\",\n  \"rrn\": \"002236987456\",\n  “stan”:”654321”,\n  \"tranRef\": \"033DBFC233480052\",\n  \"msgType\":\"MT985\",\n  \"prty\":\"0020\",\n  },\n  \"tranInfo\": {\n  \"queryType\":\"STAT\",\n  \"InstAccount\":\"SBPPKHGRTGSACC01\",\n  \"enqBIC\": \"HUGO\",\n  \"enqInstAccount\":\"SBPPKHGRTGSACC01\",\n  }\n  }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0468"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Mandatory params not provided"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date."
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time."
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number."
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number."
                      },
                      "tranRef": {
                        "type": "string",
                        "description": "Transaction reference."
                      },
                      "msgType": {
                        "type": "string",
                        "description": "Message type."
                      },
                      "prty": {
                        "type": "string",
                        "description": "Priority."
                      }
                    }
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "queryType": {
                        "type": "string",
                        "description": "Query type."
                      },
                      "InstAccount": {
                        "type": "string",
                        "description": "Sender’s institution settlement account in PRISM"
                      },
                      "enqBIC": {
                        "type": "string",
                        "description": "Enquired bank’s BIC"
                      },
                      "enqInstAccount": {
                        "type": "string",
                        "description": "Enquired institution settlement account in PRISM"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/rtgs/outbound/tranReport": {
      "post": {
        "summary": "Request for Balance and Interim Transactions Report [MT920]",
        "tags": [
          "RTGS API Specs"
        ],
        "description": "<a id=\"prty-Req\"></a>\nThis enquiry request account summary report\n",
        "operationId": "tranReport",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/rtgs/outbound/tranReport' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big' \\\n--data '{\n  \"info\": {\n  \"txndate\": \"231129\",\n  \"txntime\": \"182243\",\n  \"rrn\": \"002236987456\",\n  “stan”:”654321”,\n  \"tranRef\": \"033DBFC233480052\",\n  \"msgType\":\"MT920\",\n  \"prty\":\"0020\",\n  },\n  \"tranInfo\": {\n  \"queryType\":\"MT941\",\n  \"InstAccount\":\"SBPPKHGRTGSACC01\",\n  \"floorLimit\": \"\"\n  }\n  }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "examples": {
                  "ACK": {
                    "summary": "ACK Response Example",
                    "value": {
                      "response": {
                        "response_code": "ACK",
                        "response_desc": "Success"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243"
                      }
                    }
                  },
                  "NAK": {
                    "summary": "NAK Response Example",
                    "value": {
                      "response": {
                        "response_code": "NAK",
                        "response_desc": "Error"
                      },
                      "Info": {
                        "stan": "010123",
                        "rrn": "002236987456",
                        "sessionid": "1234",
                        "sequencenumber": "abc124",
                        "txndate": "231129",
                        "txntime": "182243",
                        "ErrorCode": "E123",
                        "ErrorDescription": "Invalid Input"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "description": "Response code indicating success."
                        },
                        "response_desc": {
                          "type": "string",
                          "description": "Description of the response."
                        }
                      }
                    },
                    "Info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "description": "System trace audit number."
                        },
                        "rrn": {
                          "type": "string",
                          "description": "Retrieval reference number."
                        },
                        "sessionid": {
                          "type": "string",
                          "description": "Session ID."
                        },
                        "sequencenumber": {
                          "type": "string",
                          "description": "Sequence number."
                        },
                        "txndate": {
                          "type": "string",
                          "description": "Transaction date."
                        },
                        "txntime": {
                          "type": "string",
                          "description": "Transaction time."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "type": "string",
                          "example": "0468"
                        },
                        "response_desc": {
                          "type": "string",
                          "example": "Mandatory params not provided"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "stan": {
                          "type": "string",
                          "example": "010123"
                        },
                        "rrn": {
                          "type": "string",
                          "example": "010123010123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date."
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time."
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number."
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number."
                      },
                      "tranRef": {
                        "type": "string",
                        "description": "Transaction reference."
                      },
                      "msgType": {
                        "type": "string",
                        "description": "Message type."
                      },
                      "prty": {
                        "type": "string",
                        "description": "Priority."
                      }
                    }
                  },
                  "tranInfo": {
                    "type": "object",
                    "properties": {
                      "queryType": {
                        "type": "string",
                        "description": "Query type."
                      },
                      "InstAccount": {
                        "type": "string",
                        "description": "Sender’s institution settlement account in PRISM"
                      },
                      "floorLimit": {
                        "type": "string",
                        "description": "Specifies floor limit indicator for debit and credit entries",
                        "examples": {
                          "100": {
                            "value": "PKR100"
                          },
                          "": {
                            "value": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/unifiedtitlefetch": {
      "post": {
        "summary": "unifiedtitlefetch",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"unified-tf\"></a>\nThe unified title fetch is a generic method to get beneficiary (receiver) account details from the member bank.The method is having a following two additional functionalities compare to standard title fetch method:\n\n\n- <b>Preferred Rail</b>: The initiator has provision to set the preferred rail either the title fetch will be done via RAAST or 1LINK. The request parameter will identify the preferred route\n\n\n- <b>Fall-back option</b>: In case if title fetch failed with the preferred rail the system will auto attempt the title fetch from alternate rail. The option is controllable via request parameters.",
        "operationId": "unifiedtitlefetch",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/unifiedtitlefetch' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"05421236547552\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountCurrency\": \"586\"\n  },\n  \"receiverinfo\": {\n    \"bankId\": 1,\n    \"toAccount\": \"00023137343951\"\n  },\n  \"otherinfo\": {\n    \"priorityFlag\": \"01\",\n    \"fallbackFlag\": \"01\",\n    \"purposeCode\": \"0320\",\n    \"amount\": 5000\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "accountInfo": {
                        "title": "Muhammad Khan",
                        "toAccount": "00653000129536",
                        "destinationPaymentSystem": "01",
                        "iban": "PK30BANK0012000230000000"
                      },
                      "participantInfo": {
                        "bankIMD": "100271",
                        "bankBIC": "NBPBPKKA"
                      }
                    }
                  },
                  "1001": {
                    "summary": "No account found",
                    "value": {
                      "response": {
                        "response_code": "1001",
                        "response_desc": "No account found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "$ref": "#/components/schemas/response_code"
                        },
                        "response_desc": {
                          "$ref": "#/components/schemas/response_desc"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        },
                        "correlationId": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 40,
                          "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call."
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "minLength": 10,
                      "maxLength": 40,
                      "description": "Beneficiary account title"
                    },
                    "toAccount": {
                      "type": "string",
                      "minLength": 5,
                      "maxLength": 24,
                      "description": "Echo back"
                    },
                    "destinationPaymentSystem": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2,
                      "description": "Identify the route from which title fetch has completed. \n\nThe values are as:\n\n\n\"01\" – For RAAST\n\n\n\"02\" – For 1LINK"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Beneficiary IBAN, the value will be returned if received from the scheme in response of title fetch"
                    },
                    "bankIMD": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 8,
                      "description": "Receiving participant IMD (Member bank id), assigned by 1LINK"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": 8,
                      "maxLength": 16,
                      "description": "Receiving participant BIC (bank institution code), assigned by SBP"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_UnifiedTitleFetch"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/alias/getdefaultaccount": {
      "post": {
        "summary": "Get Default Account",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"get-default-account\"></a>\nThe request will be used to fetch beneficiary account details via RAAST ID. \n\n\nA \"RAAST ID\" is a unique identifier assigned to an individual for the purpose of collecting funds. This ID is registered through the individual's bank, which is then integrated into the State Bank of Pakistan's Central Addressing Scheme (CAS). This integration allows individuals to receive funds without the need to divulge their complete bank account details, including account number, bank and branch information.\n\n\nWhen a payee has to receive funds, they only need to provide their RAAST ID. The CAS system manages the beneficiary's account details and associated information. This information is shared when a payer initiates a fund transfer via a bank's digital channel, using the payee's RAAST ID. This streamlined process enhances the efficiency and security of interbank fund transfers by simplifying the recipient's identification and fund collection.",
        "operationId": "getdefaultaccount",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/alias/getdefaultaccount' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"receiverinfo\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03132370605\"\n  }\n}' \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "accountInfo": {
                        "surname": "Mr.",
                        "name": "Waqas",
                        "destinationPaymentSystem": "01",
                        "iban": "PK19SONE0000220006493697",
                        "currency": "PKR",
                        "type": "DFLT"
                      },
                      "participantInfo": {
                        "bankBIC": "SONEPKKA"
                      }
                    }
                  },
                  "1": {
                    "summary": "Cannot find account",
                    "value": {
                      "response": {
                        "response_code": "0001",
                        "response_desc": "Account Not Found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 10,
                      "maxLength": 40,
                      "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call."
                    },
                    "surname": {
                      "type": "string",
                      "minLength": 10,
                      "maxLength": 40,
                      "description": "Beneficiary surname"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 10,
                      "maxLength": 40,
                      "description": "Beneficiary nick name registered in central addressing scheme"
                    },
                    "destinationPaymentSystem": {
                      "type": "string",
                      "description": "Identify the route from which title fetch has completed.\nThe values are as:\n  “01” – For RAAST\n  “02” – For 1LINK\n  "
                    },
                    "currency": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "description": "Receiver account currency"
                    },
                    "type": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Receiver account type. The value will be like “DFLT”"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": null,
                      "maxLength": 16,
                      "description": "Receiving participant BIC (bank institution code), assigned by SBP"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver IBAN"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_GetDefaultAccount"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "# cURL command with payload\ncurl -X POST -H \"Content-Type: application/json\" -d '{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}' https://api.example.com/your-endpoint\n"
          }
        ]
      }
    },
    "/api/v1/paysyslabs/payments/transactioninquiry": {
      "post": {
        "summary": "transactioninquiry",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"unified-tf\"></a>\nThe primary objective of this API is to retrieve previously posted payments and transfers. The API will return the transaction status for followings transactions:\n\n\n- <b>IBFT Outward funds transfers</b>\n\n\n- <b>Bill Payments</b>\n- <b>RAAST P2P outward transfers</b>",
        "operationId": "transactioninquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/transactioninquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n    \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n    },\n    \"originalTxnInfo\": {\n    \"destinationSystem\": \"01\",\n    \"ostan\": \"654785\",\n    \"orrn\": \"654785654785\",\n    \"omsgId\": \"MASH231016140256592221\",\n    \"otxnDate\": \"20231015\",\n    \"otxntime\": \"182243\"\n    }\n  }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "101": {
                    "summary": "Account Limit Exceed",
                    "value": {
                      "response": {
                        "response_code": "0101",
                        "response_desc": "Account Limit Exceed"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "411": {
                    "summary": "No Transaction Found",
                    "value": {
                      "response": {
                        "response_code": "0411",
                        "response_desc": "No Transaction Found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "$ref": "#/components/schemas/response_code"
                        },
                        "response_desc": {
                          "$ref": "#/components/schemas/response_desc"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        },
                        "correlationId": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 40,
                          "description": "Unique correlation id for the transaction inquiry request. The value is in GUID format and will be sent by the initiator in payment call."
                        }
                      }
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_TransactionInquiry"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/merchant/aliasInquiry": {
      "post": {
        "summary": "Merchant alias inquiry",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"getMerchantaliasInfo\"></a>\nTo fetch merchant account details via ALIAS",
        "operationId": "getMerchantaliasInfo",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/merchant/aliasInquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"alias\": {\n  \"aliasType\": \" TILL_CODE\",\n  \"aliasValue\": \"000112345\"\n  }\n  }'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "merchantInfo": {
                        "type": "DFLT",
                        "currency": "PKR",
                        "name": "Waqas Nizam",
                        "isDefault": true,
                        "account": {
                          "iban": "PK26AIIN1234567890000056"
                        },
                        "servicer": {
                          "memberid": "AAAAAAXX"
                        },
                        "additionalDetails": {
                          "dba": "The best business",
                          "mcc": "5454"
                        }
                      }
                    }
                  },
                  "411": {
                    "summary": "No Transaction Found",
                    "value": {
                      "response": {
                        "response_code": "0411",
                        "response_desc": "No Transaction Found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "response_code": {
                          "$ref": "#/components/schemas/response_code"
                        },
                        "response_desc": {
                          "$ref": "#/components/schemas/response_desc"
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        },
                        "correlationId": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 40,
                          "description": "Unique correlation id for the transaction inquiry request. The value is in GUID format and will be sent by the initiator in payment call."
                        }
                      }
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd)",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20230807"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "123456"
                      }
                    }
                  },
                  "alias": {
                    "type": "object",
                    "properties": {
                      "aliasType": {
                        "type": "string",
                        "description": "Alias type, which can be one of the following:\n- MID (16 chars)\n- VPA (max 13 chars)\n- TILL_CODE (9 digits)\nCurrently, we will focus on TILL_CODE as aliasType only as an issuer.\n",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "TILL_CODE"
                      },
                      "aliasValue": {
                        "type": "string",
                        "description": "Value associated with the alias",
                        "maxLength": 30,
                        "example": "987654321"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/banklist": {
      "get": {
        "summary": "banklist",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"bank-list\"></a>\nRequest to get institution list",
        "operationId": "banklist",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl --request GET \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/banklist' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "participants": [
                        {
                          "bankId": 1,
                          "bankDisplayName": "National bank of Pakistan",
                          "bankShortBIC": "NBPBPKKA",
                          "bankBIC": "NBPBPKKAXXX",
                          "bankIMD": "601492",
                          "accountNumberHelp": "Please provide 14 digits NBP account # or IBAN",
                          "accountNumberREGEX": "^[0-9]+$",
                          "isAvailable1LINKIBFT": "Y",
                          "isAvailableRAASTP2P": "Y",
                          "isAvailableRAASTTF2": "Y",
                          "isAvailableRAASTBulk": "Y",
                          "isAvailableRAASTP2M": "N",
                          "isAvailableRAASTP2MRTP": "N",
                          "isAvailableRAASTP2MPISP": "N"
                        },
                        {
                          "bankId": 2,
                          "bankDisplayName": "Telenor Microfinance Bank",
                          "bankShortBIC": "TMFBPKKA",
                          "bankBIC": "TMFBPKKAXXX",
                          "bankIMD": "220872",
                          "accountNumberHelp": "Please provide 11 digits mobile # or IBAN for beneficiary",
                          "accountNumberREGEX": "^[0-9]+$",
                          "isAvailable1LINKIBFT": "Y",
                          "isAvailableRAASTP2P": "Y",
                          "isAvailableRAASTTF2": "Y",
                          "isAvailableRAASTBulk": "Y",
                          "isAvailableRAASTP2M": "Y",
                          "isAvailableRAASTP2MRTP": "Y",
                          "isAvailableRAASTP2MPISP": "N"
                        }
                      ]
                    }
                  },
                  "3001": {
                    "summary": "Failure with No data found",
                    "value": {
                      "response": {
                        "response_code": "3001",
                        "response_desc": "No data found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "bankId": {
                      "type": "integer",
                      "description": "Bank id assigned by open connect"
                    },
                    "bankDisplayName": {
                      "type": "string",
                      "minLength": 20,
                      "maxLength": 20,
                      "description": "Bank name"
                    },
                    "bankShortBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Bank BIC assigned by SBP"
                    },
                    "bankBIC": {
                      "type": "string",
                      "minLength": 16,
                      "maxLength": 16,
                      "description": "Bank BIC assigned by SBP"
                    },
                    "bankIMD": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6,
                      "description": "Bank IMD assigned by 1LINK"
                    },
                    "accountNumberHelp": {
                      "type": "string",
                      "minLength": 200,
                      "maxLength": 200,
                      "description": "Help Text which can be used to show format to customer on screen in user readable form."
                    },
                    "accountNumberREGEX": {
                      "type": "string",
                      "minLength": 200,
                      "maxLength": 200,
                      "description": "Account # format, the field will be displayed to user where user input beneficiary account #"
                    },
                    "isAvailable1LINKIBFT": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support IBFT payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2P": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2P payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTBulk": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support RAAST bulk receiving payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2M": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2M payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2MRTP": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support P2M “request to pay” payments followed by “Y” or “N”"
                    },
                    "isAvailableRAASTP2MPISP": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1,
                      "description": "Indicate bank support RAAST PISP features followed by “Y” or “N”"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/rtpAcceptance": {
      "post": {
        "summary": "RTP Acceptance",
        "tags": [
          "Non Financial API Specs"
        ],
        "description": "<a id=\"rtpAcceptance\"></a>\nTo notify status of RTP. If customer is present on digital channel and would be able to accept/authorize RTP later request then channel backend will call this API of OpenConnect to notify about it.",
        "operationId": "rtpAcceptance",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/rtpAcceptance' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"rtpDetails\": {\n  \"rtpId\": \"PAYSYS10129312414\",\n  \"rtpStatus\": \"1\",\n  \"rejectReason\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number.",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number.",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd).",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20240101"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss).",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "235959"
                      }
                    }
                  },
                  "rtpDetails": {
                    "type": "object",
                    "properties": {
                      "rtpStatus": {
                        "type": "string",
                        "description": "• 1 - Accepted\n• 2 - Rejected\n",
                        "minLength": 1,
                        "maxLength": 1,
                        "example": "1"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "Provided by rtpRequest[rtpId].",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "abc123def456ghi789jkl"
                      },
                      "rejectReason": {
                        "type": "string",
                        "description": "If `rtpStatus` is `2` then provide reject reason (only those which are specified by SBP).",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": ""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/ibfttransfer": {
      "post": {
        "summary": "IBFT (1Link)",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"ibft\"></a>\nTo send funds to member bank account using 1LINK",
        "operationId": "ibfttransfer",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/ibfttransfer' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"tfcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"05421236547552\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n              \n    \"fromAccountCurrency\": \"586\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"bankIMD\": \"100271\",\n    \"toAccount\": \"00023137343951\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"authId\": \"654123\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}\n'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "431": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0431",
                        "response_desc": "Title fetch reference not found"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_IBFTTransfer"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/directposting": {
      "post": {
        "summary": "Raast P2P Transfer",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"direct-posting\"></a>\nThis service will be used to send P2P payment via Raast for interbank transfer. The service will be sent credit request directly to RAAST without sending any debit request to bank middleware/CBS. This service ideally needs to be used in scenario where bank’s system can debit customer account itself and sent only credit request to Raast via open connect. \n\nOpen connect return additional fields upon successful response, bank’s middleware needs to sent same values to CBS while debit confirmation or release. These key parameters will be used for RECON purpose. ",
        "operationId": "directposting",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/directposting' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"tfcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"senderinfo\": {\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountType\": \"00\",\n    \"fromAccountCurrency\": \"586\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"bankBIC\": \"NBPBPKKA\",\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"authId\": \"654123\",\n    \"msgId\": \"MASH231016140256592221\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RAASTTransfer"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/billpayment": {
      "post": {
        "summary": "Bill payment",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"bill-pay\"></a>\nThe primary objective of this API is to transmit payment requests to billing aggregators.This meticulous approach guarantees that the bill payment process is executed securely, in full compliance with all the necessary criteria and standards.",
        "operationId": "billpayment",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/payments/billpayment' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"inqcorrelationId\": \"7ad7fb9f-99dc-4c2c-ab88-abddb87789a0\"\n  },\n  \"billinfo\": {\n    \"billerId\": 5,\n    \"consumerNo\": \"03132370605\",\n    \"amount\": 500\n  },\n  \"payerInfo\": {\n    \"payerIBAN\": \"PK76MASH1234567890126985\",\n    \"payerName\": \"Payer account title\",\n    \"payerCNIC\": \"1234512345671\"\n  },\n  \"otherInfo\": {\n    \"channel\": \"00000002\",\n    \"authId\": \"658965\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n    }'      \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "468": {
                    "summary": "Mandatory parameters not provided",
                    "value": {
                      "response": {
                        "response_code": "0468",
                        "response_desc": "Mandatory parameters not provided"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_BillPayment"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/SQRC": {
      "post": {
        "summary": "Pay via Static QR",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"merchantPaymentRequestSQRC\"></a>\nCustomer will be able to make payment to merchants via static QRC (with amount or without amount). For doing this transaction customer will have active digital app to scan the merchant generated QRC. \n\nThis API will be used in following scenario\n1.\tSingle use QR with or without amount\n2.\tMulti-use QR with or without amount",
        "operationId": "merchantPaymentRequestSQRC",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/SQRC' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"senderIdentification\": {\n  \"idType\": \"CNIC\",\n  \"idValue\": \"4120321466271\"\n  },\n  \"senderInfo\": {\n  \"iban\": \"PKBALH000093133192132\",\n  \"accountTitle\": \"Abdul Rasheed\"\n  },\n  \"paymentInfo\": {\n  \"dateTime\": \"20221216153620\",\n  \"longitude\": \"0213123.21\",\n  \"latitude\": \"0117583.45\",\n  \"authId\": \"654123\",\n  \"msgId\": \"MASH231016140256592221\"\n  },\n  \"amountInfo\": {\n  \"amount\": 2000,\n  \"tip\": 10,\n  \" txnAmount\": 2010\n  },\n  \"merchantInfo\": {\n  \"accountTitle\": \"Owais Malik\",\n  \"dba\": \"ABC General Store\",\n  \"categoryCode\": \"5399\",\n  \"bic\": \"NBPBPKKA\",\n  \"iban\": \"PK73NBPA2166001369874563\",\n  \"merchantIdAlias\": \"\"\n  },\n  \"additionalInfo\": {\n  \"currency\": \"586\",\n  \"country\": \"\",\n  \"city\": \"KARACHI\",\n  \"billNumber\": \"\",\n  \"billDueDate\": \"\",\n  \"amountAfterDueDate\": \"\",\n  \"loyaltyNumber\": \"\",\n  \"mobileNumber\": \"\",\n  \"storeLabel\": \"\",\n  \"customerLabel\": \"\",\n  \"terminalID\": \"100002301\",\n  \"paymentPurpose\": \"\",\n  \"merchantTaxId\": \"\",\n  \"merchantChannel\": \"\",\n  \"rtpId\": \"\",\n  \"ttc\": \"\",\n  \"customerEmail \": \"\",\n  \"customerMobile\": \"\",\n  \"customerAddress\": \"\",\n  \"referenceLabel\": \"\"\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd)",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20230807"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "123456"
                      }
                    }
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string",
                        "description": "Payer (Customer) – IBAN",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Payer (Customer) – Account title",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "John Doe"
                      }
                    }
                  },
                  "senderIdentification": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "CNIC, NICOP, PASSPORT, NTN, REGNUM etc",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "CNIC"
                      },
                      "idValue": {
                        "type": "string",
                        "description": "Value of the selected idType",
                        "minLength": 1,
                        "maxLength": 30,
                        "example": "4220141111113"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "Date/time stamp provided by Channel (Format yyyymmddhhmmss)",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20221216153620"
                      },
                      "latitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "25.276987"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "55.296249"
                      },
                      "authId": {
                        "type": "string",
                        "description": "Debit authorization unique reference number returned by core banking in response to debit hold request",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "AUTH1234567890"
                      },
                      "msgId": {
                        "type": "string",
                        "description": "Unique reference number sent to RAAST for e2e reconciliation",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "MSG1234567890"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "- If [QRC TAG: 54] exists then QRC Amount\n- If [QRC TAG: 62 / Field: 50] and due date passed then [QRC TAG: 62 / Field: 51]\n- If none of the above then user entered amount\n",
                        "example": 100.5
                      },
                      "tipAmount": {
                        "type": "number",
                        "description": "TIP amount (In case if TIP is enabled in QRC otherwise it will be zero)",
                        "example": 5
                      },
                      "txnAmount": {
                        "type": "number",
                        "description": "Sum of amount, tipAmount and fee",
                        "example": 105.5
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "accountTitle": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG: 59\nIn case of till-based payment put information returned from CAS API\n",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Merchant Account"
                      },
                      "dba": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG: 59\nIn case of till-based payment put information returned from CAS API\n",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Doing Business As"
                      },
                      "categoryCode": {
                        "type": "string",
                        "description": "Information from QRC TAG 52",
                        "minLength": 1,
                        "maxLength": 4,
                        "example": "1234"
                      },
                      "bic": {
                        "type": "string",
                        "description": "Information from QRC TAG 28 / Field 1",
                        "minLength": 1,
                        "maxLength": 12,
                        "example": "BANKDEFF"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Merchant IBAN from QRC TAG 28 / Field 2",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Pass if information received in QR",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "MERCHANT123"
                      }
                    }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Information from QRC TAG 53",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "USD"
                      },
                      "country": {
                        "type": "string",
                        "description": "Information from QRC TAG 58",
                        "minLength": 1,
                        "maxLength": 2,
                        "example": "US"
                      },
                      "city": {
                        "type": "string",
                        "description": "Information from QRC TAG 60",
                        "minLength": 1,
                        "maxLength": 15,
                        "example": "New York"
                      },
                      "billNumber": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 01",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "BILL12345"
                      },
                      "billDueDate": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 50",
                        "minLength": 1,
                        "maxLength": 8,
                        "example": "20230815"
                      },
                      "amountAfterDueDate": {
                        "type": "number",
                        "description": "Information from QRC TAG 62 / Field 51",
                        "example": 110.5
                      },
                      "loyaltyNumber": {
                        "type": "string",
                        "description": "The identifier assigned to a customer by a merchant/brand/business for loyalty rewards",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "LOYALTY12345"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "Can be used for mobile topup",
                        "minLength": 1,
                        "maxLength": 15,
                        "example": "1234567890"
                      },
                      "storeLabel": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 03",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Store XYZ"
                      },
                      "customerLabel": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 06",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Customer ABC"
                      },
                      "terminalID": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 07",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "TERM12345"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 08",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Payment for order 123"
                      },
                      "merchantTaxId": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 10",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "TAXID12345"
                      },
                      "merchantChannel": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 11",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "WEB"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "Information from QRC TAG 84, Not applicable for Static QRC payment",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "RTP12345"
                      },
                      "ttc": {
                        "type": "string",
                        "description": "Information from QRC TAG 85",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "TTC"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "customer@example.com"
                      },
                      "customerMobile": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 20,
                        "example": "1234567890"
                      },
                      "customerAddress": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "123 Main Street, New York, NY"
                      },
                      "referenceLabel": {
                        "type": "string",
                        "description": "Information from QRC TAG 62 / Field 05",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "REF12345"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/alias": {
      "post": {
        "summary": "Pay via Merchant RAAST ID",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"merchantPaymentRequest\"></a>\nCustomer will be able to make payment to merchants via ALIAS (Merchant RAAST ID).\n\nChannel will initiate OC [getMerchantaliasInfo](#tag/Non-Financial-API-Specs/operation/getMerchantaliasInfo) first to fetch merchant info",
        "operationId": "merchantPaymentRequest",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/alias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"010123010123\",\n  \"stan\": \"010123\"\n  },\n  \"senderIdentification\": {\n  \"idType\": \"CNIC\",\n  \"idValue\": \"4120321466271\"\n  },\n  \"senderInfo\": {\n  \"iban\": \"PKBALH000093133192132\",\n  \"accountTitle\": \"Abdul Rasheed\"\n  },\n  \"paymentInfo\": {\n  \"dateTime\": \"20221216153620\",\n  \"longitude\": \"0213123.21\",\n  \"latitude\": \"0117583.45\",\n  \"paymentPurpose \": \"068\",\n  \"authId\": \"654123\",\n  \"msgId\": \"MASH231016140256592221\"\n  },\n  \"amountInfo\": {\n  \"fee\": 0,\n  \"amount\": 2000\n  },\n  \"merchantInfo\": {\n  \"accountTitle\": \"Owais Malik\",\n  \"dba\": \"ABC General Store\",\n  \"categoryCode\": \"5399\",\n  \"bic\": \"NBPBPKKA\",\n  \"iban\": \"PK73NBPA2166001369874563\",\n  \"merchantIdAlias\": \"\"\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string",
                        "description": "Payer (Customer) – IBAN",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Payer (Customer) – Account title",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "John Doe"
                      }
                    }
                  },
                  "senderIdentification": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "CNIC, NICOP, PASSPORT, NTN, REGNUM etc",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "CNIC"
                      },
                      "idValue": {
                        "type": "string",
                        "description": "Value of the selected idType",
                        "minLength": 1,
                        "maxLength": 30,
                        "example": "4220141111113"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "Date/time stamp provided by Channel (Format yyyymmddhhmmss)",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20221216153620"
                      },
                      "latitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "25.276987"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "55.296249"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Purpose of payment will be sent here. Bank can decide whether to take input from customer as a dropdown or send a hardcoded value for merchant payment.",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Merchant Payment"
                      },
                      "authId": {
                        "type": "string",
                        "description": "Debit authorization unique reference number returned by core banking in response to debit hold request",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "AUTH1234567890"
                      },
                      "msgId": {
                        "type": "string",
                        "description": "Unique reference number sent to RAAST for e2e reconciliation",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "MSG1234567890"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "fee": {
                        "type": "number",
                        "description": "For future use only as currently, there is no fee implemented on RAAST payment. Value of this param should be 0 currently.",
                        "example": 0
                      },
                      "amount": {
                        "type": "number",
                        "description": "Amount entered by user",
                        "example": 100.5
                      }
                    }
                  },
                  "info": {
                    "type": "object",
                    "properties": {
                      "stan": {
                        "type": "string",
                        "description": "Last 6 digits of RRN",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "accountTitle": {
                        "type": "string",
                        "description": "Value resolved from getMerchantAliasInfo [5.1.3]",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Merchant Account"
                      },
                      "dba": {
                        "type": "string",
                        "description": "Value resolved from getMerchantAliasInfo [5.1.3]",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Doing Business As"
                      },
                      "categoryCode": {
                        "type": "string",
                        "description": "Value resolved from getMerchantAliasInfo [5.1.3]",
                        "minLength": 1,
                        "maxLength": 4,
                        "example": "1234"
                      },
                      "bic": {
                        "type": "string",
                        "description": "Value resolved from getMerchantAliasInfo [5.1.3]",
                        "minLength": 1,
                        "maxLength": 12,
                        "example": "BANKDEFF"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Value resolved from getMerchantAliasInfo [5.1.3]",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Pass in case of Pay to alias to track alias in Payment message",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "MERCHANT123"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/DQRC": {
      "post": {
        "summary": "Pay via Dynamic QRC",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"merchantPaymentRequestDQRC\"></a>\nCustomer will be able to make payment to merchants via dynamic QRC (online QRC) generated by merchant for payments. Customer will have active digital app to scan the merchant generated QRC payment.\n\nNOTE: To differentiate between static and dynamic QRC, rtpId (QR TAG: 84) would be mandatory in dynamic QRC whereas in static QRC, it is not required.",
        "operationId": "merchantPaymentRequestDQRC",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/alias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"senderIdentification\": {\n  \"idType\": \"CNIC\",\n  \"idValue\": \"4120321466271\"\n  },\n  \"senderInfo\": {\n  \"iban\": \"PKBALH000093133192132\",\n  \"accountTitle\": \"Abdul Rasheed\"\n  },\n  \"paymentInfo\": {\n  \"dateTime\": \"20221216153620\",\n  \"longitude\": \"0213123.21\",\n  \"latitude\": \"0117583.45\",\n  \"authId\": \"654123\",\n  \"msgId\": \"MASH231016140256592221\"\n  },\n  \"amountInfo\": {\n  \"amount\": 2000,\n  \"tip\": 10,\n  \" txnAmount\": 2010\n  },\n  \"merchantInfo\": {\n  \"accountTitle\": \"Owais Malik\",\n  \"dba\": \"ABC General Store\",\n  \"categoryCode\": \"5399\",\n  \"bic\": \"NBPBPKKA\",\n  \"iban\": \"PK73NBPA2166001369874563\",\n  \"merchantIdAlias\": \"\"\n  },\n  \"additionalInfo\": {\n  \"currency\": \"586\",\n  \"country\": \"\",\n  \"city\": \"KARACHI\",\n  \"billNumber\": \"\",\n  \"billDueDate\": \"\",\n  \"amountAfterDueDate\": \"\",\n  \"loyaltyNumber\": \"\",\n  \"mobileNumber\": \"\",\n  \"storeLabel\": \"\",\n  \"customerLabel\": \"\",\n  \"terminalID\": \"100002301\",\n  \"paymentPurpose\": \"\",\n  \"merchantTaxId\": \"\",\n  \"merchantChannel\": \"\",\n  \"rtpId\": \"\",\n  \"ttc\": \"\",\n  \"customerEmail \": \"\",\n  \"customerMobile\": \"\",\n  \"customerAddress\": \"\",\n  \"referenceLabel\": \"\"\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd)",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "123456"
                      }
                    }
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string",
                        "description": "Payer (Customer) – IBAN",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Payer (Customer) – Account title",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "John Doe"
                      }
                    }
                  },
                  "senderIdentification": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "CNIC, NICOP, PASSPORT, NTN, REGNUM etc",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "CNIC"
                      },
                      "idValue": {
                        "type": "string",
                        "description": "Value of the selected idType",
                        "minLength": 1,
                        "maxLength": 30,
                        "example": "4220141111113"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "Date/time stamp provided by Channel (Format yyyymmddhhmmss)",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20221216153620"
                      },
                      "latitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "25.276987"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "55.296249"
                      },
                      "authId": {
                        "type": "string",
                        "description": "Debit authorization unique reference number returned by core banking in response to debit hold request",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "AUTH1234567890"
                      },
                      "msgId": {
                        "type": "string",
                        "description": "Unique reference number sent to RAAST for e2e reconciliation",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "MSG1234567890"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "Amount entered by user",
                        "example": 100.5
                      },
                      "tipAmount": {
                        "type": "number",
                        "description": "TIP amount (In case if TIP is enabled in QRC otherwise it will be zero)",
                        "example": 5
                      },
                      "txnAmount": {
                        "type": "number",
                        "description": "Sum of amount, tipAmount and fee",
                        "example": 105.5
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "accountTitle": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Merchant Account"
                      },
                      "dba": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Doing Business As"
                      },
                      "categoryCode": {
                        "type": "string",
                        "description": "Information from QRC TAG 52",
                        "minLength": 1,
                        "maxLength": 4,
                        "example": "1234"
                      },
                      "bic": {
                        "type": "string",
                        "description": "Information from [QRC TAG 28 / Field 1]",
                        "minLength": 1,
                        "maxLength": 12,
                        "example": "BANKDEFF"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Merchant IBAN [QRC TAG 28 / Field 2]",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Pass if information received in QR",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "MERCHANT123"
                      }
                    }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Information from QRC TAG 53",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "USD"
                      },
                      "country": {
                        "type": "string",
                        "description": "Information from QRC TAG 58",
                        "minLength": 1,
                        "maxLength": 2,
                        "example": "US"
                      },
                      "city": {
                        "type": "string",
                        "description": "Information from QRC TAG 60",
                        "minLength": 1,
                        "maxLength": 15,
                        "example": "New York"
                      },
                      "billNumber": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 01]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "BILL12345"
                      },
                      "billDueDate": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 50]",
                        "minLength": 1,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "amountAfterDueDate": {
                        "type": "number",
                        "description": "Information from [QRC TAG 62 / Field 51]",
                        "example": 110
                      },
                      "loyaltyNumber": {
                        "type": "string",
                        "description": "The identifier assigned to a customer by a merchant/brand/business for loyalty rewards",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "LOYALTY12345"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "Can be used for mobile topup",
                        "minLength": 1,
                        "maxLength": 15,
                        "example": "1234567890"
                      },
                      "storeLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 03]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Store Label"
                      },
                      "customerLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 06]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Customer Label"
                      },
                      "terminalID": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 07]",
                        "example": "Terminal123"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 08]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Payment Purpose"
                      },
                      "merchantTaxId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 10]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "TAX12345"
                      },
                      "merchantChannel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 11]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "CHN"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 84], in case of dynamic QRC only.",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "RTP12345"
                      },
                      "ttc": {
                        "type": "string",
                        "description": "Information from [QRC TAG 85]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "TTC"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "customer@example.com"
                      },
                      "customerMobile": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 20,
                        "example": "1234567890"
                      },
                      "customerAddress": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "123 Main Street, New York, NY"
                      },
                      "referenceLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 05]",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reference Label"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/RTPL": {
      "post": {
        "summary": "Pay to RTP Later",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"merchantPaymentRequestRTPL\"></a>\nMerchants will be able to make payment to customer ALIAS / IBAN using request to pay mode. The \nmerchant can set expiry to pay later. \n• Merchant will send pain.013 to generate RTP Later\n• OC will parse this message and send the information to channel using rtpRequest API \nrtpRequest\n• Channel will validate if customer is active on any digital platform it will then initiate \nrtpAcceptance\n• And later when customer will accept the payment channel will initiate\nOC(merchantPaymentRequestRTPL)",
        "operationId": "merchantPaymentRequestRTPL",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/RTPL' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"senderIdentification\": {\n  \"idType\": \"CNIC\",\n  \"idValue\": \"4120321466271\"\n  },\n  \"senderInfo\": {\n  \"iban\": \"PKBALH000093133192132\",\n  \"accountTitle\": \"Abdul Rasheed\"\n  },\n  \"paymentInfo\": {\n  \"dateTime\": \"20221216153620\",\n  \"longitude\": \"0213123.21\",\n  \"latitude\": \"0117583.45\",\n  \"authId\": \"654123\",\n  \"msgId\": \"MASH231016140256592221\"\n  },\n  \"amountInfo\": {\n  \"amount\": 2000\n  },\n  \"merchantInfo\": {\n  \"accountTitle\": \"Owais Malik\",\n  \"dba\": \"ABC General Store\",\n  \"categoryCode\": \"5399\",\n  \"bic\": \"NBPBPKKA\",\n  \"iban\": \"PK73NBPA2166001369874563\",\n  \"merchantIdAlias\": \"\"\n  },\n  \"additionalInfo\": {\n  \"currency\": \"586\",\n  \"country\": \"\",\n  \"billNumber\": \"\",\n  \"billDueDate\": \"\",\n  \"amountAfterDueDate\": \"\",\n  \"loyaltyNumber\": \"\",\n  \"storeLabel\": \"\",\n  \"customerLabel\": \"\",\n  \"terminalID\": \"100002301\",\n  \"paymentPurpose\": \"\",\n  \"merchantTaxId\": \"\",\n  \"merchantChannel\": \"\",\n  \"rtpId\": \"\",\n  \"ttc\": \"\",\n  \"customerEmail \": \"\",\n  \"customerMobile\": \"\",\n  \"customerAddress\": \"\",\n  \"referenceLabel\": \"\"\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd)",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "123456"
                      }
                    }
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string",
                        "description": "Payer (Customer) – IBAN",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Payer (Customer) – Account title",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "John Doe"
                      }
                    }
                  },
                  "senderIdentification": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "CNIC, NICOP, PASSPORT, NTN, REGNUM etc",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "CNIC"
                      },
                      "idValue": {
                        "type": "string",
                        "description": "Value of the selected idType",
                        "minLength": 1,
                        "maxLength": 30,
                        "example": "4220141111113"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "Date/time stamp provided by Channel (Format yyyymmddhhmmss)",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20221216153620"
                      },
                      "latitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "25.276987"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "55.296249"
                      },
                      "authId": {
                        "type": "string",
                        "description": "Debit authorization unique reference number returned by core banking in response to debit hold request",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "AUTH1234567890"
                      },
                      "msgId": {
                        "type": "string",
                        "description": "Unique reference number sent to RAAST for e2e reconciliation",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "MSG1234567890"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "Amount entered by user",
                        "example": 100.5
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "accountTitle": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Merchant Account"
                      },
                      "dba": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Doing Business As"
                      },
                      "categoryCode": {
                        "type": "string",
                        "description": "Information from QRC TAG 52",
                        "minLength": 1,
                        "maxLength": 4,
                        "example": "1234"
                      },
                      "bic": {
                        "type": "string",
                        "description": "Information from [QRC TAG 28 / Field 1]",
                        "minLength": 1,
                        "maxLength": 12,
                        "example": "BANKDEFF"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Merchant IBAN [QRC TAG 28 / Field 2]",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Pass if information received in QR",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "MERCHANT123"
                      }
                    }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Information from QRC TAG 53",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "USD"
                      },
                      "country": {
                        "type": "string",
                        "description": "Information from QRC TAG 58",
                        "minLength": 1,
                        "maxLength": 2,
                        "example": "US"
                      },
                      "billNumber": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 01]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "BILL12345"
                      },
                      "billDueDate": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 50]",
                        "minLength": 1,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "amountAfterDueDate": {
                        "type": "number",
                        "description": "Information from [QRC TAG 62 / Field 51]",
                        "example": 110
                      },
                      "loyaltyNumber": {
                        "type": "string",
                        "description": "The identifier assigned to a customer by a merchant/brand/business for loyalty rewards",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "LOYALTY12345"
                      },
                      "storeLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 03]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Store Label"
                      },
                      "customerLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 06]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Customer Label"
                      },
                      "terminalID": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 07]",
                        "example": "Terminal123"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 08]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Payment Purpose"
                      },
                      "merchantTaxId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 10]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "TAX12345"
                      },
                      "merchantChannel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 11]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "CHN"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 84], in case of dynamic QRC only.",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "RTP12345"
                      },
                      "ttc": {
                        "type": "string",
                        "description": "Information from [QRC TAG 85]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "TTC"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "customer@example.com"
                      },
                      "customerMobile": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 20,
                        "example": "1234567890"
                      },
                      "customerAddress": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "123 Main Street, New York, NY"
                      },
                      "referenceLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 05]",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reference Label"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/payments/merchant/RTPN": {
      "post": {
        "summary": "Pay to RTP Now",
        "tags": [
          "Payment API Specs"
        ],
        "description": "<a id=\"merchantPaymentRequestRTPN\"></a>\nMerchants will be able to make payment to customer ALIAS / IBAN using request to pay mode.\n\n•\tMerchant will send pain.013 to generate RTP Now\n•\tOC will parse this message and send the information to channel using rtpRequest API rtpRequest\n•\tWhen customer will accept the payment channel will initiate OC (merchantPaymentRequestRTPN)",
        "operationId": "merchantPaymentRequestRTPN",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1/paysyslabs/payments/merchant/RTPN' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"senderIdentification\": {\n  \"idType\": \"CNIC\",\n  \"idValue\": \"4120321466271\"\n  },\n  \"senderInfo\": {\n  \"iban\": \"PKBALH000093133192132\",\n  \"accountTitle\": \"Abdul Rasheed\"\n  },\n  \"paymentInfo\": {\n  \"dateTime\": \"20221216153620\",\n  \"longitude\": \"0213123.21\",\n  \"latitude\": \"0117583.45\",\n  \"authId\": \"654123\",\n  \"msgId\": \"MASH231016140256592221\"\n  },\n  \"amountInfo\": {\n  \"amount\": 2000\n  },\n  \"merchantInfo\": {\n  \"accountTitle\": \"Owais Malik\",\n  \"dba\": \"ABC General Store\",\n  \"categoryCode\": \"5399\",\n  \"bic\": \"NBPBPKKA\",\n  \"iban\": \"PK73NBPA2166001369874563\",\n  \"merchantIdAlias\": \"\"\n  },\n  \"additionalInfo\": {\n  \"currency\": \"586\",\n  \"country\": \"\",\n  \"billNumber\": \"\",\n  \"billDueDate\": \"\",\n  \"amountAfterDueDate\": \"\",\n  \"loyaltyNumber\": \"\",\n  \"storeLabel\": \"\",\n  \"customerLabel\": \"\",\n  \"terminalID\": \"100002301\",\n  \"paymentPurpose\": \"\",\n  \"merchantTaxId\": \"\",\n  \"merchantChannel\": \"\",\n  \"rtpId\": \"\",\n  \"ttc\": \"\",\n  \"customerEmail \": \"\",\n  \"customerMobile\": \"\",\n  \"customerAddress\": \"\",\n  \"referenceLabel\": \"\"\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "instrId": "TMIC230511125023876423",
                        "endToEndId": "1fc66b584e77-46e6-9dcb-fb12c00e7742",
                        "txId": "TMIC230511125023876423",
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "paymentInfo": {
                        "msgId": "TMICFBPK110523000111250233"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "msgId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format yyyymmdd)",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format hhmmss)",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "123456"
                      }
                    }
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string",
                        "description": "Payer (Customer) – IBAN",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Payer (Customer) – Account title",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "John Doe"
                      }
                    }
                  },
                  "senderIdentification": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "CNIC, NICOP, PASSPORT, NTN, REGNUM etc",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "CNIC"
                      },
                      "idValue": {
                        "type": "string",
                        "description": "Value of the selected idType",
                        "minLength": 1,
                        "maxLength": 30,
                        "example": "4220141111113"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "description": "Date/time stamp provided by Channel (Format yyyymmddhhmmss)",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20221216153620"
                      },
                      "latitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "25.276987"
                      },
                      "longitude": {
                        "type": "string",
                        "description": "Payer geo-location if captured by channel",
                        "minLength": 1,
                        "maxLength": 10,
                        "example": "55.296249"
                      },
                      "authId": {
                        "type": "string",
                        "description": "Debit authorization unique reference number returned by core banking in response to debit hold request",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "AUTH1234567890"
                      },
                      "msgId": {
                        "type": "string",
                        "description": "Unique reference number sent to RAAST for e2e reconciliation",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "MSG1234567890"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "Amount entered by user",
                        "example": 100.5
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "accountTitle": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Merchant Account"
                      },
                      "dba": {
                        "type": "string",
                        "description": "In case of QR, put the information from QRC TAG 59. In case of till-based payment put information returned from CAS API",
                        "minLength": 1,
                        "maxLength": 40,
                        "example": "Doing Business As"
                      },
                      "categoryCode": {
                        "type": "string",
                        "description": "Information from QRC TAG 52",
                        "minLength": 1,
                        "maxLength": 4,
                        "example": "1234"
                      },
                      "bic": {
                        "type": "string",
                        "description": "Information from [QRC TAG 28 / Field 1]",
                        "minLength": 1,
                        "maxLength": 12,
                        "example": "BANKDEFF"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Merchant IBAN [QRC TAG 28 / Field 2]",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "DE89370400440532013000"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Pass if information received in QR",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "MERCHANT123"
                      }
                    }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Information from QRC TAG 53",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "USD"
                      },
                      "country": {
                        "type": "string",
                        "description": "Information from QRC TAG 58",
                        "minLength": 1,
                        "maxLength": 2,
                        "example": "US"
                      },
                      "billNumber": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 01]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "BILL12345"
                      },
                      "billDueDate": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 50]",
                        "minLength": 1,
                        "maxLength": 8,
                        "example": "20230101"
                      },
                      "amountAfterDueDate": {
                        "type": "number",
                        "description": "Information from [QRC TAG 62 / Field 51]",
                        "example": 110
                      },
                      "loyaltyNumber": {
                        "type": "string",
                        "description": "The identifier assigned to a customer by a merchant/brand/business for loyalty rewards",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "LOYALTY12345"
                      },
                      "storeLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 03]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Store Label"
                      },
                      "customerLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 06]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Customer Label"
                      },
                      "terminalID": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 07]",
                        "example": "Terminal123"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 08]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "Payment Purpose"
                      },
                      "merchantTaxId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 10]",
                        "minLength": 1,
                        "maxLength": 25,
                        "example": "TAX12345"
                      },
                      "merchantChannel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 11]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "CHN"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "Information from [QRC TAG 84], in case of dynamic QRC only.",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "RTP12345"
                      },
                      "ttc": {
                        "type": "string",
                        "description": "Information from [QRC TAG 85]",
                        "minLength": 1,
                        "maxLength": 3,
                        "example": "TTC"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "customer@example.com"
                      },
                      "customerMobile": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 20,
                        "example": "1234567890"
                      },
                      "customerAddress": {
                        "type": "string",
                        "description": "Provided by user",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "123 Main Street, New York, NY"
                      },
                      "referenceLabel": {
                        "type": "string",
                        "description": "Information from [QRC TAG 62 / Field 05]",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reference Label"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserved for future use",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "Reserved5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/billercat": {
      "get": {
        "summary": "Biller Category",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"bill-cat\"></a>\nget the list of billers categories to organize billers list at channel ",
        "operationId": "billercat",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl --request GET \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billercat' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "catList": [
                        {
                          "catId": 1,
                          "catName": "Electricity"
                        },
                        {
                          "catId": 2,
                          "catName": "Water"
                        },
                        {
                          "catId": 3,
                          "catName": "Gas"
                        },
                        {
                          "catId": 4,
                          "catName": "Landline"
                        },
                        {
                          "catId": 5,
                          "catName": "Broadband ISP"
                        },
                        {
                          "catId": 6,
                          "catName": "Mobile Topup"
                        },
                        {
                          "catId": 7,
                          "catName": "Ufone Super Card"
                        },
                        {
                          "catId": 8,
                          "catName": "Mobile Packages"
                        },
                        {
                          "catId": 9,
                          "catName": "Person to Government"
                        },
                        {
                          "catId": 10,
                          "catName": "Tax Payments"
                        },
                        {
                          "catId": 11,
                          "catName": "Education"
                        },
                        {
                          "catId": 12,
                          "catName": "1 Bill"
                        },
                        {
                          "catId": 13,
                          "catName": "Insurance Services"
                        },
                        {
                          "catId": 14,
                          "catName": "Investments"
                        },
                        {
                          "catId": 15,
                          "catName": "E-Payment"
                        },
                        {
                          "catId": 16,
                          "catName": "Sports"
                        },
                        {
                          "catId": 17,
                          "catName": "Others"
                        },
                        {
                          "catId": 18,
                          "catName": "Financial Services"
                        },
                        {
                          "catId": 19,
                          "catName": "Airline"
                        },
                        {
                          "catId": 20,
                          "catName": "Asset Management"
                        },
                        {
                          "catId": 21,
                          "catName": "Charity/NGO"
                        },
                        {
                          "catId": 22,
                          "catName": "Clubs"
                        },
                        {
                          "catId": 23,
                          "catName": "Courier"
                        },
                        {
                          "catId": 24,
                          "catName": "Credit Card"
                        },
                        {
                          "catId": 25,
                          "catName": "E-Commerce"
                        },
                        {
                          "catId": 26,
                          "catName": "Fintech"
                        },
                        {
                          "catId": 27,
                          "catName": "FMCG & Energy"
                        },
                        {
                          "catId": 28,
                          "catName": "Health and Fitness"
                        },
                        {
                          "catId": 29,
                          "catName": "Hospitals"
                        },
                        {
                          "catId": 30,
                          "catName": "Information Technology  Services (ITS)"
                        },
                        {
                          "catId": 31,
                          "catName": "Real Estate /Constructions"
                        },
                        {
                          "catId": 32,
                          "catName": "Tracker Services"
                        },
                        {
                          "catId": 33,
                          "catName": "Transporation Services"
                        },
                        {
                          "catId": 34,
                          "catName": "Travel and Tours"
                        },
                        {
                          "catId": 35,
                          "catName": "Utility"
                        }
                      ]
                    }
                  },
                  "401": {
                    "summary": "Failure with No data found",
                    "value": {
                      "response": {
                        "response_code": "0401",
                        "response_desc": "No data found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "catId": {
                      "type": "integer",
                      "description": "Category Id, assigned by Open Connect"
                    },
                    "catName": {
                      "type": "string",
                      "description": "Category Name",
                      "maxLength": 20
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/billerlist": {
      "post": {
        "summary": "Biller List",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"biller-list\"></a>\nThe purpose of the Biller List API is to facilitate seamless integration between middleware and digital channels. This integration process is especially important when aggregators bring new billers on board and issue notifications to financial institutions, requesting the activation of these billers on their digital platforms. The Open Connect (OC) system plays a crucial role in managing a local repository that contains information about these billers and their transaction configurations.</br></br>When the aggregator issues a memo to enable new billers, the OC system promptly updates its local repository with this information. Additionally, the Biller List API allows the OC system to provide detailed attributes of each biller, including whether the minimum and maximum limits for each biller's transactions. This ensures that financial institutions have access to up-to-date information and can provide a seamless experience to their customers when making payments to these billers.",
        "operationId": "billerlist",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billerlist' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"otherinfo\": {\n    \"billerCat\": 2\n  }\n}'\n       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "billers": [
                        {
                          "billerId": "1",
                          "billerName": "Zong Prepaid",
                          "minimumAmount": 100,
                          "maximumAmount": 10000
                        },
                        {
                          "billerId": "2",
                          "billerName": "Zong Postpaid",
                          "minimumAmount": 100,
                          "maximumAmount": 10000
                        },
                        {
                          "billerId": "3",
                          "billerName": "Ufone Prepaid",
                          "minimumAmount": 50,
                          "maximumAmount": 5000
                        }
                      ]
                    }
                  },
                  "1": {
                    "summary": "Invalid category code",
                    "value": {
                      "response": {
                        "response_code": "0001",
                        "response_desc": "Invalid category code"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the request"
                    },
                    "billerId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "description": "Biller unique id assigned by OC"
                    },
                    "billerName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 24,
                      "description": "Biller name, same will be show to user"
                    },
                    "minimumAmount": {
                      "type": "number",
                      "description": "Minimum amount for the transaction, if this field do not appear with biller details it means there is no limit cap applied for the transaction. However, channel limit will be managed by the channel middleware."
                    },
                    "maximumAmount": {
                      "type": "number",
                      "description": "Maximum amount for the transaction, if this field do not appear with biller details it means there is no limit cap applied for the transaction. However, channel limit will be managed by the channel middleware."
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_Billerlist"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/billinquiry": {
      "post": {
        "summary": "Bill Inquiry",
        "tags": [
          "Billing API Specs"
        ],
        "description": "<a id=\"bill-inquiry\"></a>\nThe primary objective of this API is to retrieve comprehensive bill information before initiating the payment process. This empowers customers to thoroughly review the details and legitimacy of the bill they are about to pay. ",
        "operationId": "billinquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/billinquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"billinfo\": {\n    \"billerId\": 5,\n    \"consumerNo\": \"03132370605\"\n  }\n}'\n       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      },
                      "billInfo": {
                        "billerId": 5,
                        "consumerNo": "03132370605",
                        "customerName": "Waqas Nizam",
                        "billStatus": "T",
                        "billingMonth": "2310",
                        "dueDate": "231029",
                        "amountWithinDueDate": "5100",
                        "amountAfterDueDate": "5300",
                        "source": "01"
                      }
                    }
                  },
                  "288": {
                    "summary": "Customer Not Found",
                    "value": {
                      "response": {
                        "response_code": "0288",
                        "response_desc": "Customer Not Found "
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 40,
                      "description": "Unique correlation id for the bill inquiry request. The value is in GUID format and will be sent by the initiator in payment call."
                    },
                    "billerId": {
                      "type": "integer",
                      "description": "Echo back from request"
                    },
                    "consumerNo": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 24,
                      "description": "Echo back from request"
                    },
                    "customerName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 40,
                      "description": "Customer name or bill title, the value will be sent by the biller. In case of mobile top-up, it can be blank."
                    },
                    "billStatus": {
                      "type": "string",
                      "description": "Possible values are:\n\n| Status            | Description          |\n|-------------------|----------------------|\n| U                 | Unpaid               |\n| P                 | Paid                 |\n| T                 | Partial payment      |\n| B                 | Blocked              |",
                      "minLength": 1,
                      "maxLength": 1,
                      "enum": [
                        "U",
                        "P",
                        "T",
                        "B"
                      ]
                    },
                    "billingMonth": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "pattern": "yyMM"
                    },
                    "dueDate": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6,
                      "pattern": "yyMMdd"
                    },
                    "amountWithinDueDate": {
                      "type": "number",
                      "description": "Amount to be paid by customer if bill is not due"
                    },
                    "amountAfterDueDate": {
                      "type": "number",
                      "description": "Amount to be paid by customer if bill has been due"
                    },
                    "source": {
                      "type": "string",
                      "maxLength": 2,
                      "minLength": 2,
                      "description": "Aggregator from which bill inquiry has been performed\n| Code  | Organization   |\n|-------|----------------|\n| 02    | 1LINK          |\n| 03    | NADRA          |",
                      "enum": [
                        "02",
                        "03"
                      ]
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId",
                    "billerId",
                    "consumerNo"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_BillInquiry"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/customers/one-step": {
      "post": {
        "summary": "One-Step Customer Registration",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"one-step\"></a>\nSBP is allowing account holders to tag their account with any of their below personal information which they can share with other account holders to send funds into his/her account",
        "operationId": "one-step",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/one-step' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"customerInfo\": {\n    \"documentType\": \"CNIC\",\n    \"documentNumber\": \"4230146389021\",\n    \"name\": \"Account Title here\",\n    \"surname\": \"\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1987-01-28\",\n    \"startDate\": \"2021-05-15\",\n    \"expirationDate\": \"2025-05-15\"\n  },\n  \"aliases\": [\n    {\n      \"type\": \"MOBILE\",\n      \"value\": \"03222507423\",\n      \"status\": \"active\",\n      \"accounts\": [\n        {\n          \"id\": {\n            \"iban\": \"PK79NBPA0002004137343952\"\n          },\n          \"currency\": \"PKR\",\n          \"isDefault\": true\n        }\n      ]\n    }\n  ]\n}'       \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "306": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0306",
                        "response_desc": "Customer already exists"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_cas_OneStep"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/customers/registercaa": {
      "post": {
        "summary": "Register Customer Alias Accounts",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"register-caa\"></a>\nAs per SBP RAAST ID Linking / delinking guidelines, OC have exposed a custom method in which OC will do following calls sequentially to link customer account with RAAST ID for the first time:  \n- Register Customer Information\n- Activate Customer\n- Account Registration\n- Get Customer Aliases\n- Link Alias to Account          ",
        "operationId": "registercaa",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/registercaa' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"customerInfo\": {\n    \"documentType\": \"CNIC\",\n    \"documentNumber\": \"4230146389021\",\n    \"name\": \"Account Title here\",\n    \"surname\": \"\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1987-01-28\",\n    \"startDate\": \"2021-05-15\",\n    \"expirationDate\": \"2025-05-15\"\n  },\n  \"aliases\": [\n    {\n      \"type\": \"MOBILE\",\n      \"value\": \"03222507423\",\n      \"status\": \"active\",\n      \"accounts\": [\n        {\n          \"id\": {\n            \"iban\": \"PK79NBPA0002004137343952\"\n          },\n          \"currency\": \"PKR\",\n          \"isDefault\": true\n        }\n      ]\n    }\n  ]\n}'\n   \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "306": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0306",
                        "response_desc": "Customer already exists"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RegisterCAA"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/account/delinkaccountalias": {
      "post": {
        "summary": "Delink Account from ALias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"unlink-account-alias\"></a>\nIn this scenario customer want to unlink his/her selected account and assumption is customer is already linked the account with RAAST ID. \n\nThe reason for performing this operation may be any of following:  \n-\tCustomer want to link his/her another account with the current institution\n-\tCustomer want to link his/her another account with the other RAAST participants\n      ",
        "operationId": "delinkaccountalias",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/delinkaccountalias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"alias\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\"\n  },\n  \"account\": {\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true\n  }\n}'    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Customer already exists",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_DelinkAccountAlias"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/account/linkaccountalias": {
      "post": {
        "summary": "link Account to ALias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"link-account-alias\"></a> \nIn this scenario customer want to relink his/her selected account and assumption is customer is already unlinked the account with RAAST ID and do not have any linked account id with RAAST ID.\n      ",
        "operationId": "linkaccountalias",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/linkaccountalias' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"alias\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\"\n  },\n  \"account\": {\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true,\n    \"currency\": \"PKR\"\n  }\n}'        \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_LinkAccountAlias"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/account/setdefault": {
      "post": {
        "summary": "Set Default Account for Alias",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"set-default-account\"></a>\nThe purpose of this API is to facilitate users who have multiple accounts within their organization. These users have already registered multiple accounts and now wish to change the default account associated with a specific RAAST ID. To achieve this, users are not required to go through the linking or delinking process. Instead, they will be presented with a list of linked accounts and can effortlessly designate any of these linked accounts as their new default account.    ",
        "operationId": "setdefault",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/account/setdefault' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  },\n  \"accountInfo\": {\n    \"type\": \"MOBILE\",\n    \"value\": \"03222507444\",\n    \"iban\": \"PK79NBPA0002004137343952\",\n    \"isDefault\": true\n  }\n}'\n    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_SetDefaultAccount"
              }
            }
          }
        }
      }
    },
    "/api/v1/paysyslabs/customers/delete": {
      "post": {
        "summary": "Remove RasstId Relationship with CAS",
        "tags": [
          "CAS API Specs"
        ],
        "description": "<a id=\"remove-customer\"></a>\nIn one-step delete Open connect will call three consecutive calls for CAS to remove customer all relationship with CAS. Customer can re-register on CAS using one-step registration.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/paysyslabs/customers/delete' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"uid\": {\n    \"type\": \"CNIC\",\n    \"value\": \"4230146389021\"\n  }\n}'     \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "Success"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  },
                  "305": {
                    "summary": "Cannot find customer",
                    "value": {
                      "response": {
                        "response_code": "0305",
                        "response_desc": "Cannot find customer"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123",
                        "correlationId": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "$ref": "#/components/schemas/correlationId"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan",
                    "correlationId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/p_RemoveCustomerFromCAS"
              }
            }
          }
        }
      }
    },
    "/bank/payments/titlefetch": {
      "post": {
        "summary": "titlefetch",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The service will be exposed by the bank. The purpose of the method is to allow member banks and schemes such as RAAST or 1LINK to get customer account info which is known as Title fetch request.\n\n\nThe title fetch usually comes before payment request where sender wants to verify beneficiary account title and account validation to make sure payment will be sent into the beneficiary account.",
        "operationId": "titlefetch",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/titlefetch' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"initiator\": \"RAAST\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\"\n  },\n  \"paymentInfo\": {\n    \"amount\": 5000\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "Success",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "receiverInfo": {
                        "account": "03132370605",
                        "iban": "PK98MASH0000003132370605",
                        "title": "Waqas Nizam",
                        "mobile": "03132370605",
                        "identity": [
                          {
                            "idType": "CNIC",
                            "idValue": "1234512345671"
                          },
                          {
                            "idType": "Passport",
                            "idValue": "AX59856321"
                          },
                          {
                            "idType": "NTN",
                            "idValue": "6598532102"
                          }
                        ]
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "01",
                        "responseDesc": "Invalid account or no account found",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "account": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver account (Echo back)"
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Receiver IBAN"
                    },
                    "title": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Receiver account title"
                    },
                    "mobile": {
                      "type": "string",
                      "minLength": 11,
                      "maxLength": 11,
                      "description": "Receiver mobile number"
                    },
                    "idType": {
                      "type": "string",
                      "minLength": 20,
                      "maxLength": 20,
                      "description": "Receiver account id type available in bank’s profile. Bank may return list of id type and values in case of joint account and if bank’s have multiple identity values for a customer. \n\n\nThe id types are as:\n\n\n•\tCNIC\n\n•\tNIC\n\n•\tNICOP\n\n•\tPOC\n\n•\tNTN\n\n•\tPASSPORT\n\n•\tREGNUM (Registration Number"
                    },
                    "idValue": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Identity value of respective identity type"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_TitleFetch"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditposting": {
      "post": {
        "summary": "creditposting",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The method is used to credit bank’s customer account whenever payment comes from RAAST. The Open connect sent credit request to the bank’s system using this method in the request mode. In case of rejection Open connect will instantly return payment to sender bank.\n\n\nDescription\tRequest to credit bank’s customer account, the request can be initiated by 1LINK and RAAST for following transactions:\n\n\n•\tIBFT inward payment\n\n•\tRAAST P2P inward payment\n\n•\tRAAST P2P outward return payment",
        "operationId": "creditposting",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditposting' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\t\n  \"senderinfo\": {\n    \"senderBankIMD\": \"\",\n    \"senderBankBIC\": \"NBPBPKKA\",\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0152\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"instrId\": \"TMIC230511125023876423\",\n    \"endToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"txId\": \"TMIC230511125023876423\",\n    \"msgId\": \"TMICFBPK110523000111250233\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "04",
                        "responseDesc": "Credit limit exceed for the account",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditPosting"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditadvise": {
      "post": {
        "summary": "creditadvise",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "Advise means where bank is responsible to credit amount into the receiver account. As a guaranteed delivery mechanism (SAF), OC will be sent credit request as advise to bank’s system via SAF mechanism.\n\n\nThis method will be used in any of below case:\n\n\n•\t1LINK incoming credit advise\n\n•\tRAAST P2P Inward return payments, this happens when previously made outward P2P payment failed at receiving bank end and bank initiate return after sometime.\n\n•\tRAAST P2P Timeout transactions",
        "operationId": "creditadvise",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditadvise' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\",\n    \"initiator\": \"RAAST\",\n    \"txnType\": \"01\"\n  },\n  \"senderinfo\": {\n    \"senderBankIMD\": \"\",\n    \"senderBankBIC\": \"NBPBPKKA\",\n    \"fromAccount\": \"PK56AIIN1234567890000001\",\n    \"fromAccountTitle\": \"Muhammad Ali\",\n    \"fromAccountCnic\": \"1234512345671\"\n  },\n  \"receiverinfo\": {\n    \"toAccount\": \"PK76NBPA1234567890000999\",\n    \"toAccountTitle\": \"Waqas Nizam\"\n  },\n  \"paymentInfo\": {\n    \"purposeCode\": \"0125\",\n    \"narration\": \"test transaction\",\n    \"amount\": 5000,\n    \"instrId\": \"TMIC230511125023876423\",\n    \"endToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"txId\": \"TMIC230511125023876423\",\n    \"msgId\": \"TMICFBPK110523000111250233\",\n    \"oneLinkrrn\": \"002236987456\",\n    \"oneLinkstan\": \"987456\"\n  },\n  \"orgTxnInfo\": {\n    \"orgtxndate\": \"20231015\",\n    \"orgtxntime\": \"182243\",\n    \"orginstrId\": \"TMIC230511125023876423\",\n    \"orgendToEndId\": \"1fc66b584e77-46e6-9dcb-fb12c00e7742\",\n    \"orgtxId\": \"TMIC230511125023876423\",\n    \"orgmsgId\": \"TMICFBPK110523000111250233\"\n  },\n  \"reserveFields\": {\n    \"r1\": \"\",\n    \"r2\": \"\",\n    \"r3\": \"\",\n    \"r4\": \"\",\n    \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "09",
                        "responseDesc": "Duplicate transaction",
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 4,
                      "description": "Response code for the request"
                    },
                    "responseDesc": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Description for the respective response code"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditAdvise"
              }
            }
          }
        }
      }
    },
    "/bank/payments/creditinquiry": {
      "post": {
        "summary": "creditinquiry",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "The purpose of this request to inquire the status of the previously posted credit request or advise.\n\n\nIn case if original transaction got timeout, the Open Connect initiate transaction inquiry to the check the transaction faith.",
        "operationId": "creditinquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "\ncurl -X POST \\\n--url 'https://apigw.paysyslabs.com/api/v1.3/bank/payments/creditinquiry' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n    \"rrn\": \"002236987456\",\n    \"stan\": \"987456\",\n    \"txndate\": \"20231015\",\n    \"txntime\": \"182243\"\n  },\n  \"orgTxnInfo\": {\n    \"orgtxnrrn\": \"002236987456\",\n    \"orgtxnstan\": \"987456\",\n    \"orgtxndate\": \"20231015\",\n    \"orgtxntime\": \"182243\"\n  }\n}'    \n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "orgResponse": {
                        "orgresponseCode": "00",
                        "orgresponseDesc": "SUCCESS"
                      }
                    }
                  },
                  "1": {
                    "summary": "Failure Response Example",
                    "value": {
                      "response": {
                        "responseCode": "00",
                        "responseDesc": "SUCCESS",
                        "stan": "010123",
                        "rrn": "010123010123"
                      },
                      "orgResponse": {
                        "orgresponseCode": "01",
                        "orgresponseDesc": "No transaction found"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "responseCode": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "description": "Response code for the request"
                        },
                        "responseDesc": {
                          "type": "string",
                          "minLength": 40,
                          "maxLength": 40,
                          "description": "Description for the respective response code"
                        },
                        "rrn": {
                          "$ref": "#/components/schemas/rsp_rrn"
                        },
                        "stan": {
                          "$ref": "#/components/schemas/rsp_stan"
                        }
                      }
                    },
                    "orgResponse": {
                      "type": "object",
                      "properties": {
                        "orgresponseCode": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 4,
                          "description": "Response code for the original request"
                        },
                        "orgresponseDesc": {
                          "type": "string",
                          "minLength": 40,
                          "maxLength": 40,
                          "description": "Description for the respective original response code"
                        }
                      }
                    }
                  },
                  "required": [
                    "responseCode",
                    "responseDesc",
                    "rrn",
                    "stan",
                    "orgresponseCode",
                    "orgresponseDesc"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/b_CreditInquiry"
              }
            }
          }
        }
      }
    },
    "/bank/channel/rtpRequest": {
      "post": {
        "summary": "RTP Request",
        "tags": [
          "Client Bank API Specs"
        ],
        "description": "<a id=\"rtpRequest\"></a>\nWe recommend to expose the APIs in such a manner that access to that API is available only through jwt authentication.\nIn order to do so, following are the two methods which bank’s channel has to expose:\n \n1.\tAuthentication (generate access token) – for authentication merchanism please follow \n2.\tRTP request\n \nTo send RTP request to channel backend. In response channel backend sent http://200 only.\n•\tOC will initiate rtpRequest to send parsed data from pain.013 to channel\n•\tOC will send access token in headers of this API. (Access token received in response of authentication)",
        "operationId": "rtpRequest",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of Request Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "CURL",
            "source": "curl -X POST \\\n--url 'https://apigw.paysyslabs.com/bank/channel/rtpRequest' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWxlbm9yfGliIiwiZXhwIjoxNjc3OTMyNDYyLCJpYXQiOjE2Nzc4NDYwNjJ9.ayCCTTt1YGD9Kc_p0XM3X5meYrCYB5-M2LblBG8iQ3TiEEfsNc7imeRkxJwkXoxGZAxBsTeyd50dX3wdhB7big'            \n--data '{\n  \"info\": {\n  \"rrn\": \"002236987456\",\n  \"stan\": \"987456\",\n  \"txndate\": \"20231015\",\n  \"txntime\": \"182243\"\n  },\n  \"senderInfo\": {\n  \"memberId\": \"MEZNPKKA\",\n  \"accountTitle\": \"Zonera\",\n  \"iban\": \"PK65MEZN0001220101111111\",\n  \"additionalRequiredDetails\": \"AME\",\n  \"identificationDetails\": {\n    \"loyaltyNo\": \"SOME LOYALTY NUMB\",\n    \"customerLabel\": \"SOME CUST LABEL\"\n  }\n  },\n  \"paymentInfo\": {\n  \"rtpExecutionDateTime\": \"2022-07-08T03:41:49\",\n  \"rtpExpiryDateTime\": \"2022-07-08T03:46:49\",\n  \"rtpType\": \"\"\n  },\n  \"merchantInfo\": {\n  \"memberId\": \"JSBLPKKA\",\n  \"dba\": \"SOME DBA NAME\",\n  \"accountTitle\": \"MERCHANT ACCOUNT TITLE\",\n  \"iban\": \"PK81KHYB0022000001111111\",\n  \"country\": \"PK\",\n  \"categoryCode\": \"5411\",\n  \"merchantIdAlias\": \"229999999\",\n  \"postalAddress\": {\n    \"townName\": \"KARACHI\",\n    \"subDept\": \"SOME TERMINAL LABEL\",\n    \"addressLine\": \"Free Format Address\"\n  },\n  \"contactDetails\": {\n    \"phoneNo\": \"+92-3055520420\",\n    \"mobileNo\": \"+92-3055520419\",\n    \"email\": \"payee@karachi.pk\",\n    \"dept\": \"SOME BRANCH\",\n    \"website\": \"www.merchant.pk\",\n    \"merchantChannelId\": \"400\"\n  },\n  \"geoLocation\": {\n    \"lat\": \"24.875061\",\n    \"long\": \"67.038332\"\n  }\n  },\n  \"amountInfo\": {\n  \"instructedAmount\": 310,\n  \"duePayableAmount\": 300,\n  \"adjustmentAount\": 10,\n  \"cdtDbtIndicator\": \"CRDT\",\n  \"adjustmentReason\": \"PNLT\",\n  \"immediatePaymentRebateAmount\": 1,\n  \"delayPenaltyAmount\": 5,\n  \"isAmountModificationAllowed\": true,\n  \"isEarlyPaymentAllowed\": true\n  },\n  \"additonalInfo\": {\n  \"currency\": \"586\",\n  \"billNumber\": \"\",\n  \"billDueDate\": \"\",\n  \"amountAfterDueDate\": \"\",\n  \"terminalID\": \"100002301\",\n  \"paymentPurpose\": \"\",\n  \"merchantTaxId\": \"\",\n  \"merchantChannel\": \"\",\n  \"ttc\": \"\",\n  \"rtpId\": \"9f9733fd-160a-4214-9644-105e627d008c\",\n  \"referredDocumentDetails\": {\n    \"hasRelatedImage\": true,\n    \"imageAlternativeId\": \"1234567890\",\n    \"relatedDate\": \"2022-07-01\"\n  },\n  \"invoiceDetails\": {\n    \"enclosedFileCode\": \"MSIN\",\n    \"id\": \"9f9733fd-160a-4214-9644-105e627d0\",\n    \"issueDate\": \"2022-07-12\",\n    \"enclosureInXMLFormat\": \"<invoice>invoice file in xml format</invoice>\",\n    \"referenceLabel\": \"111222333\"\n  }\n  },\n  \"reserveFields\": {\n  \"r1\": \"\",\n  \"r2\": \"\",\n  \"r3\": \"\",\n  \"r4\": \"\",\n  \"r5\": \"\"\n  }\n}'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "0": {
                    "summary": "Success Response Example",
                    "value": {
                      "response": {
                        "response_code": "0000",
                        "response_desc": "SUCCESS"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  },
                  "405": {
                    "summary": "failure Response Example",
                    "value": {
                      "response": {
                        "response_code": "0405",
                        "response_desc": "Beneficiary account is invalid"
                      },
                      "info": {
                        "stan": "010123",
                        "rrn": "010123010123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "response_code": {
                      "$ref": "#/components/schemas/response_code"
                    },
                    "response_desc": {
                      "$ref": "#/components/schemas/response_desc"
                    },
                    "rrn": {
                      "$ref": "#/components/schemas/rsp_rrn"
                    },
                    "stan": {
                      "$ref": "#/components/schemas/rsp_stan"
                    },
                    "correlationId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Unique correlation id for the transaction generated by Open Connect"
                    },
                    "instrId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Instruction id sent to RAAST"
                    },
                    "endToEndId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "End to end id sent to RAAST"
                    },
                    "txId": {
                      "type": "string",
                      "minLength": 40,
                      "maxLength": 40,
                      "description": "Transaction id sent to RAAST"
                    },
                    "msgId": {
                      "type": "string",
                      "minLength": 24,
                      "maxLength": 24,
                      "description": "Echo back"
                    }
                  },
                  "required": [
                    "response_code",
                    "response_desc",
                    "rrn",
                    "stan"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "unauthorized",
                  "status": 401
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "rrn": {
                        "type": "string",
                        "description": "Retrieval reference number.",
                        "minLength": 12,
                        "maxLength": 12,
                        "example": "123456789012"
                      },
                      "stan": {
                        "type": "string",
                        "description": "System trace audit number.",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "654321"
                      },
                      "txndate": {
                        "type": "string",
                        "description": "Transaction date (Format: yyyymmdd).\n\nOC will send the same value received by the scheme.\n",
                        "minLength": 8,
                        "maxLength": 8,
                        "example": "20240101"
                      },
                      "txntime": {
                        "type": "string",
                        "description": "Transaction time (Format: hhmmss).\n\nOC will send the same value received by the scheme.\n",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "235959"
                      }
                    }
                  },
                  "senderInfo": {
                    "type": "object",
                    "properties": {
                      "memberId": {
                        "type": "string",
                        "description": "Member id or BIC code of customer’s bank.",
                        "minLength": 11,
                        "maxLength": 11,
                        "example": "BIC12345678"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Name or account title of customer.",
                        "minLength": 1,
                        "maxLength": 100,
                        "example": "John Doe"
                      },
                      "iban": {
                        "type": "string",
                        "description": "IBAN number of customer.",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "GB82WEST12345698765432"
                      },
                      "additionalRequiredDetails": {
                        "type": "string",
                        "description": "This param will be used if merchant requires any additional info from customer i.e. his Mobile no (M), email address (E) or address (A).\n\nMerchant will send the parameter value as M, E, A or combination of these i.e. AME.\n",
                        "minLength": 0,
                        "maxLength": 3,
                        "example": "MEA"
                      }
                    }
                  },
                  "identificationDetails": {
                    "type": "object",
                    "properties": {
                      "loyaltyNo": {
                        "type": "string",
                        "description": "Loyalty number of customer if any.",
                        "minLength": 0,
                        "maxLength": 35,
                        "example": "L1234567890"
                      },
                      "customerLabel": {
                        "type": "string",
                        "description": "Customer label if any.",
                        "minLength": 0,
                        "maxLength": 35,
                        "example": "Preferred Customer"
                      }
                    }
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "rtpExecutionDateTime": {
                        "type": "string",
                        "description": "RTP Execution date-time (Format yyyymmddhhmmss).",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20240101120000"
                      },
                      "rtpExpiryDateTime": {
                        "type": "string",
                        "description": "RTP Expiry date-time provided by merchant (Format yyyymmddhhmmss).",
                        "minLength": 14,
                        "maxLength": 14,
                        "example": "20240101180000"
                      },
                      "rtpType": {
                        "type": "string",
                        "description": "NOW in case of RTP Now and LATER in case of RTP Later.\n",
                        "minLength": 3,
                        "maxLength": 5,
                        "example": "NOW"
                      }
                    }
                  },
                  "merchantInfo": {
                    "type": "object",
                    "properties": {
                      "memberId": {
                        "type": "string",
                        "description": "Member id or BIC code of sender bank/acquirer.",
                        "minLength": 11,
                        "maxLength": 11,
                        "example": "BIC98765432"
                      },
                      "dba": {
                        "type": "string",
                        "description": "Merchant “doing business as” name.",
                        "minLength": 1,
                        "maxLength": 140,
                        "example": "Merchant DBA Name"
                      },
                      "accountTitle": {
                        "type": "string",
                        "description": "Merchant name or account title.",
                        "minLength": 1,
                        "maxLength": 140,
                        "example": "Merchant Account Title"
                      },
                      "iban": {
                        "type": "string",
                        "description": "Merchant IBAN where he/she wants to receive payment.",
                        "minLength": 24,
                        "maxLength": 24,
                        "example": "GB82WEST12345698765432"
                      },
                      "country": {
                        "type": "string",
                        "description": "Merchant country code (e.g., PK).",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "PK"
                      },
                      "merchantCategoryCode": {
                        "type": "string",
                        "description": "Merchant category code (MCC).",
                        "minLength": 1,
                        "maxLength": 35,
                        "example": "1234"
                      },
                      "merchantIdAlias": {
                        "type": "string",
                        "description": "Merchant Alias ID.",
                        "minLength": 0,
                        "maxLength": 35,
                        "example": "MerchantAlias123"
                      }
                    }
                  },
                  "postalAddress": {
                    "type": "object",
                    "properties": {
                      "townName": {
                        "type": "string",
                        "description": "Town/City name of merchant.",
                        "minLength": 1,
                        "maxLength": 35,
                        "example": "Townsville"
                      },
                      "subDept": {
                        "type": "string",
                        "description": "Terminal label.",
                        "minLength": 1,
                        "maxLength": 70,
                        "example": "Terminal 1"
                      },
                      "addressLine": {
                        "type": "string",
                        "description": "Address of merchant shop.",
                        "minLength": 1,
                        "maxLength": 70,
                        "example": "123 Main Street"
                      }
                    }
                  },
                  "contactDetails": {
                    "type": "object",
                    "properties": {
                      "phoneNo": {
                        "type": "string",
                        "description": "Phone number/landline of merchant.",
                        "minLength": 13,
                        "maxLength": 34,
                        "example": "+1234567890123"
                      },
                      "mobileNo": {
                        "type": "string",
                        "description": "Mobile number of merchants.",
                        "minLength": 13,
                        "maxLength": 34,
                        "example": "+1234567890123"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of merchant.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "merchant@example.com"
                      },
                      "dept": {
                        "type": "string",
                        "description": "Department details of merchant.",
                        "minLength": 0,
                        "maxLength": 70,
                        "example": "Sales Department"
                      },
                      "website": {
                        "type": "string",
                        "description": "Website of merchant.",
                        "minLength": 0,
                        "maxLength": 128,
                        "example": "https://merchantwebsite.com"
                      },
                      "merchantChannelId": {
                        "type": "string",
                        "description": "Channel ID of merchant.",
                        "minLength": 0,
                        "maxLength": 128,
                        "example": "Channel123"
                      }
                    }
                  },
                  "geoLocation": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "string",
                        "description": "Latitude of merchant position.",
                        "minLength": 0,
                        "maxLength": 128,
                        "example": "24.8607"
                      },
                      "long": {
                        "type": "string",
                        "description": "Longitude of merchant position.",
                        "minLength": 0,
                        "maxLength": 128,
                        "example": "67.0011"
                      }
                    }
                  },
                  "amountInfo": {
                    "type": "object",
                    "properties": {
                      "instructedAmount": {
                        "type": "number",
                        "description": "Instructed amount of actual amount.",
                        "example": 100.5
                      },
                      "duePayableAmount": {
                        "type": "number",
                        "description": "Due payable amount.",
                        "example": 105.75
                      },
                      "adjustmentAmount": {
                        "type": "number",
                        "description": "Any adjustment amount if applicable.",
                        "example": -5.25
                      },
                      "cdtDbtIndicator": {
                        "type": "string",
                        "description": "CRDT for credit.\n\nDBIT for debit.\n\nThis param will be mandatory if duePayableAmount and adjustmentAmount are provided.\n",
                        "minLength": 0,
                        "maxLength": 4,
                        "example": "CRDT"
                      },
                      "adjustmentReason": {
                        "type": "string",
                        "description": "Reason of adjustment i.e., PNLT for penalty.\n\nList of reasons can be provided by SBP.\n\nThis param will be mandatory if duePayableAmount and adjustmentAmount are provided.\n",
                        "minLength": 0,
                        "maxLength": 4,
                        "example": "PNLT"
                      },
                      "immediatePaymentRebateAmount": {
                        "type": "number",
                        "description": "Payment Rebate Amount.",
                        "example": 2.5
                      },
                      "delayPenaltyAmount": {
                        "type": "number",
                        "description": "Delay Penalty Amount.",
                        "example": 1.75
                      },
                      "isAmountModificationAllowed": {
                        "type": "boolean",
                        "description": "True if amount modification is allowed.",
                        "example": true
                      },
                      "isEarlyPaymentAllowed": {
                        "type": "boolean",
                        "description": "True if early payment is allowed.",
                        "example": true
                      }
                    }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "Currency code.",
                        "minLength": 0,
                        "maxLength": 3,
                        "example": "USD"
                      },
                      "billNumber": {
                        "type": "string",
                        "description": "Bill number.",
                        "minLength": 0,
                        "maxLength": 25,
                        "example": "123456789"
                      },
                      "billDueDate": {
                        "type": "string",
                        "description": "Bill due date (Format ddMMyyyy).",
                        "minLength": 0,
                        "maxLength": 8,
                        "example": "16012024"
                      },
                      "amountAfterDueDate": {
                        "type": "number",
                        "description": "Amount after due date.",
                        "example": 110
                      },
                      "terminalID": {
                        "type": "string",
                        "description": "Terminal ID.",
                        "minLength": 0,
                        "maxLength": 25,
                        "example": "Terminal123"
                      },
                      "paymentPurpose": {
                        "type": "string",
                        "description": "Payment purpose.",
                        "minLength": 0,
                        "maxLength": 25,
                        "example": "Payment for services"
                      },
                      "merchantTaxId": {
                        "type": "string",
                        "description": "Merchant Tax ID.",
                        "minLength": 0,
                        "maxLength": 25,
                        "example": "TAX123456"
                      },
                      "merchantChannel": {
                        "type": "string",
                        "description": "Merchant channel.",
                        "minLength": 0,
                        "maxLength": 3,
                        "example": "WEB"
                      },
                      "ttc": {
                        "type": "string",
                        "description": "TTC.",
                        "minLength": 0,
                        "maxLength": 3,
                        "example": "TTC123"
                      },
                      "rtpId": {
                        "type": "string",
                        "description": "RTP ID.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "RTP1234567890"
                      }
                    }
                  },
                  "referredDocumentDetails": {
                    "type": "object",
                    "properties": {
                      "hasRelatedImage": {
                        "type": "boolean",
                        "description": "If any image is associated then true.",
                        "example": true
                      },
                      "imageAlternativeId": {
                        "type": "string",
                        "description": "ID of image.",
                        "minLength": 0,
                        "maxLength": 35,
                        "example": "IMG1234567890"
                      },
                      "relatedDate": {
                        "type": "string",
                        "description": "Related date (Format YYYY-MM-DD).",
                        "minLength": 0,
                        "maxLength": 10,
                        "example": "2024-01-16"
                      }
                    }
                  },
                  "invoiceDetails": {
                    "type": "object",
                    "properties": {
                      "enclosedFileCode": {
                        "type": "string",
                        "description": "File Type (e.g., MSIN, SPRR).",
                        "minLength": 0,
                        "maxLength": 4,
                        "example": "MSIN"
                      },
                      "id": {
                        "type": "string",
                        "description": "UUID.",
                        "minLength": 0,
                        "maxLength": 35,
                        "example": "UUID1234567890"
                      },
                      "issueDate": {
                        "type": "string",
                        "description": "Issue date of invoice (Format YYYY-MM-DD).",
                        "minLength": 0,
                        "maxLength": 10,
                        "example": "2024-01-16"
                      },
                      "enclosureInXMLFormat": {
                        "type": "string",
                        "description": "XML format of invoice is expected but in string format.",
                        "minLength": 0,
                        "maxLength": 10000,
                        "example": "<invoice>...</invoice>"
                      },
                      "referenceLabel": {
                        "type": "string",
                        "description": "Information passed by merchant.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reference Info"
                      }
                    }
                  },
                  "reserveFields": {
                    "type": "object",
                    "properties": {
                      "r1": {
                        "type": "string",
                        "description": "Reserve field 1.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reserve1"
                      },
                      "r2": {
                        "type": "string",
                        "description": "Reserve field 2.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reserve2"
                      },
                      "r3": {
                        "type": "string",
                        "description": "Reserve field 3.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reserve3"
                      },
                      "r4": {
                        "type": "string",
                        "description": "Reserve field 4.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reserve4"
                      },
                      "r5": {
                        "type": "string",
                        "description": "Reserve field 5.",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Reserve5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwtToken": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Token required in all APIs except /authentication enpoint which needs oaut2.1   For more information regarding JWT, check out [JWT](https://auth0.com/learn/json-web-tokens)."
      },
      "clientCredentials": {
        "type": "oauth2",
        "description": "For more information regarding oauth, check out [OAUTH](https://auth0.com/intro-to-iam/what-is-oauth-2).",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://apigw.paysyslabs.com/api/v1.3/paysyslabs/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "p_Authentication": {
        "description": "Representation of a Authentication",
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "example": "client_credentials"
          },
          "client_id": {
            "description": "client_id will be provided by PSL TEAM based on channel",
            "type": "string"
          },
          "client_secret": {
            "description": "client_secret will be provided by PSL TEAM based on channel",
            "type": "string"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ]
      },
      "p_UnifiedTitleFetch": {
        "description": "Representation of a Unified Title Fetch",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "05421236547552"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)                       "
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountType",
              "fromAccountCurrency"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankId": {
                "type": "integer",
                "description": "Bank Id returned by the OC in get bank list service response.\nFor more information, see [Endpoint banklist](#bank-list).",
                "example": 1
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "00023137343951"
              }
            },
            "required": [
              "bankId",
              "toAccount"
            ]
          },
          "otherinfo": {
            "type": "object",
            "properties": {
              "priorityFlag": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "The field determine the priority rail to perform title fetch.\n\n| Value | Description   |\n|-------|---------------|\n| 01    | For RAAST     |\n| 02    | For 1LINK     |",
                "enum": [
                  "01",
                  "02"
                ],
                "example": "01"
              },
              "fallbackFlag": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "The field determine the fall back feature for the title fetch in case title fetch failed from \nthe 1st switch system will attempt to perform it from alternate route if fall back parameter \nset to “Yes”.\n\n| Value | Description   |\n|-------|---------------|\n| 01    | YES     |\n| 02    | NO     |",
                "enum": [
                  "01",
                  "02"
                ],
                "example": "01"
              },
              "purposeCode": {
                "type": "string",
                "description": "the acceptable length of this field will depends on the value provided, please refer to [Purpose Code Table](#purp-code) ",
                "example": "0320"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, it is required as per EFT compliant that receiver must validate credit limit on title fetch to minimize rejection ratio while payment",
                "example": 5000
              }
            },
            "required": [
              "priorityFlag",
              "fallbackFlag",
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_GetDefaultAccount": {
        "description": "Representation of a Get Default Account",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of alias",
                "enum": [
                  "CNIC",
                  "MOBILE",
                  "EMAIL",
                  "TXT"
                ],
                "example": "MOBILE"
              },
              "value": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Alias Value",
                "example": "03132370605"
              }
            },
            "required": [
              "type",
              "value"
            ]
          }
        },
        "required": [
          "info",
          "receiverinfo"
        ]
      },
      "p_TransactionInquiry": {
        "description": "Representation of a Transaction Inquiry",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "originalTxnInfo": {
            "type": "object",
            "properties": {
              "destinationSystem": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "The field determine the priority rail to perform inquiry. \n\nThe values are as:\n\n\n\"01\" – For RAAST\n\n\n\"02\" – For 1LINK\n\n\n\"03\" – For NADRA\n\n\n\"04\" – For 1LINKBPS"
              },
              "ostan": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Value of original transaction STAN",
                "example": "010223"
              },
              "orrn": {
                "type": "string",
                "minLength": 12,
                "maxLength": 12,
                "description": "Value of original transaction RRN",
                "example": "0101222233332323"
              },
              "otxndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "otxntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "omsgId": {
                "$ref": "#/components/schemas/msgId"
              }
            },
            "required": [
              "destinationSystem",
              "ostan",
              "orrn",
              "omsgId",
              "otxndate",
              "otxntime"
            ]
          }
        },
        "required": [
          "info",
          "originalTxnInfo"
        ]
      },
      "p_IBFTTransfer": {
        "description": "Representation of a IBFT Transfer",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "tfcorrelationId": {
                "$ref": "#/components/schemas/tfcorrelationId"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)",
                "example": "00"
              },
              "fromAccountTitle": {
                "type": "string",
                "maxLength": 40,
                "example": "Muhammad Ali"
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountType",
              "fromAccountCurrency",
              "fromAccountCnic"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankIMD": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Bank IMD, received in response of title fetch",
                "example": "100271"
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "00023137343951"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title, received in response of title fetch",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "bankIMD",
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "4 digits numeric 1LINK assigned payment purpose code. please refer to [Purpose Code Table](#purp-code) ",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 3,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, bank make sure that the amount will be same which bank sent during title fetch",
                "example": 5000
              },
              "authId": {
                "$ref": "#/components/schemas/authId"
              }
            },
            "required": [
              "purposeCode",
              "narration",
              "amount",
              "authId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_RAASTTransfer": {
        "description": "Representation of a RAAST Transfer",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "tfcorrelationId": {
                "$ref": "#/components/schemas/tfcorrelationId"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "correlationId"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "fromAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Sender IBAN",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountType": {
                "type": "string",
                "enum": [
                  "00",
                  "10",
                  "20",
                  "30",
                  "40",
                  "50",
                  "60"
                ],
                "description": "Refer to [Sender Account Type Table](#account-type)",
                "example": "00"
              },
              "fromAccountCurrency": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "description": "3 digits ISO8583 universal currency code",
                "example": "586"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle",
              "fromAccountType",
              "fromAccountCurrency",
              "fromAccountCnic"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "bankBIC": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Bank BIC, received in response of title fetch",
                "example": "NBPBPKKA"
              },
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "description": "Beneficiary account title, received in response of title fetch",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "bankBIC",
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "4 digits numeric 1LINK assigned payment purpose code. please refer to [Purpose Code Table](#purp-code) ",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "format": "double",
                "description": "Amount of the transaction, bank make sure that the amount will be same which bank sent during title fetch",
                "example": 5000
              },
              "authId": {
                "$ref": "#/components/schemas/authId"
              },
              "msgId": {
                "$ref": "#/components/schemas/msgId"
              }
            },
            "required": [
              "purposeCode",
              "authId",
              "amount",
              "authId",
              "msgId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_Billerlist": {
        "description": "Representation of a Biller List",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "otherinfo": {
            "type": "object",
            "properties": {
              "billerCat": {
                "type": "integer",
                "description": "The biller category code assigned by OC, return in the response of Get Billers Category",
                "example": 2
              }
            },
            "required": [
              "billerCat"
            ]
          }
        }
      },
      "p_BillInquiry": {
        "type": "object",
        "description": "Representation of Bill Inquiry",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "billinfo": {
            "type": "object",
            "properties": {
              "billerId": {
                "type": "integer",
                "description": "The biller id selected by the customer on channel. The value will be same which OC return in [Get Billers List](#biller-list)",
                "example": 5
              },
              "consumerNo": {
                "type": "string",
                "maxLength": 30,
                "description": "Any value which customer input in bill# or consumer# field.",
                "example": "03132370605"
              }
            },
            "required": [
              "billerId",
              "consumerNo"
            ]
          }
        }
      },
      "p_BillPayment": {
        "type": "object",
        "description": "Representation of Bill Inquiry",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "inqcorrelationId": {
                "type": "string",
                "minimum": 36,
                "maxLength": 40,
                "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0",
                "description": "Unique correlation id for the bill inquiry request. The value will be same which channel received in response of bill inquiry"
              }
            }
          },
          "billinfo": {
            "type": "object",
            "properties": {
              "billerId": {
                "type": "integer",
                "example": 5,
                "description": "The biller id selected by the customer on channel. The value will be same which OC return in [Get Billers List](#biller-list)"
              },
              "consumerNo": {
                "type": "string",
                "maxLength": 30,
                "example": "03132370605",
                "description": "Any value which customer input in bill# or consumer# field."
              },
              "amount": {
                "type": "number",
                "example": 500,
                "description": "Amount of the transaction, bank must follow the scenarios define in the FSD for bill payment and bill amount"
              }
            },
            "required": [
              "billerId",
              "consumerNo",
              "amount"
            ]
          },
          "payerInfo": {
            "type": "object",
            "properties": {
              "payerIBAN": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Payer IBAN",
                "example": "PK76MASH1234567890126985"
              },
              "payerName": {
                "type": "string",
                "maxLength": 40,
                "minLength": 1,
                "description": "Payer account title",
                "example": "Payer account title"
              },
              "payerCNIC": {
                "type": "string",
                "maxLength": 13,
                "minLength": 13,
                "description": "Payer CNIC",
                "example": "1234512345671"
              }
            },
            "required": [
              "payerIBAN",
              "payerName",
              "payerCNIC"
            ]
          },
          "otherInfo": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "string",
                "maxLength": 8,
                "description": "Channel used for payment, the possible [channel type can be seen here](#channel-type)",
                "example": "00000002"
              },
              "authId": {
                "type": "string",
                "maxLength": 40,
                "description": "Debit authorization unique reference number return by core banking in response of debit hold request",
                "example": "658965"
              }
            },
            "required": [
              "channel",
              "authId"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "p_cas_OneStep": {
        "type": "object",
        "description": "Representation of One STep Registration",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "customerInfo": {
            "$ref": "#/components/schemas/customerInfo"
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alias"
            }
          }
        }
      },
      "p_RegisterCAA": {
        "type": "object",
        "description": "Representation of register CAA",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "customerInfo": {
            "$ref": "#/components/schemas/customerInfo"
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alias"
            }
          }
        }
      },
      "p_DelinkAccountAlias": {
        "type": "object",
        "description": "Representation of Delink Account from Alias",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "alias": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              }
            },
            "required": [
              "type",
              "value"
            ]
          },
          "account": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              }
            },
            "required": [
              "iban"
            ]
          }
        }
      },
      "p_LinkAccountAlias": {
        "type": "object",
        "description": "Representation of Link Account Alias",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "alias": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              }
            },
            "required": [
              "type",
              "value"
            ]
          },
          "account": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              },
              "currency": {
                "type": "string",
                "example": "PKR",
                "maxLength": 3
              }
            },
            "required": [
              "iban",
              "isDefault",
              "currency"
            ]
          }
        }
      },
      "p_SetDefaultAccount": {
        "type": "object",
        "description": "Representation of set Default Account",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          },
          "accountInfo": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/alias_type"
              },
              "value": {
                "type": "string",
                "example": "03222507444"
              },
              "iban": {
                "type": "string",
                "example": "PK79NBPA0002004137343952",
                "maxLength": 35
              },
              "isDefault": {
                "type": "boolean",
                "example": true
              }
            },
            "required": [
              "type",
              "value",
              "iban"
            ]
          }
        }
      },
      "p_RemoveCustomerFromCAS": {
        "type": "object",
        "description": "Representation of remove RAAST ID Relationship with CAS",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          }
        }
      },
      "b_TitleFetch": {
        "description": "Representation of a Bank's Controller Title Fetch",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "initiator": {
                "type": "string",
                "description": "Fixed value from any of them",
                "enum": [
                  "1LINK",
                  "RAAST"
                ],
                "example": "RAAST"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "initiator"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              }
            },
            "required": [
              "toAccount"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Amount of the transaction, it can be zero.",
                "example": 5000
              }
            },
            "required": [
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditPosting": {
        "description": "Representation of a Bank's Controller Credit Posting",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "senderBankIMD": {
                "type": "string",
                "minLength": 6,
                "maxLength": 24,
                "description": "The value comes if transaction received from 1LINK. In other case it will be blank",
                "example": ""
              },
              "senderBankBIC": {
                "type": "string",
                "minLength": 8,
                "maxLength": 24,
                "description": "The value comes if transaction received from RAAST. In other case it will be blank",
                "example": "NBPBPKKA"
              },
              "fromAccount": {
                "type": "string",
                "minLength": 5,
                "maxLength": 24,
                "description": "Sender IBAN / account",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC if value received in the payment request",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 5,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Beneficiary account title",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "3 digits numeric RAAST assigned payment purpose code. If payment received from 1LINK the value will be of 4 digits.\nplease refer to [Purpose Code Table](#purp-code)",
                "example": "0152"
              },
              "narration": {
                "type": "string",
                "minLength": 10,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction",
                "example": 5000
              },
              "instrId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 40,
                "description": "Instruction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank",
                "example": "TMIC230511125023876423"
              },
              "endToEndId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 40,
                "description": "End to end id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "txId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 40,
                "description": "Transaction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "TMIC230511125023876423"
              },
              "msgId": {
                "type": "string",
                "minLength": 10,
                "maxLength": 40,
                "description": "Message id received by RAAST.\n\nIn case of 1LINK the field will be blank.",
                "example": "TMICFBPK110523000111250233"
              }
            },
            "required": [
              "purposeCode",
              "amount"
            ]
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditAdvise": {
        "description": "Representation of a Bank's Controller Credit Advise",
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "rrn": {
                "$ref": "#/components/schemas/rrn"
              },
              "stan": {
                "$ref": "#/components/schemas/stan"
              },
              "txndate": {
                "$ref": "#/components/schemas/txndate"
              },
              "txntime": {
                "$ref": "#/components/schemas/txntime"
              },
              "initiator": {
                "type": "string",
                "description": "Transaction received by, any of followings",
                "enum": [
                  "1LINK",
                  "RAAST"
                ],
                "example": "RAAST"
              },
              "txnType": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "please refer to [Transaction Type Table](#tran-type)",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04"
                ],
                "example": "01"
              }
            },
            "required": [
              "rrn",
              "stan",
              "txndate",
              "txntime",
              "initiator",
              "txnType"
            ]
          },
          "senderinfo": {
            "type": "object",
            "properties": {
              "senderBankIMD": {
                "type": "string",
                "minLength": 6,
                "maxLength": 24,
                "description": "The value comes if transaction received from 1LINK. In other case it will be blank",
                "example": ""
              },
              "senderBankBIC": {
                "type": "string",
                "minLength": 8,
                "maxLength": 24,
                "description": "The value comes if transaction received from RAAST. In other case it will be blank",
                "example": "NBPBPKKA"
              },
              "fromAccount": {
                "type": "string",
                "minLength": 5,
                "maxLength": 24,
                "description": "Sender IBAN / account",
                "example": "PK56AIIN1234567890000001"
              },
              "fromAccountTitle": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Sender account title",
                "example": "Muhammad Ali"
              },
              "fromAccountCnic": {
                "type": "string",
                "minLength": 13,
                "maxLength": 13,
                "description": "Sender CNIC if value received in the payment request",
                "example": "1234512345671"
              }
            },
            "required": [
              "fromAccount",
              "fromAccountTitle"
            ]
          },
          "receiverinfo": {
            "type": "object",
            "properties": {
              "toAccount": {
                "type": "string",
                "minLength": 5,
                "maxLength": 24,
                "description": "Beneficiary account# or IBAN",
                "example": "PK76NBPA1234567890000999"
              },
              "toAccountTitle": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Beneficiary account title",
                "example": "Waqas Nizam"
              }
            },
            "required": [
              "toAccount",
              "toAccountTitle"
            ]
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "purposeCode": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "description": "3 digits numeric RAAST assigned payment purpose code. If payment received from 1LINK the value will be of 4 digits.\nplease refer to [Purpose Code Table](#purp-code)",
                "example": "0125"
              },
              "narration": {
                "type": "string",
                "minLength": 140,
                "maxLength": 140,
                "description": "Any alpha numeric text upto 140 characters",
                "example": "test transaction"
              },
              "amount": {
                "type": "number",
                "description": "Amount of the transaction",
                "example": 5000
              },
              "instrId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Instruction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank",
                "example": "TMIC230511125023876423"
              },
              "endToEndId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "End to end id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "txId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Transaction id received by RAAST.\n\n\nIn case of 1LINK the field will be blank.",
                "example": "TMIC230511125023876423"
              },
              "msgId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "***Message id received by RAAST***.\n\nIn case of 1LINK the field will be blank.",
                "example": "TMICFBPK110523000111250233"
              },
              "oneLinkrrn": {
                "type": "string",
                "minLength": 12,
                "maxLength": 12,
                "description": "Retrieval reference number.\n\nIn case of 1LINK, OC will send same value which comes from 1LINK in DE-37. \n\nIn case of RAAST the field will be blank",
                "example": "002236987456"
              },
              "oneLinkstan": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "System trace audit number.\n\nIn case of 1LINK, OC will send same value which comes from 1LINK in DE-11.\n\nIn case of RAAST the field will be blank.",
                "example": "987456"
              }
            },
            "required": [
              "purposeCode",
              "amount"
            ]
          },
          "orgTxnInfo": {
            "type": "object",
            "properties": {
              "orgtxndate": {
                "type": "string",
                "minLength": 8,
                "maxLength": 8,
                "description": "Original transaction date",
                "format": "yyyymmdd",
                "example": "20231015"
              },
              "orgtxntime": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "Original transaction time",
                "format": "hhmmss",
                "example": "182243"
              },
              "orginstrId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Original transaction instruction id",
                "example": "TMIC230511125023876423"
              },
              "orgendToEndId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Original transaction end to end id",
                "example": "1fc66b584e77-46e6-9dcb-fb12c00e7742"
              },
              "orgtxId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Original transaction id",
                "example": "TMIC230511125023876423"
              },
              "orgmsgId": {
                "type": "string",
                "minLength": 5,
                "maxLength": 40,
                "description": "Original transaction message id",
                "example": "TMICFBPK110523000111250233"
              }
            }
          },
          "reserveFields": {
            "type": "object",
            "properties": {
              "r1": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r2": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r3": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r4": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              },
              "r5": {
                "type": "string",
                "minLength": 100,
                "maxLength": 100,
                "description": "Reserved for future use",
                "example": ""
              }
            }
          }
        }
      },
      "b_CreditInquiry": {
        "description": "Representation of a Bank's Controller Credit Inquiry",
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/info"
          },
          "orgTxnInfo": {
            "type": "object",
            "properties": {
              "orgtxnrrn": {
                "type": "string",
                "minLength": 12,
                "maxLength": 12,
                "description": "Retrieval reference number",
                "example": "002236987456"
              },
              "orgtxnstan": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "description": "System trace audit number",
                "example": "987456"
              },
              "orgtxndate": {
                "type": "string",
                "minLength": 8,
                "maxLength": 8,
                "format": "yyyymmdd",
                "description": "Transaction Date",
                "example": "20231015"
              },
              "orgtxntime": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "format": "hhmmss",
                "description": "Transaction Time",
                "example": "182243"
              }
            },
            "required": [
              "orgtxnrrn",
              "orgtxnstan",
              "orgtxndate",
              "orgtxntime"
            ]
          }
        }
      },
      "rrn": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "<span style=\"color: green;\">***Unique Retrieval Reference Number***</span>. Can be used to trace the request ",
        "example": "002236987456"
      },
      "stan": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "description": "System trace audit number",
        "example": "987456"
      },
      "tfcorrelationId": {
        "type": "string",
        "minimum": 5,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Unique Correlation Id***</span>. The value will be same which channel received in response of title fetch",
        "example": "7ad7fb9f-99dc-4c2c-ab88-abddb87789a0"
      },
      "correlationId": {
        "type": "string",
        "minLength": 5,
        "maxLength": 40,
        "description": "Unique correlation id for the title fetch request. The value is in GUID format and will be sent by the initiator in payment call.     "
      },
      "msgId": {
        "type": "string",
        "minLength": 5,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Unique Message Id for RAAST payments***</span>. The key will be communicated end to end and will be used for e2e reconciliation. Bank is responsible to make sure that the id will not be duplicated in any case",
        "example": "MASH231016140256592221"
      },
      "authId": {
        "type": "string",
        "minLength": 5,
        "maxLength": 40,
        "description": "<span style=\"color: green;\">***Debit authorization unique reference number return by core banking***</span> in response of debit hold request",
        "example": "654123"
      },
      "txndate": {
        "type": "string",
        "minLength": 8,
        "maxLength": 8,
        "format": "yyyymmdd",
        "description": "Transaction Date",
        "example": "20231015"
      },
      "txntime": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "format": "hhmmss",
        "description": "Transaction Time",
        "example": "182243"
      },
      "response_code": {
        "type": "string",
        "minLength": 4,
        "maxLength": 4,
        "description": "Response code for the request"
      },
      "response_desc": {
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "description": "Description for the respective response code"
      },
      "rsp_rrn": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "Echo back"
      },
      "rsp_stan": {
        "type": "string",
        "minLength": 6,
        "maxLength": 6,
        "description": "Echo back"
      },
      "info": {
        "type": "object",
        "properties": {
          "rrn": {
            "$ref": "#/components/schemas/rrn"
          },
          "stan": {
            "$ref": "#/components/schemas/stan"
          },
          "txndate": {
            "$ref": "#/components/schemas/txndate"
          },
          "txntime": {
            "$ref": "#/components/schemas/txntime"
          }
        },
        "required": [
          "rrn",
          "stan",
          "txndate",
          "txntime"
        ]
      },
      "account": {
        "type": "object",
        "description": "Customer Account",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "currency": {
            "type": "string",
            "example": "PKR",
            "maxLength": 3
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "currency",
          "isDefault"
        ]
      },
      "id": {
        "type": "object",
        "properties": {
          "iban": {
            "type": "string",
            "example": "PK79NBPA0002004137343952",
            "maxLength": 35
          }
        },
        "required": [
          "iban"
        ]
      },
      "alias_type": {
        "type": "string",
        "example": "MOBILE",
        "enum": [
          "MOBILE",
          "CNIC",
          "EMAIL",
          "TXT"
        ]
      },
      "alias": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/alias_type"
          },
          "value": {
            "type": "string",
            "example": "03222507423"
          },
          "status": {
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "suspended",
              "inactive",
              "deleted"
            ]
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account"
            }
          }
        },
        "required": [
          "type",
          "value",
          "status",
          "accounts"
        ]
      },
      "uid": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "maxLength": 20,
            "example": "CNIC",
            "enum": [
              "CNIC",
              "NICOP",
              "POC",
              "REG_NO",
              "­NTN"
            ]
          },
          "value": {
            "type": "string",
            "maxLength": 20,
            "description": "Customer’s document number",
            "example": "4230146389021"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "customerInfo": {
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string",
            "example": "CNIC",
            "enum": [
              "CNIC",
              "NICOP",
              "POC",
              "REG_NO",
              "­NTN"
            ]
          },
          "documentNumber": {
            "type": "string",
            "example": "4230146389021",
            "description": "Customer’s document number",
            "maxLength": 20
          },
          "name": {
            "type": "string",
            "example": "Account Title here",
            "description": "Customer’s name",
            "maxLength": 140
          },
          "surname": {
            "type": "string",
            "example": "",
            "description": "Customer’s surname",
            "maxLength": 80
          },
          "gender": {
            "type": "string",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMA",
              "TRNS"
            ]
          },
          "birthDate": {
            "minLength": 10,
            "maxLength": 10,
            "type": "string",
            "example": "1987-01-28",
            "description": "Customer’s birth date",
            "format": "yyyy-mm-dd"
          },
          "startDate": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "example": "2021-05-15",
            "format": "yyyy-mm-dd"
          },
          "expirationDate": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "example": "2025-05-15",
            "format": "yyyy-mm-dd"
          }
        },
        "required": [
          "documentType",
          "documentNumber",
          "name",
          "surname",
          "gender",
          "birthDate",
          "startDate",
          "expirationDate"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "AUTHENTICATION",
      "tags": [
        "Token API SPECS"
      ]
    },
    {
      "name": "BANK API SPECS",
      "tags": [
        "Client Bank API Specs"
      ]
    },
    {
      "name": "OpenConnect API Specs",
      "tags": [
        "Billing API Specs",
        "CAS API Specs",
        "Payment API Specs",
        "Non Financial API Specs",
        "RTGS API Specs"
      ]
    }
  ]
}